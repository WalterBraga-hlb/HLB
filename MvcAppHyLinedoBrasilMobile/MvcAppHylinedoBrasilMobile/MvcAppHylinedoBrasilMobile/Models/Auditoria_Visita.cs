//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHylinedoBrasilMobile.Models
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Auditoria_Visita_Requisito))]
    public partial class Auditoria_Visita: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _iD = value;
                    OnPropertyChanged("ID");
                }
            }
        }
        private int _iD;
    
        [DataMember]
        public string Departamento
        {
            get { return _departamento; }
            set
            {
                if (_departamento != value)
                {
                    _departamento = value;
                    OnPropertyChanged("Departamento");
                }
            }
        }
        private string _departamento;
    
        [DataMember]
        public string Nucleo
        {
            get { return _nucleo; }
            set
            {
                if (_nucleo != value)
                {
                    _nucleo = value;
                    OnPropertyChanged("Nucleo");
                }
            }
        }
        private string _nucleo;
    
        [DataMember]
        public System.DateTime DataVisita
        {
            get { return _dataVisita; }
            set
            {
                if (_dataVisita != value)
                {
                    _dataVisita = value;
                    OnPropertyChanged("DataVisita");
                }
            }
        }
        private System.DateTime _dataVisita;
    
        [DataMember]
        public string Responsavel
        {
            get { return _responsavel; }
            set
            {
                if (_responsavel != value)
                {
                    _responsavel = value;
                    OnPropertyChanged("Responsavel");
                }
            }
        }
        private string _responsavel;
    
        [DataMember]
        public string ComentarioGeral
        {
            get { return _comentarioGeral; }
            set
            {
                if (_comentarioGeral != value)
                {
                    _comentarioGeral = value;
                    OnPropertyChanged("ComentarioGeral");
                }
            }
        }
        private string _comentarioGeral;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<Auditoria_Visita_Requisito> Auditoria_Visita_Requisito
        {
            get
            {
                if (_auditoria_Visita_Requisito == null)
                {
                    _auditoria_Visita_Requisito = new TrackableCollection<Auditoria_Visita_Requisito>();
                    _auditoria_Visita_Requisito.CollectionChanged += FixupAuditoria_Visita_Requisito;
                }
                return _auditoria_Visita_Requisito;
            }
            set
            {
                if (!ReferenceEquals(_auditoria_Visita_Requisito, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_auditoria_Visita_Requisito != null)
                    {
                        _auditoria_Visita_Requisito.CollectionChanged -= FixupAuditoria_Visita_Requisito;
                    }
                    _auditoria_Visita_Requisito = value;
                    if (_auditoria_Visita_Requisito != null)
                    {
                        _auditoria_Visita_Requisito.CollectionChanged += FixupAuditoria_Visita_Requisito;
                    }
                    OnNavigationPropertyChanged("Auditoria_Visita_Requisito");
                }
            }
        }
        private TrackableCollection<Auditoria_Visita_Requisito> _auditoria_Visita_Requisito;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Auditoria_Visita_Requisito.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupAuditoria_Visita_Requisito(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Auditoria_Visita_Requisito item in e.NewItems)
                {
                    item.Auditoria_Visita = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Auditoria_Visita_Requisito", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Auditoria_Visita_Requisito item in e.OldItems)
                {
                    if (ReferenceEquals(item.Auditoria_Visita, this))
                    {
                        item.Auditoria_Visita = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Auditoria_Visita_Requisito", item);
                    }
                }
            }
        }

        #endregion

    }
}

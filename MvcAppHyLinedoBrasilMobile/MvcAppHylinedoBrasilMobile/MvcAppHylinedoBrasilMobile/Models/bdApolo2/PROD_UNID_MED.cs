//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHylinedoBrasilMobile.Models.bdApolo2
{
    [DataContract(IsReference = true)]
    public partial class PROD_UNID_MED: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public string ProdCodEstr
        {
            get { return _prodCodEstr; }
            set
            {
                if (_prodCodEstr != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ProdCodEstr' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _prodCodEstr = value;
                    OnPropertyChanged("ProdCodEstr");
                }
            }
        }
        private string _prodCodEstr;
    
        [DataMember]
        public string ProdUnidMedCod
        {
            get { return _prodUnidMedCod; }
            set
            {
                if (_prodUnidMedCod != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ProdUnidMedCod' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _prodUnidMedCod = value;
                    OnPropertyChanged("ProdUnidMedCod");
                }
            }
        }
        private string _prodUnidMedCod;
    
        [DataMember]
        public short ProdUnidMedPos
        {
            get { return _prodUnidMedPos; }
            set
            {
                if (_prodUnidMedPos != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ProdUnidMedPos' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _prodUnidMedPos = value;
                    OnPropertyChanged("ProdUnidMedPos");
                }
            }
        }
        private short _prodUnidMedPos;
    
        [DataMember]
        public Nullable<decimal> ProdUnidMedPeso
        {
            get { return _prodUnidMedPeso; }
            set
            {
                if (_prodUnidMedPeso != value)
                {
                    _prodUnidMedPeso = value;
                    OnPropertyChanged("ProdUnidMedPeso");
                }
            }
        }
        private Nullable<decimal> _prodUnidMedPeso;
    
        [DataMember]
        public string ProdUnidMedPesoFD
        {
            get { return _prodUnidMedPesoFD; }
            set
            {
                if (_prodUnidMedPesoFD != value)
                {
                    _prodUnidMedPesoFD = value;
                    OnPropertyChanged("ProdUnidMedPesoFD");
                }
            }
        }
        private string _prodUnidMedPesoFD;
    
        [DataMember]
        public string ProdUnidMedCodBar
        {
            get { return _prodUnidMedCodBar; }
            set
            {
                if (_prodUnidMedCodBar != value)
                {
                    _prodUnidMedCodBar = value;
                    OnPropertyChanged("ProdUnidMedCodBar");
                }
            }
        }
        private string _prodUnidMedCodBar;
    
        [DataMember]
        public Nullable<decimal> ProdUnidMedQtdMinFat
        {
            get { return _prodUnidMedQtdMinFat; }
            set
            {
                if (_prodUnidMedQtdMinFat != value)
                {
                    _prodUnidMedQtdMinFat = value;
                    OnPropertyChanged("ProdUnidMedQtdMinFat");
                }
            }
        }
        private Nullable<decimal> _prodUnidMedQtdMinFat;
    
        [DataMember]
        public Nullable<decimal> ProdUnidMedPesoQtd
        {
            get { return _prodUnidMedPesoQtd; }
            set
            {
                if (_prodUnidMedPesoQtd != value)
                {
                    _prodUnidMedPesoQtd = value;
                    OnPropertyChanged("ProdUnidMedPesoQtd");
                }
            }
        }
        private Nullable<decimal> _prodUnidMedPesoQtd;
    
        [DataMember]
        public Nullable<decimal> ProdUnidMedFatorMult
        {
            get { return _prodUnidMedFatorMult; }
            set
            {
                if (_prodUnidMedFatorMult != value)
                {
                    _prodUnidMedFatorMult = value;
                    OnPropertyChanged("ProdUnidMedFatorMult");
                }
            }
        }
        private Nullable<decimal> _prodUnidMedFatorMult;
    
        [DataMember]
        public Nullable<System.DateTime> ProdUnidMedDataValidInic
        {
            get { return _prodUnidMedDataValidInic; }
            set
            {
                if (_prodUnidMedDataValidInic != value)
                {
                    _prodUnidMedDataValidInic = value;
                    OnPropertyChanged("ProdUnidMedDataValidInic");
                }
            }
        }
        private Nullable<System.DateTime> _prodUnidMedDataValidInic;
    
        [DataMember]
        public Nullable<System.DateTime> ProdUnidMedDataValidFim
        {
            get { return _prodUnidMedDataValidFim; }
            set
            {
                if (_prodUnidMedDataValidFim != value)
                {
                    _prodUnidMedDataValidFim = value;
                    OnPropertyChanged("ProdUnidMedDataValidFim");
                }
            }
        }
        private Nullable<System.DateTime> _prodUnidMedDataValidFim;
    
        [DataMember]
        public string ProdUnidMedLoteUnico
        {
            get { return _prodUnidMedLoteUnico; }
            set
            {
                if (_prodUnidMedLoteUnico != value)
                {
                    _prodUnidMedLoteUnico = value;
                    OnPropertyChanged("ProdUnidMedLoteUnico");
                }
            }
        }
        private string _prodUnidMedLoteUnico;
    
        [DataMember]
        public string ProdUnidMedEstat
        {
            get { return _prodUnidMedEstat; }
            set
            {
                if (_prodUnidMedEstat != value)
                {
                    _prodUnidMedEstat = value;
                    OnPropertyChanged("ProdUnidMedEstat");
                }
            }
        }
        private string _prodUnidMedEstat;
    
        [DataMember]
        public string ProdUnidMedCompra
        {
            get { return _prodUnidMedCompra; }
            set
            {
                if (_prodUnidMedCompra != value)
                {
                    _prodUnidMedCompra = value;
                    OnPropertyChanged("ProdUnidMedCompra");
                }
            }
        }
        private string _prodUnidMedCompra;
    
        [DataMember]
        public string ProdUnidMedProduc
        {
            get { return _prodUnidMedProduc; }
            set
            {
                if (_prodUnidMedProduc != value)
                {
                    _prodUnidMedProduc = value;
                    OnPropertyChanged("ProdUnidMedProduc");
                }
            }
        }
        private string _prodUnidMedProduc;
    
        [DataMember]
        public string ProdUnidMedPadVenda
        {
            get { return _prodUnidMedPadVenda; }
            set
            {
                if (_prodUnidMedPadVenda != value)
                {
                    _prodUnidMedPadVenda = value;
                    OnPropertyChanged("ProdUnidMedPadVenda");
                }
            }
        }
        private string _prodUnidMedPadVenda;
    
        [DataMember]
        public Nullable<short> ProdUnidMedSeq
        {
            get { return _prodUnidMedSeq; }
            set
            {
                if (_prodUnidMedSeq != value)
                {
                    _prodUnidMedSeq = value;
                    OnPropertyChanged("ProdUnidMedSeq");
                }
            }
        }
        private Nullable<short> _prodUnidMedSeq;
    
        [DataMember]
        public string ProdUnidMedExibeComprimVenda
        {
            get { return _prodUnidMedExibeComprimVenda; }
            set
            {
                if (_prodUnidMedExibeComprimVenda != value)
                {
                    _prodUnidMedExibeComprimVenda = value;
                    OnPropertyChanged("ProdUnidMedExibeComprimVenda");
                }
            }
        }
        private string _prodUnidMedExibeComprimVenda;
    
        [DataMember]
        public string ProdUnidMedExibeLargVenda
        {
            get { return _prodUnidMedExibeLargVenda; }
            set
            {
                if (_prodUnidMedExibeLargVenda != value)
                {
                    _prodUnidMedExibeLargVenda = value;
                    OnPropertyChanged("ProdUnidMedExibeLargVenda");
                }
            }
        }
        private string _prodUnidMedExibeLargVenda;
    
        [DataMember]
        public string ProdUnidMedExibeAltVenda
        {
            get { return _prodUnidMedExibeAltVenda; }
            set
            {
                if (_prodUnidMedExibeAltVenda != value)
                {
                    _prodUnidMedExibeAltVenda = value;
                    OnPropertyChanged("ProdUnidMedExibeAltVenda");
                }
            }
        }
        private string _prodUnidMedExibeAltVenda;
    
        [DataMember]
        public string ProdUnidMedDep
        {
            get { return _prodUnidMedDep; }
            set
            {
                if (_prodUnidMedDep != value)
                {
                    _prodUnidMedDep = value;
                    OnPropertyChanged("ProdUnidMedDep");
                }
            }
        }
        private string _prodUnidMedDep;
    
        [DataMember]
        public string ProdUnidMedCodAlt
        {
            get { return _prodUnidMedCodAlt; }
            set
            {
                if (_prodUnidMedCodAlt != value)
                {
                    _prodUnidMedCodAlt = value;
                    OnPropertyChanged("ProdUnidMedCodAlt");
                }
            }
        }
        private string _prodUnidMedCodAlt;
    
        [DataMember]
        public string ProdUnidMedPadMovEstq
        {
            get { return _prodUnidMedPadMovEstq; }
            set
            {
                if (_prodUnidMedPadMovEstq != value)
                {
                    _prodUnidMedPadMovEstq = value;
                    OnPropertyChanged("ProdUnidMedPadMovEstq");
                }
            }
        }
        private string _prodUnidMedPadMovEstq;
    
        [DataMember]
        public Nullable<System.DateTime> ProdUnidMedUltDataMod
        {
            get { return _prodUnidMedUltDataMod; }
            set
            {
                if (_prodUnidMedUltDataMod != value)
                {
                    _prodUnidMedUltDataMod = value;
                    OnPropertyChanged("ProdUnidMedUltDataMod");
                }
            }
        }
        private Nullable<System.DateTime> _prodUnidMedUltDataMod;
    
        [DataMember]
        public Nullable<decimal> ProdUnidMedCubagRod
        {
            get { return _prodUnidMedCubagRod; }
            set
            {
                if (_prodUnidMedCubagRod != value)
                {
                    _prodUnidMedCubagRod = value;
                    OnPropertyChanged("ProdUnidMedCubagRod");
                }
            }
        }
        private Nullable<decimal> _prodUnidMedCubagRod;
    
        [DataMember]
        public string ProdUnidMedEntrega
        {
            get { return _prodUnidMedEntrega; }
            set
            {
                if (_prodUnidMedEntrega != value)
                {
                    _prodUnidMedEntrega = value;
                    OnPropertyChanged("ProdUnidMedEntrega");
                }
            }
        }
        private string _prodUnidMedEntrega;
    
        [DataMember]
        public string ProdUnidMedObjVenda
        {
            get { return _prodUnidMedObjVenda; }
            set
            {
                if (_prodUnidMedObjVenda != value)
                {
                    _prodUnidMedObjVenda = value;
                    OnPropertyChanged("ProdUnidMedObjVenda");
                }
            }
        }
        private string _prodUnidMedObjVenda;
    
        [DataMember]
        public Nullable<decimal> ProdUnidMedFatorMultFornecto
        {
            get { return _prodUnidMedFatorMultFornecto; }
            set
            {
                if (_prodUnidMedFatorMultFornecto != value)
                {
                    _prodUnidMedFatorMultFornecto = value;
                    OnPropertyChanged("ProdUnidMedFatorMultFornecto");
                }
            }
        }
        private Nullable<decimal> _prodUnidMedFatorMultFornecto;
    
        [DataMember]
        public Nullable<decimal> ProdUnidMedFatorFCI
        {
            get { return _prodUnidMedFatorFCI; }
            set
            {
                if (_prodUnidMedFatorFCI != value)
                {
                    _prodUnidMedFatorFCI = value;
                    OnPropertyChanged("ProdUnidMedFatorFCI");
                }
            }
        }
        private Nullable<decimal> _prodUnidMedFatorFCI;
    
        [DataMember]
        public Nullable<int> ProdUnidMedSeqFCI
        {
            get { return _prodUnidMedSeqFCI; }
            set
            {
                if (_prodUnidMedSeqFCI != value)
                {
                    _prodUnidMedSeqFCI = value;
                    OnPropertyChanged("ProdUnidMedSeqFCI");
                }
            }
        }
        private Nullable<int> _prodUnidMedSeqFCI;
    
        [DataMember]
        public string PRODUNIDMEDTRIBUT
        {
            get { return _pRODUNIDMEDTRIBUT; }
            set
            {
                if (_pRODUNIDMEDTRIBUT != value)
                {
                    _pRODUNIDMEDTRIBUT = value;
                    OnPropertyChanged("PRODUNIDMEDTRIBUT");
                }
            }
        }
        private string _pRODUNIDMEDTRIBUT;
    
        [DataMember]
        public string ProdUnidMedTributExport
        {
            get { return _prodUnidMedTributExport; }
            set
            {
                if (_prodUnidMedTributExport != value)
                {
                    _prodUnidMedTributExport = value;
                    OnPropertyChanged("ProdUnidMedTributExport");
                }
            }
        }
        private string _prodUnidMedTributExport;
    
        [DataMember]
        public string ProdUnidMedCodBarUnidTrib
        {
            get { return _prodUnidMedCodBarUnidTrib; }
            set
            {
                if (_prodUnidMedCodBarUnidTrib != value)
                {
                    _prodUnidMedCodBarUnidTrib = value;
                    OnPropertyChanged("ProdUnidMedCodBarUnidTrib");
                }
            }
        }
        private string _prodUnidMedCodBarUnidTrib;
    
        [DataMember]
        public string ProdUnidMedPrNeg
        {
            get { return _prodUnidMedPrNeg; }
            set
            {
                if (_prodUnidMedPrNeg != value)
                {
                    _prodUnidMedPrNeg = value;
                    OnPropertyChanged("ProdUnidMedPrNeg");
                }
            }
        }
        private string _prodUnidMedPrNeg;
    
        [DataMember]
        public Nullable<decimal> PRODUNIDMEDCOMPBRUTO
        {
            get { return _pRODUNIDMEDCOMPBRUTO; }
            set
            {
                if (_pRODUNIDMEDCOMPBRUTO != value)
                {
                    _pRODUNIDMEDCOMPBRUTO = value;
                    OnPropertyChanged("PRODUNIDMEDCOMPBRUTO");
                }
            }
        }
        private Nullable<decimal> _pRODUNIDMEDCOMPBRUTO;
    
        [DataMember]
        public Nullable<decimal> PRODUNIDMEDCOMPLIQ
        {
            get { return _pRODUNIDMEDCOMPLIQ; }
            set
            {
                if (_pRODUNIDMEDCOMPLIQ != value)
                {
                    _pRODUNIDMEDCOMPLIQ = value;
                    OnPropertyChanged("PRODUNIDMEDCOMPLIQ");
                }
            }
        }
        private Nullable<decimal> _pRODUNIDMEDCOMPLIQ;
    
        [DataMember]
        public Nullable<decimal> PRODUNIDMEDLARGBRUTA
        {
            get { return _pRODUNIDMEDLARGBRUTA; }
            set
            {
                if (_pRODUNIDMEDLARGBRUTA != value)
                {
                    _pRODUNIDMEDLARGBRUTA = value;
                    OnPropertyChanged("PRODUNIDMEDLARGBRUTA");
                }
            }
        }
        private Nullable<decimal> _pRODUNIDMEDLARGBRUTA;
    
        [DataMember]
        public Nullable<decimal> PRODUNIDMEDLARGLIQ
        {
            get { return _pRODUNIDMEDLARGLIQ; }
            set
            {
                if (_pRODUNIDMEDLARGLIQ != value)
                {
                    _pRODUNIDMEDLARGLIQ = value;
                    OnPropertyChanged("PRODUNIDMEDLARGLIQ");
                }
            }
        }
        private Nullable<decimal> _pRODUNIDMEDLARGLIQ;
    
        [DataMember]
        public Nullable<decimal> PRODUNIDMEDALTBRUTA
        {
            get { return _pRODUNIDMEDALTBRUTA; }
            set
            {
                if (_pRODUNIDMEDALTBRUTA != value)
                {
                    _pRODUNIDMEDALTBRUTA = value;
                    OnPropertyChanged("PRODUNIDMEDALTBRUTA");
                }
            }
        }
        private Nullable<decimal> _pRODUNIDMEDALTBRUTA;
    
        [DataMember]
        public Nullable<decimal> PRODUNIDMEDALTLIQ
        {
            get { return _pRODUNIDMEDALTLIQ; }
            set
            {
                if (_pRODUNIDMEDALTLIQ != value)
                {
                    _pRODUNIDMEDALTLIQ = value;
                    OnPropertyChanged("PRODUNIDMEDALTLIQ");
                }
            }
        }
        private Nullable<decimal> _pRODUNIDMEDALTLIQ;
    
        [DataMember]
        public string PRODUNIDMEDPALETIZACAO
        {
            get { return _pRODUNIDMEDPALETIZACAO; }
            set
            {
                if (_pRODUNIDMEDPALETIZACAO != value)
                {
                    _pRODUNIDMEDPALETIZACAO = value;
                    OnPropertyChanged("PRODUNIDMEDPALETIZACAO");
                }
            }
        }
        private string _pRODUNIDMEDPALETIZACAO;
    
        [DataMember]
        public Nullable<int> PRODUNIDMEDACONDPALET
        {
            get { return _pRODUNIDMEDACONDPALET; }
            set
            {
                if (_pRODUNIDMEDACONDPALET != value)
                {
                    _pRODUNIDMEDACONDPALET = value;
                    OnPropertyChanged("PRODUNIDMEDACONDPALET");
                }
            }
        }
        private Nullable<int> _pRODUNIDMEDACONDPALET;
    
        [DataMember]
        public string USERExibeRastrIncubatorio
        {
            get { return _uSERExibeRastrIncubatorio; }
            set
            {
                if (_uSERExibeRastrIncubatorio != value)
                {
                    _uSERExibeRastrIncubatorio = value;
                    OnPropertyChanged("USERExibeRastrIncubatorio");
                }
            }
        }
        private string _uSERExibeRastrIncubatorio;
    
        [DataMember]
        public string ProdUnidMedVisualAplicExt
        {
            get { return _prodUnidMedVisualAplicExt; }
            set
            {
                if (_prodUnidMedVisualAplicExt != value)
                {
                    _prodUnidMedVisualAplicExt = value;
                    OnPropertyChanged("ProdUnidMedVisualAplicExt");
                }
            }
        }
        private string _prodUnidMedVisualAplicExt;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion

    }
}

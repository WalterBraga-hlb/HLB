//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHylinedoBrasilMobile.Models.bdApolo2
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(REQ_COMP))]
    [KnownType(typeof(USUARIO))]
    [KnownType(typeof(ITEM_PED_COMP))]
    public partial class ITEM_REQ_COMP: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public string EmpCod
        {
            get { return _empCod; }
            set
            {
                if (_empCod != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'EmpCod' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    if (!IsDeserializing)
                    {
                        if (REQ_COMP != null && REQ_COMP.EmpCod != value)
                        {
                            REQ_COMP = null;
                        }
                    }
                    _empCod = value;
                    OnPropertyChanged("EmpCod");
                }
            }
        }
        private string _empCod;
    
        [DataMember]
        public string ReqCompNum
        {
            get { return _reqCompNum; }
            set
            {
                if (_reqCompNum != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ReqCompNum' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    if (!IsDeserializing)
                    {
                        if (REQ_COMP != null && REQ_COMP.ReqCompNum != value)
                        {
                            REQ_COMP = null;
                        }
                    }
                    _reqCompNum = value;
                    OnPropertyChanged("ReqCompNum");
                }
            }
        }
        private string _reqCompNum;
    
        [DataMember]
        public short ItReqCompSeq
        {
            get { return _itReqCompSeq; }
            set
            {
                if (_itReqCompSeq != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ItReqCompSeq' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _itReqCompSeq = value;
                    OnPropertyChanged("ItReqCompSeq");
                }
            }
        }
        private short _itReqCompSeq;
    
        [DataMember]
        public string ItReqCompServ
        {
            get { return _itReqCompServ; }
            set
            {
                if (_itReqCompServ != value)
                {
                    _itReqCompServ = value;
                    OnPropertyChanged("ItReqCompServ");
                }
            }
        }
        private string _itReqCompServ;
    
        [DataMember]
        public string ProdCodEstr
        {
            get { return _prodCodEstr; }
            set
            {
                if (_prodCodEstr != value)
                {
                    _prodCodEstr = value;
                    OnPropertyChanged("ProdCodEstr");
                }
            }
        }
        private string _prodCodEstr;
    
        [DataMember]
        public string ProdDivNome
        {
            get { return _prodDivNome; }
            set
            {
                if (_prodDivNome != value)
                {
                    _prodDivNome = value;
                    OnPropertyChanged("ProdDivNome");
                }
            }
        }
        private string _prodDivNome;
    
        [DataMember]
        public string ItReqCompUnidMedCod
        {
            get { return _itReqCompUnidMedCod; }
            set
            {
                if (_itReqCompUnidMedCod != value)
                {
                    _itReqCompUnidMedCod = value;
                    OnPropertyChanged("ItReqCompUnidMedCod");
                }
            }
        }
        private string _itReqCompUnidMedCod;
    
        [DataMember]
        public Nullable<short> ItReqCompUnidMedPos
        {
            get { return _itReqCompUnidMedPos; }
            set
            {
                if (_itReqCompUnidMedPos != value)
                {
                    _itReqCompUnidMedPos = value;
                    OnPropertyChanged("ItReqCompUnidMedPos");
                }
            }
        }
        private Nullable<short> _itReqCompUnidMedPos;
    
        [DataMember]
        public Nullable<decimal> ItReqCompQtdUnidMed
        {
            get { return _itReqCompQtdUnidMed; }
            set
            {
                if (_itReqCompQtdUnidMed != value)
                {
                    _itReqCompQtdUnidMed = value;
                    OnPropertyChanged("ItReqCompQtdUnidMed");
                }
            }
        }
        private Nullable<decimal> _itReqCompQtdUnidMed;
    
        [DataMember]
        public Nullable<decimal> ItReqCompQtd
        {
            get { return _itReqCompQtd; }
            set
            {
                if (_itReqCompQtd != value)
                {
                    _itReqCompQtd = value;
                    OnPropertyChanged("ItReqCompQtd");
                }
            }
        }
        private Nullable<decimal> _itReqCompQtd;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqCompDataNec
        {
            get { return _itReqCompDataNec; }
            set
            {
                if (_itReqCompDataNec != value)
                {
                    _itReqCompDataNec = value;
                    OnPropertyChanged("ItReqCompDataNec");
                }
            }
        }
        private Nullable<System.DateTime> _itReqCompDataNec;
    
        [DataMember]
        public string ItReqCompCot
        {
            get { return _itReqCompCot; }
            set
            {
                if (_itReqCompCot != value)
                {
                    _itReqCompCot = value;
                    OnPropertyChanged("ItReqCompCot");
                }
            }
        }
        private string _itReqCompCot;
    
        [DataMember]
        public string ItReqCompObs
        {
            get { return _itReqCompObs; }
            set
            {
                if (_itReqCompObs != value)
                {
                    _itReqCompObs = value;
                    OnPropertyChanged("ItReqCompObs");
                }
            }
        }
        private string _itReqCompObs;
    
        [DataMember]
        public string ItReqCompAprovUsuCod
        {
            get { return _itReqCompAprovUsuCod; }
            set
            {
                if (_itReqCompAprovUsuCod != value)
                {
                    ChangeTracker.RecordOriginalValue("ItReqCompAprovUsuCod", _itReqCompAprovUsuCod);
                    if (!IsDeserializing)
                    {
                        if (USUARIO != null && USUARIO.UsuCod != value)
                        {
                            USUARIO = null;
                        }
                    }
                    _itReqCompAprovUsuCod = value;
                    OnPropertyChanged("ItReqCompAprovUsuCod");
                }
            }
        }
        private string _itReqCompAprovUsuCod;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqCompAprovData
        {
            get { return _itReqCompAprovData; }
            set
            {
                if (_itReqCompAprovData != value)
                {
                    _itReqCompAprovData = value;
                    OnPropertyChanged("ItReqCompAprovData");
                }
            }
        }
        private Nullable<System.DateTime> _itReqCompAprovData;
    
        [DataMember]
        public string ItReqCompPed
        {
            get { return _itReqCompPed; }
            set
            {
                if (_itReqCompPed != value)
                {
                    _itReqCompPed = value;
                    OnPropertyChanged("ItReqCompPed");
                }
            }
        }
        private string _itReqCompPed;
    
        [DataMember]
        public Nullable<decimal> ItReqCompQtdCalc
        {
            get { return _itReqCompQtdCalc; }
            set
            {
                if (_itReqCompQtdCalc != value)
                {
                    _itReqCompQtdCalc = value;
                    OnPropertyChanged("ItReqCompQtdCalc");
                }
            }
        }
        private Nullable<decimal> _itReqCompQtdCalc;
    
        [DataMember]
        public string ItReqCompFinalidade
        {
            get { return _itReqCompFinalidade; }
            set
            {
                if (_itReqCompFinalidade != value)
                {
                    _itReqCompFinalidade = value;
                    OnPropertyChanged("ItReqCompFinalidade");
                }
            }
        }
        private string _itReqCompFinalidade;
    
        [DataMember]
        public string ItReqCompUrgente
        {
            get { return _itReqCompUrgente; }
            set
            {
                if (_itReqCompUrgente != value)
                {
                    _itReqCompUrgente = value;
                    OnPropertyChanged("ItReqCompUrgente");
                }
            }
        }
        private string _itReqCompUrgente;
    
        [DataMember]
        public Nullable<short> ItReqCompSeqItOrig
        {
            get { return _itReqCompSeqItOrig; }
            set
            {
                if (_itReqCompSeqItOrig != value)
                {
                    _itReqCompSeqItOrig = value;
                    OnPropertyChanged("ItReqCompSeqItOrig");
                }
            }
        }
        private Nullable<short> _itReqCompSeqItOrig;
    
        [DataMember]
        public Nullable<short> ItReqCompSeqCompItOrig
        {
            get { return _itReqCompSeqCompItOrig; }
            set
            {
                if (_itReqCompSeqCompItOrig != value)
                {
                    _itReqCompSeqCompItOrig = value;
                    OnPropertyChanged("ItReqCompSeqCompItOrig");
                }
            }
        }
        private Nullable<short> _itReqCompSeqCompItOrig;
    
        [DataMember]
        public string ItReqCompNumPedEnt
        {
            get { return _itReqCompNumPedEnt; }
            set
            {
                if (_itReqCompNumPedEnt != value)
                {
                    _itReqCompNumPedEnt = value;
                    OnPropertyChanged("ItReqCompNumPedEnt");
                }
            }
        }
        private string _itReqCompNumPedEnt;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqCompDataSolic
        {
            get { return _itReqCompDataSolic; }
            set
            {
                if (_itReqCompDataSolic != value)
                {
                    _itReqCompDataSolic = value;
                    OnPropertyChanged("ItReqCompDataSolic");
                }
            }
        }
        private Nullable<System.DateTime> _itReqCompDataSolic;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqCompDataProm
        {
            get { return _itReqCompDataProm; }
            set
            {
                if (_itReqCompDataProm != value)
                {
                    _itReqCompDataProm = value;
                    OnPropertyChanged("ItReqCompDataProm");
                }
            }
        }
        private Nullable<System.DateTime> _itReqCompDataProm;
    
        [DataMember]
        public Nullable<decimal> ItReqCompQtdEntregaParc
        {
            get { return _itReqCompQtdEntregaParc; }
            set
            {
                if (_itReqCompQtdEntregaParc != value)
                {
                    _itReqCompQtdEntregaParc = value;
                    OnPropertyChanged("ItReqCompQtdEntregaParc");
                }
            }
        }
        private Nullable<decimal> _itReqCompQtdEntregaParc;
    
        [DataMember]
        public string ItReqCompNumProdEnt
        {
            get { return _itReqCompNumProdEnt; }
            set
            {
                if (_itReqCompNumProdEnt != value)
                {
                    _itReqCompNumProdEnt = value;
                    OnPropertyChanged("ItReqCompNumProdEnt");
                }
            }
        }
        private string _itReqCompNumProdEnt;
    
        [DataMember]
        public string ItReqCompUtilizProm
        {
            get { return _itReqCompUtilizProm; }
            set
            {
                if (_itReqCompUtilizProm != value)
                {
                    _itReqCompUtilizProm = value;
                    OnPropertyChanged("ItReqCompUtilizProm");
                }
            }
        }
        private string _itReqCompUtilizProm;
    
        [DataMember]
        public string ItReqCompUtilizShortForm
        {
            get { return _itReqCompUtilizShortForm; }
            set
            {
                if (_itReqCompUtilizShortForm != value)
                {
                    _itReqCompUtilizShortForm = value;
                    OnPropertyChanged("ItReqCompUtilizShortForm");
                }
            }
        }
        private string _itReqCompUtilizShortForm;
    
        [DataMember]
        public Nullable<decimal> ItReqCompValShortForm
        {
            get { return _itReqCompValShortForm; }
            set
            {
                if (_itReqCompValShortForm != value)
                {
                    _itReqCompValShortForm = value;
                    OnPropertyChanged("ItReqCompValShortForm");
                }
            }
        }
        private Nullable<decimal> _itReqCompValShortForm;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqCompDataPedEnt
        {
            get { return _itReqCompDataPedEnt; }
            set
            {
                if (_itReqCompDataPedEnt != value)
                {
                    _itReqCompDataPedEnt = value;
                    OnPropertyChanged("ItReqCompDataPedEnt");
                }
            }
        }
        private Nullable<System.DateTime> _itReqCompDataPedEnt;
    
        [DataMember]
        public string GrpCompraCod
        {
            get { return _grpCompraCod; }
            set
            {
                if (_grpCompraCod != value)
                {
                    _grpCompraCod = value;
                    OnPropertyChanged("GrpCompraCod");
                }
            }
        }
        private string _grpCompraCod;
    
        [DataMember]
        public string ItReqCompAprov
        {
            get { return _itReqCompAprov; }
            set
            {
                if (_itReqCompAprov != value)
                {
                    _itReqCompAprov = value;
                    OnPropertyChanged("ItReqCompAprov");
                }
            }
        }
        private string _itReqCompAprov;
    
        [DataMember]
        public string ItReqCompOcorMotReprov
        {
            get { return _itReqCompOcorMotReprov; }
            set
            {
                if (_itReqCompOcorMotReprov != value)
                {
                    _itReqCompOcorMotReprov = value;
                    OnPropertyChanged("ItReqCompOcorMotReprov");
                }
            }
        }
        private string _itReqCompOcorMotReprov;
    
        [DataMember]
        public Nullable<short> ItReqCompPrzComercDias
        {
            get { return _itReqCompPrzComercDias; }
            set
            {
                if (_itReqCompPrzComercDias != value)
                {
                    _itReqCompPrzComercDias = value;
                    OnPropertyChanged("ItReqCompPrzComercDias");
                }
            }
        }
        private Nullable<short> _itReqCompPrzComercDias;
    
        [DataMember]
        public string ItReqCompNumShortForm
        {
            get { return _itReqCompNumShortForm; }
            set
            {
                if (_itReqCompNumShortForm != value)
                {
                    _itReqCompNumShortForm = value;
                    OnPropertyChanged("ItReqCompNumShortForm");
                }
            }
        }
        private string _itReqCompNumShortForm;
    
        [DataMember]
        public string ItReqCompRes
        {
            get { return _itReqCompRes; }
            set
            {
                if (_itReqCompRes != value)
                {
                    _itReqCompRes = value;
                    OnPropertyChanged("ItReqCompRes");
                }
            }
        }
        private string _itReqCompRes;
    
        [DataMember]
        public string ItReqCompSelec
        {
            get { return _itReqCompSelec; }
            set
            {
                if (_itReqCompSelec != value)
                {
                    _itReqCompSelec = value;
                    OnPropertyChanged("ItReqCompSelec");
                }
            }
        }
        private string _itReqCompSelec;
    
        [DataMember]
        public string ItReqCompTipoEntrega
        {
            get { return _itReqCompTipoEntrega; }
            set
            {
                if (_itReqCompTipoEntrega != value)
                {
                    _itReqCompTipoEntrega = value;
                    OnPropertyChanged("ItReqCompTipoEntrega");
                }
            }
        }
        private string _itReqCompTipoEntrega;
    
        [DataMember]
        public string ItReqCompSugestaoComp
        {
            get { return _itReqCompSugestaoComp; }
            set
            {
                if (_itReqCompSugestaoComp != value)
                {
                    _itReqCompSugestaoComp = value;
                    OnPropertyChanged("ItReqCompSugestaoComp");
                }
            }
        }
        private string _itReqCompSugestaoComp;
    
        [DataMember]
        public Nullable<decimal> ItReqCompValLimite
        {
            get { return _itReqCompValLimite; }
            set
            {
                if (_itReqCompValLimite != value)
                {
                    _itReqCompValLimite = value;
                    OnPropertyChanged("ItReqCompValLimite");
                }
            }
        }
        private Nullable<decimal> _itReqCompValLimite;
    
        [DataMember]
        public string ITREQCOMPSTATDISPONIB
        {
            get { return _iTREQCOMPSTATDISPONIB; }
            set
            {
                if (_iTREQCOMPSTATDISPONIB != value)
                {
                    _iTREQCOMPSTATDISPONIB = value;
                    OnPropertyChanged("ITREQCOMPSTATDISPONIB");
                }
            }
        }
        private string _iTREQCOMPSTATDISPONIB;
    
        [DataMember]
        public string ITREQCOMPEMUSOPOR
        {
            get { return _iTREQCOMPEMUSOPOR; }
            set
            {
                if (_iTREQCOMPEMUSOPOR != value)
                {
                    _iTREQCOMPEMUSOPOR = value;
                    OnPropertyChanged("ITREQCOMPEMUSOPOR");
                }
            }
        }
        private string _iTREQCOMPEMUSOPOR;
    
        [DataMember]
        public string VerbaCompCod
        {
            get { return _verbaCompCod; }
            set
            {
                if (_verbaCompCod != value)
                {
                    _verbaCompCod = value;
                    OnPropertyChanged("VerbaCompCod");
                }
            }
        }
        private string _verbaCompCod;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqCompDataSaidaPassag
        {
            get { return _itReqCompDataSaidaPassag; }
            set
            {
                if (_itReqCompDataSaidaPassag != value)
                {
                    _itReqCompDataSaidaPassag = value;
                    OnPropertyChanged("ItReqCompDataSaidaPassag");
                }
            }
        }
        private Nullable<System.DateTime> _itReqCompDataSaidaPassag;
    
        [DataMember]
        public string ItReqCompTrecho
        {
            get { return _itReqCompTrecho; }
            set
            {
                if (_itReqCompTrecho != value)
                {
                    _itReqCompTrecho = value;
                    OnPropertyChanged("ItReqCompTrecho");
                }
            }
        }
        private string _itReqCompTrecho;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqCompHoraSaidaPassag
        {
            get { return _itReqCompHoraSaidaPassag; }
            set
            {
                if (_itReqCompHoraSaidaPassag != value)
                {
                    _itReqCompHoraSaidaPassag = value;
                    OnPropertyChanged("ItReqCompHoraSaidaPassag");
                }
            }
        }
        private Nullable<System.DateTime> _itReqCompHoraSaidaPassag;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqCompHoraChegada
        {
            get { return _itReqCompHoraChegada; }
            set
            {
                if (_itReqCompHoraChegada != value)
                {
                    _itReqCompHoraChegada = value;
                    OnPropertyChanged("ItReqCompHoraChegada");
                }
            }
        }
        private Nullable<System.DateTime> _itReqCompHoraChegada;
    
        [DataMember]
        public string ItReqCompCidHosped
        {
            get { return _itReqCompCidHosped; }
            set
            {
                if (_itReqCompCidHosped != value)
                {
                    _itReqCompCidHosped = value;
                    OnPropertyChanged("ItReqCompCidHosped");
                }
            }
        }
        private string _itReqCompCidHosped;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqCompDataCheckIn
        {
            get { return _itReqCompDataCheckIn; }
            set
            {
                if (_itReqCompDataCheckIn != value)
                {
                    _itReqCompDataCheckIn = value;
                    OnPropertyChanged("ItReqCompDataCheckIn");
                }
            }
        }
        private Nullable<System.DateTime> _itReqCompDataCheckIn;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqCompDataCheckOut
        {
            get { return _itReqCompDataCheckOut; }
            set
            {
                if (_itReqCompDataCheckOut != value)
                {
                    _itReqCompDataCheckOut = value;
                    OnPropertyChanged("ItReqCompDataCheckOut");
                }
            }
        }
        private Nullable<System.DateTime> _itReqCompDataCheckOut;
    
        [DataMember]
        public string ItReqCompNomeHotel
        {
            get { return _itReqCompNomeHotel; }
            set
            {
                if (_itReqCompNomeHotel != value)
                {
                    _itReqCompNomeHotel = value;
                    OnPropertyChanged("ItReqCompNomeHotel");
                }
            }
        }
        private string _itReqCompNomeHotel;
    
        [DataMember]
        public string ItReqCompCidLocacaoVeic
        {
            get { return _itReqCompCidLocacaoVeic; }
            set
            {
                if (_itReqCompCidLocacaoVeic != value)
                {
                    _itReqCompCidLocacaoVeic = value;
                    OnPropertyChanged("ItReqCompCidLocacaoVeic");
                }
            }
        }
        private string _itReqCompCidLocacaoVeic;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqCompDataRetVeic
        {
            get { return _itReqCompDataRetVeic; }
            set
            {
                if (_itReqCompDataRetVeic != value)
                {
                    _itReqCompDataRetVeic = value;
                    OnPropertyChanged("ItReqCompDataRetVeic");
                }
            }
        }
        private Nullable<System.DateTime> _itReqCompDataRetVeic;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqCompDataDevVeic
        {
            get { return _itReqCompDataDevVeic; }
            set
            {
                if (_itReqCompDataDevVeic != value)
                {
                    _itReqCompDataDevVeic = value;
                    OnPropertyChanged("ItReqCompDataDevVeic");
                }
            }
        }
        private Nullable<System.DateTime> _itReqCompDataDevVeic;
    
        [DataMember]
        public string ItReqCompNomeLocadVeic
        {
            get { return _itReqCompNomeLocadVeic; }
            set
            {
                if (_itReqCompNomeLocadVeic != value)
                {
                    _itReqCompNomeLocadVeic = value;
                    OnPropertyChanged("ItReqCompNomeLocadVeic");
                }
            }
        }
        private string _itReqCompNomeLocadVeic;
    
        [DataMember]
        public string USERSetor
        {
            get { return _uSERSetor; }
            set
            {
                if (_uSERSetor != value)
                {
                    _uSERSetor = value;
                    OnPropertyChanged("USERSetor");
                }
            }
        }
        private string _uSERSetor;
    
        [DataMember]
        public string USERUsuCodPreAprovacao
        {
            get { return _uSERUsuCodPreAprovacao; }
            set
            {
                if (_uSERUsuCodPreAprovacao != value)
                {
                    _uSERUsuCodPreAprovacao = value;
                    OnPropertyChanged("USERUsuCodPreAprovacao");
                }
            }
        }
        private string _uSERUsuCodPreAprovacao;
    
        [DataMember]
        public Nullable<System.DateTime> USERDataPreAprovacao
        {
            get { return _uSERDataPreAprovacao; }
            set
            {
                if (_uSERDataPreAprovacao != value)
                {
                    _uSERDataPreAprovacao = value;
                    OnPropertyChanged("USERDataPreAprovacao");
                }
            }
        }
        private Nullable<System.DateTime> _uSERDataPreAprovacao;
    
        [DataMember]
        public Nullable<decimal> USERQtdParcial
        {
            get { return _uSERQtdParcial; }
            set
            {
                if (_uSERQtdParcial != value)
                {
                    _uSERQtdParcial = value;
                    OnPropertyChanged("USERQtdParcial");
                }
            }
        }
        private Nullable<decimal> _uSERQtdParcial;
    
        [DataMember]
        public string ITREQCOMPCOTCOMPNUM
        {
            get { return _iTREQCOMPCOTCOMPNUM; }
            set
            {
                if (_iTREQCOMPCOTCOMPNUM != value)
                {
                    _iTREQCOMPCOTCOMPNUM = value;
                    OnPropertyChanged("ITREQCOMPCOTCOMPNUM");
                }
            }
        }
        private string _iTREQCOMPCOTCOMPNUM;
    
        [DataMember]
        public string ITREQCOMPPEDCOMPNUM
        {
            get { return _iTREQCOMPPEDCOMPNUM; }
            set
            {
                if (_iTREQCOMPPEDCOMPNUM != value)
                {
                    _iTREQCOMPPEDCOMPNUM = value;
                    OnPropertyChanged("ITREQCOMPPEDCOMPNUM");
                }
            }
        }
        private string _iTREQCOMPPEDCOMPNUM;
    
        [DataMember]
        public string CCtrlCodEstr
        {
            get { return _cCtrlCodEstr; }
            set
            {
                if (_cCtrlCodEstr != value)
                {
                    _cCtrlCodEstr = value;
                    OnPropertyChanged("CCtrlCodEstr");
                }
            }
        }
        private string _cCtrlCodEstr;
    
        [DataMember]
        public Nullable<decimal> ItReqCompQtdUnidProduc
        {
            get { return _itReqCompQtdUnidProduc; }
            set
            {
                if (_itReqCompQtdUnidProduc != value)
                {
                    _itReqCompQtdUnidProduc = value;
                    OnPropertyChanged("ItReqCompQtdUnidProduc");
                }
            }
        }
        private Nullable<decimal> _itReqCompQtdUnidProduc;
    
        [DataMember]
        public string USERVeiculo
        {
            get { return _uSERVeiculo; }
            set
            {
                if (_uSERVeiculo != value)
                {
                    _uSERVeiculo = value;
                    OnPropertyChanged("USERVeiculo");
                }
            }
        }
        private string _uSERVeiculo;
    
        [DataMember]
        public string ItReqCompProdCodAlt
        {
            get { return _itReqCompProdCodAlt; }
            set
            {
                if (_itReqCompProdCodAlt != value)
                {
                    _itReqCompProdCodAlt = value;
                    OnPropertyChanged("ItReqCompProdCodAlt");
                }
            }
        }
        private string _itReqCompProdCodAlt;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public REQ_COMP REQ_COMP
        {
            get { return _rEQ_COMP; }
            set
            {
                if (!ReferenceEquals(_rEQ_COMP, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added && value != null)
                    {
                        // This the dependent end of an identifying relationship, so the principal end cannot be changed if it is already set,
                        // otherwise it can only be set to an entity with a primary key that is the same value as the dependent's foreign key.
                        if (EmpCod != value.EmpCod || ReqCompNum != value.ReqCompNum)
                        {
                            throw new InvalidOperationException("The principal end of an identifying relationship can only be changed when the dependent end is in the Added state.");
                        }
                    }
                    var previousValue = _rEQ_COMP;
                    _rEQ_COMP = value;
                    FixupREQ_COMP(previousValue);
                    OnNavigationPropertyChanged("REQ_COMP");
                }
            }
        }
        private REQ_COMP _rEQ_COMP;
    
        [DataMember]
        public USUARIO USUARIO
        {
            get { return _uSUARIO; }
            set
            {
                if (!ReferenceEquals(_uSUARIO, value))
                {
                    var previousValue = _uSUARIO;
                    _uSUARIO = value;
                    FixupUSUARIO(previousValue);
                    OnNavigationPropertyChanged("USUARIO");
                }
            }
        }
        private USUARIO _uSUARIO;
    
        [DataMember]
        public TrackableCollection<ITEM_PED_COMP> ITEM_PED_COMP
        {
            get
            {
                if (_iTEM_PED_COMP == null)
                {
                    _iTEM_PED_COMP = new TrackableCollection<ITEM_PED_COMP>();
                    _iTEM_PED_COMP.CollectionChanged += FixupITEM_PED_COMP;
                }
                return _iTEM_PED_COMP;
            }
            set
            {
                if (!ReferenceEquals(_iTEM_PED_COMP, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_iTEM_PED_COMP != null)
                    {
                        _iTEM_PED_COMP.CollectionChanged -= FixupITEM_PED_COMP;
                    }
                    _iTEM_PED_COMP = value;
                    if (_iTEM_PED_COMP != null)
                    {
                        _iTEM_PED_COMP.CollectionChanged += FixupITEM_PED_COMP;
                    }
                    OnNavigationPropertyChanged("ITEM_PED_COMP");
                }
            }
        }
        private TrackableCollection<ITEM_PED_COMP> _iTEM_PED_COMP;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        // This entity type is the dependent end in at least one association that performs cascade deletes.
        // This event handler will process notifications that occur when the principal end is deleted.
        internal void HandleCascadeDelete(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                this.MarkAsDeleted();
            }
        }
    
        protected virtual void ClearNavigationProperties()
        {
            REQ_COMP = null;
            USUARIO = null;
            ITEM_PED_COMP.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupREQ_COMP(REQ_COMP previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ITEM_REQ_COMP.Contains(this))
            {
                previousValue.ITEM_REQ_COMP.Remove(this);
            }
    
            if (REQ_COMP != null)
            {
                if (!REQ_COMP.ITEM_REQ_COMP.Contains(this))
                {
                    REQ_COMP.ITEM_REQ_COMP.Add(this);
                }
    
                EmpCod = REQ_COMP.EmpCod;
                ReqCompNum = REQ_COMP.ReqCompNum;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("REQ_COMP")
                    && (ChangeTracker.OriginalValues["REQ_COMP"] == REQ_COMP))
                {
                    ChangeTracker.OriginalValues.Remove("REQ_COMP");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("REQ_COMP", previousValue);
                }
                if (REQ_COMP != null && !REQ_COMP.ChangeTracker.ChangeTrackingEnabled)
                {
                    REQ_COMP.StartTracking();
                }
            }
        }
    
        private void FixupUSUARIO(USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ITEM_REQ_COMP.Contains(this))
            {
                previousValue.ITEM_REQ_COMP.Remove(this);
            }
    
            if (USUARIO != null)
            {
                if (!USUARIO.ITEM_REQ_COMP.Contains(this))
                {
                    USUARIO.ITEM_REQ_COMP.Add(this);
                }
    
                ItReqCompAprovUsuCod = USUARIO.UsuCod;
            }
            else if (!skipKeys)
            {
                ItReqCompAprovUsuCod = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("USUARIO")
                    && (ChangeTracker.OriginalValues["USUARIO"] == USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("USUARIO", previousValue);
                }
                if (USUARIO != null && !USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupITEM_PED_COMP(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ITEM_PED_COMP item in e.NewItems)
                {
                    if (!item.ITEM_REQ_COMP.Contains(this))
                    {
                        item.ITEM_REQ_COMP.Add(this);
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ITEM_PED_COMP", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ITEM_PED_COMP item in e.OldItems)
                {
                    if (item.ITEM_REQ_COMP.Contains(this))
                    {
                        item.ITEM_REQ_COMP.Remove(this);
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ITEM_PED_COMP", item);
                    }
                }
            }
        }

        #endregion

    }
}

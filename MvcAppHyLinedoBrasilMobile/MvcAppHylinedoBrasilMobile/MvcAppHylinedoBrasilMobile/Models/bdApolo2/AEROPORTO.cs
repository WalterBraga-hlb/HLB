//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHylinedoBrasilMobile.Models.bdApolo2
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(IND_ECONOMICO))]
    [KnownType(typeof(CIDADE))]
    public partial class AEROPORTO: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public string AeropCod
        {
            get { return _aeropCod; }
            set
            {
                if (_aeropCod != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'AeropCod' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _aeropCod = value;
                    OnPropertyChanged("AeropCod");
                }
            }
        }
        private string _aeropCod;
    
        [DataMember]
        public string AeropNome
        {
            get { return _aeropNome; }
            set
            {
                if (_aeropNome != value)
                {
                    _aeropNome = value;
                    OnPropertyChanged("AeropNome");
                }
            }
        }
        private string _aeropNome;
    
        [DataMember]
        public string CidCod
        {
            get { return _cidCod; }
            set
            {
                if (_cidCod != value)
                {
                    ChangeTracker.RecordOriginalValue("CidCod", _cidCod);
                    if (!IsDeserializing)
                    {
                        if (CIDADE != null && CIDADE.CidCod != value)
                        {
                            CIDADE = null;
                        }
                    }
                    _cidCod = value;
                    OnPropertyChanged("CidCod");
                }
            }
        }
        private string _cidCod;
    
        [DataMember]
        public string AeropCateg
        {
            get { return _aeropCateg; }
            set
            {
                if (_aeropCateg != value)
                {
                    _aeropCateg = value;
                    OnPropertyChanged("AeropCateg");
                }
            }
        }
        private string _aeropCateg;
    
        [DataMember]
        public Nullable<decimal> AeropTxEmbNac
        {
            get { return _aeropTxEmbNac; }
            set
            {
                if (_aeropTxEmbNac != value)
                {
                    _aeropTxEmbNac = value;
                    OnPropertyChanged("AeropTxEmbNac");
                }
            }
        }
        private Nullable<decimal> _aeropTxEmbNac;
    
        [DataMember]
        public string AeropIndEconCodNac
        {
            get { return _aeropIndEconCodNac; }
            set
            {
                if (_aeropIndEconCodNac != value)
                {
                    ChangeTracker.RecordOriginalValue("AeropIndEconCodNac", _aeropIndEconCodNac);
                    if (!IsDeserializing)
                    {
                        if (IND_ECONOMICO2 != null && IND_ECONOMICO2.IndEconCod != value)
                        {
                            IND_ECONOMICO2 = null;
                        }
                    }
                    _aeropIndEconCodNac = value;
                    OnPropertyChanged("AeropIndEconCodNac");
                }
            }
        }
        private string _aeropIndEconCodNac;
    
        [DataMember]
        public Nullable<decimal> AeropTxEmbInt
        {
            get { return _aeropTxEmbInt; }
            set
            {
                if (_aeropTxEmbInt != value)
                {
                    _aeropTxEmbInt = value;
                    OnPropertyChanged("AeropTxEmbInt");
                }
            }
        }
        private Nullable<decimal> _aeropTxEmbInt;
    
        [DataMember]
        public string AeropIndEconCodInt
        {
            get { return _aeropIndEconCodInt; }
            set
            {
                if (_aeropIndEconCodInt != value)
                {
                    ChangeTracker.RecordOriginalValue("AeropIndEconCodInt", _aeropIndEconCodInt);
                    if (!IsDeserializing)
                    {
                        if (IND_ECONOMICO1 != null && IND_ECONOMICO1.IndEconCod != value)
                        {
                            IND_ECONOMICO1 = null;
                        }
                    }
                    _aeropIndEconCodInt = value;
                    OnPropertyChanged("AeropIndEconCodInt");
                }
            }
        }
        private string _aeropIndEconCodInt;
    
        [DataMember]
        public Nullable<decimal> AeropTxExtra
        {
            get { return _aeropTxExtra; }
            set
            {
                if (_aeropTxExtra != value)
                {
                    _aeropTxExtra = value;
                    OnPropertyChanged("AeropTxExtra");
                }
            }
        }
        private Nullable<decimal> _aeropTxExtra;
    
        [DataMember]
        public string AeropIndEconCodExtra
        {
            get { return _aeropIndEconCodExtra; }
            set
            {
                if (_aeropIndEconCodExtra != value)
                {
                    ChangeTracker.RecordOriginalValue("AeropIndEconCodExtra", _aeropIndEconCodExtra);
                    if (!IsDeserializing)
                    {
                        if (IND_ECONOMICO != null && IND_ECONOMICO.IndEconCod != value)
                        {
                            IND_ECONOMICO = null;
                        }
                    }
                    _aeropIndEconCodExtra = value;
                    OnPropertyChanged("AeropIndEconCodExtra");
                }
            }
        }
        private string _aeropIndEconCodExtra;
    
        [DataMember]
        public string AeropTxExtraTipo
        {
            get { return _aeropTxExtraTipo; }
            set
            {
                if (_aeropTxExtraTipo != value)
                {
                    _aeropTxExtraTipo = value;
                    OnPropertyChanged("AeropTxExtraTipo");
                }
            }
        }
        private string _aeropTxExtraTipo;
    
        [DataMember]
        public string AeropTxExtraSobre
        {
            get { return _aeropTxExtraSobre; }
            set
            {
                if (_aeropTxExtraSobre != value)
                {
                    _aeropTxExtraSobre = value;
                    OnPropertyChanged("AeropTxExtraSobre");
                }
            }
        }
        private string _aeropTxExtraSobre;
    
        [DataMember]
        public string AeropEntraPesqInternet
        {
            get { return _aeropEntraPesqInternet; }
            set
            {
                if (_aeropEntraPesqInternet != value)
                {
                    _aeropEntraPesqInternet = value;
                    OnPropertyChanged("AeropEntraPesqInternet");
                }
            }
        }
        private string _aeropEntraPesqInternet;
    
        [DataMember]
        public string USERTipoTransporte
        {
            get { return _uSERTipoTransporte; }
            set
            {
                if (_uSERTipoTransporte != value)
                {
                    _uSERTipoTransporte = value;
                    OnPropertyChanged("USERTipoTransporte");
                }
            }
        }
        private string _uSERTipoTransporte;
    
        [DataMember]
        public string USERLocalIngressoPais
        {
            get { return _uSERLocalIngressoPais; }
            set
            {
                if (_uSERLocalIngressoPais != value)
                {
                    _uSERLocalIngressoPais = value;
                    OnPropertyChanged("USERLocalIngressoPais");
                }
            }
        }
        private string _uSERLocalIngressoPais;
    
        [DataMember]
        public Nullable<int> EnderSeq
        {
            get { return _enderSeq; }
            set
            {
                if (_enderSeq != value)
                {
                    _enderSeq = value;
                    OnPropertyChanged("EnderSeq");
                }
            }
        }
        private Nullable<int> _enderSeq;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public IND_ECONOMICO IND_ECONOMICO
        {
            get { return _iND_ECONOMICO; }
            set
            {
                if (!ReferenceEquals(_iND_ECONOMICO, value))
                {
                    var previousValue = _iND_ECONOMICO;
                    _iND_ECONOMICO = value;
                    FixupIND_ECONOMICO(previousValue);
                    OnNavigationPropertyChanged("IND_ECONOMICO");
                }
            }
        }
        private IND_ECONOMICO _iND_ECONOMICO;
    
        [DataMember]
        public IND_ECONOMICO IND_ECONOMICO1
        {
            get { return _iND_ECONOMICO1; }
            set
            {
                if (!ReferenceEquals(_iND_ECONOMICO1, value))
                {
                    var previousValue = _iND_ECONOMICO1;
                    _iND_ECONOMICO1 = value;
                    FixupIND_ECONOMICO1(previousValue);
                    OnNavigationPropertyChanged("IND_ECONOMICO1");
                }
            }
        }
        private IND_ECONOMICO _iND_ECONOMICO1;
    
        [DataMember]
        public IND_ECONOMICO IND_ECONOMICO2
        {
            get { return _iND_ECONOMICO2; }
            set
            {
                if (!ReferenceEquals(_iND_ECONOMICO2, value))
                {
                    var previousValue = _iND_ECONOMICO2;
                    _iND_ECONOMICO2 = value;
                    FixupIND_ECONOMICO2(previousValue);
                    OnNavigationPropertyChanged("IND_ECONOMICO2");
                }
            }
        }
        private IND_ECONOMICO _iND_ECONOMICO2;
    
        [DataMember]
        public CIDADE CIDADE
        {
            get { return _cIDADE; }
            set
            {
                if (!ReferenceEquals(_cIDADE, value))
                {
                    var previousValue = _cIDADE;
                    _cIDADE = value;
                    FixupCIDADE(previousValue);
                    OnNavigationPropertyChanged("CIDADE");
                }
            }
        }
        private CIDADE _cIDADE;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            IND_ECONOMICO = null;
            IND_ECONOMICO1 = null;
            IND_ECONOMICO2 = null;
            CIDADE = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupIND_ECONOMICO(IND_ECONOMICO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.AEROPORTO.Contains(this))
            {
                previousValue.AEROPORTO.Remove(this);
            }
    
            if (IND_ECONOMICO != null)
            {
                if (!IND_ECONOMICO.AEROPORTO.Contains(this))
                {
                    IND_ECONOMICO.AEROPORTO.Add(this);
                }
    
                AeropIndEconCodExtra = IND_ECONOMICO.IndEconCod;
            }
            else if (!skipKeys)
            {
                AeropIndEconCodExtra = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("IND_ECONOMICO")
                    && (ChangeTracker.OriginalValues["IND_ECONOMICO"] == IND_ECONOMICO))
                {
                    ChangeTracker.OriginalValues.Remove("IND_ECONOMICO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("IND_ECONOMICO", previousValue);
                }
                if (IND_ECONOMICO != null && !IND_ECONOMICO.ChangeTracker.ChangeTrackingEnabled)
                {
                    IND_ECONOMICO.StartTracking();
                }
            }
        }
    
        private void FixupIND_ECONOMICO1(IND_ECONOMICO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.AEROPORTO1.Contains(this))
            {
                previousValue.AEROPORTO1.Remove(this);
            }
    
            if (IND_ECONOMICO1 != null)
            {
                if (!IND_ECONOMICO1.AEROPORTO1.Contains(this))
                {
                    IND_ECONOMICO1.AEROPORTO1.Add(this);
                }
    
                AeropIndEconCodInt = IND_ECONOMICO1.IndEconCod;
            }
            else if (!skipKeys)
            {
                AeropIndEconCodInt = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("IND_ECONOMICO1")
                    && (ChangeTracker.OriginalValues["IND_ECONOMICO1"] == IND_ECONOMICO1))
                {
                    ChangeTracker.OriginalValues.Remove("IND_ECONOMICO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("IND_ECONOMICO1", previousValue);
                }
                if (IND_ECONOMICO1 != null && !IND_ECONOMICO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    IND_ECONOMICO1.StartTracking();
                }
            }
        }
    
        private void FixupIND_ECONOMICO2(IND_ECONOMICO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.AEROPORTO2.Contains(this))
            {
                previousValue.AEROPORTO2.Remove(this);
            }
    
            if (IND_ECONOMICO2 != null)
            {
                if (!IND_ECONOMICO2.AEROPORTO2.Contains(this))
                {
                    IND_ECONOMICO2.AEROPORTO2.Add(this);
                }
    
                AeropIndEconCodNac = IND_ECONOMICO2.IndEconCod;
            }
            else if (!skipKeys)
            {
                AeropIndEconCodNac = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("IND_ECONOMICO2")
                    && (ChangeTracker.OriginalValues["IND_ECONOMICO2"] == IND_ECONOMICO2))
                {
                    ChangeTracker.OriginalValues.Remove("IND_ECONOMICO2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("IND_ECONOMICO2", previousValue);
                }
                if (IND_ECONOMICO2 != null && !IND_ECONOMICO2.ChangeTracker.ChangeTrackingEnabled)
                {
                    IND_ECONOMICO2.StartTracking();
                }
            }
        }
    
        private void FixupCIDADE(CIDADE previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.AEROPORTO.Contains(this))
            {
                previousValue.AEROPORTO.Remove(this);
            }
    
            if (CIDADE != null)
            {
                if (!CIDADE.AEROPORTO.Contains(this))
                {
                    CIDADE.AEROPORTO.Add(this);
                }
    
                CidCod = CIDADE.CidCod;
            }
            else if (!skipKeys)
            {
                CidCod = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("CIDADE")
                    && (ChangeTracker.OriginalValues["CIDADE"] == CIDADE))
                {
                    ChangeTracker.OriginalValues.Remove("CIDADE");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("CIDADE", previousValue);
                }
                if (CIDADE != null && !CIDADE.ChangeTracker.ChangeTrackingEnabled)
                {
                    CIDADE.StartTracking();
                }
            }
        }

        #endregion

    }
}

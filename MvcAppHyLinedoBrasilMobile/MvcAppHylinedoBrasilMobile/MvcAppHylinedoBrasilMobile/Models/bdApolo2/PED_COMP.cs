//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHylinedoBrasilMobile.Models.bdApolo2
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(COND_PAG))]
    [KnownType(typeof(COND_PAG_PED_COMP))]
    [KnownType(typeof(EMPRESA_FILIAL))]
    [KnownType(typeof(IND_ECONOMICO))]
    [KnownType(typeof(ITEM_PED_COMP))]
    [KnownType(typeof(PARC_PAG_PED_COMP))]
    [KnownType(typeof(REQ_COMP))]
    [KnownType(typeof(USUARIO))]
    [KnownType(typeof(PED_COMP))]
    public partial class PED_COMP: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public string EmpCod
        {
            get { return _empCod; }
            set
            {
                if (_empCod != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'EmpCod' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    if (!IsDeserializing)
                    {
                        if (EMPRESA_FILIAL1 != null && EMPRESA_FILIAL1.EmpCod != value)
                        {
                            EMPRESA_FILIAL1 = null;
                        }
                        if (PED_COMP2 != null && PED_COMP2.EmpCod != value)
                        {
                            var previousValue = _pED_COMP2;
                            _pED_COMP2 = null;
                            FixupPED_COMP2(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("PED_COMP2");
                        }
                    }
                    _empCod = value;
                    OnPropertyChanged("EmpCod");
                }
            }
        }
        private string _empCod;
    
        [DataMember]
        public string PedCompNum
        {
            get { return _pedCompNum; }
            set
            {
                if (_pedCompNum != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'PedCompNum' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _pedCompNum = value;
                    OnPropertyChanged("PedCompNum");
                }
            }
        }
        private string _pedCompNum;
    
        [DataMember]
        public string PedCompTipo
        {
            get { return _pedCompTipo; }
            set
            {
                if (_pedCompTipo != value)
                {
                    _pedCompTipo = value;
                    OnPropertyChanged("PedCompTipo");
                }
            }
        }
        private string _pedCompTipo;
    
        [DataMember]
        public string PedCompDesm
        {
            get { return _pedCompDesm; }
            set
            {
                if (_pedCompDesm != value)
                {
                    _pedCompDesm = value;
                    OnPropertyChanged("PedCompDesm");
                }
            }
        }
        private string _pedCompDesm;
    
        [DataMember]
        public Nullable<System.DateTime> PedCompData
        {
            get { return _pedCompData; }
            set
            {
                if (_pedCompData != value)
                {
                    _pedCompData = value;
                    OnPropertyChanged("PedCompData");
                }
            }
        }
        private Nullable<System.DateTime> _pedCompData;
    
        [DataMember]
        public Nullable<System.DateTime> PedCompDataCad
        {
            get { return _pedCompDataCad; }
            set
            {
                if (_pedCompDataCad != value)
                {
                    _pedCompDataCad = value;
                    OnPropertyChanged("PedCompDataCad");
                }
            }
        }
        private Nullable<System.DateTime> _pedCompDataCad;
    
        [DataMember]
        public Nullable<System.DateTime> PedCompDataValidade
        {
            get { return _pedCompDataValidade; }
            set
            {
                if (_pedCompDataValidade != value)
                {
                    _pedCompDataValidade = value;
                    OnPropertyChanged("PedCompDataValidade");
                }
            }
        }
        private Nullable<System.DateTime> _pedCompDataValidade;
    
        [DataMember]
        public string PedCompAlarmeValidade
        {
            get { return _pedCompAlarmeValidade; }
            set
            {
                if (_pedCompAlarmeValidade != value)
                {
                    _pedCompAlarmeValidade = value;
                    OnPropertyChanged("PedCompAlarmeValidade");
                }
            }
        }
        private string _pedCompAlarmeValidade;
    
        [DataMember]
        public Nullable<System.DateTime> PedCompDataEntrega
        {
            get { return _pedCompDataEntrega; }
            set
            {
                if (_pedCompDataEntrega != value)
                {
                    _pedCompDataEntrega = value;
                    OnPropertyChanged("PedCompDataEntrega");
                }
            }
        }
        private Nullable<System.DateTime> _pedCompDataEntrega;
    
        [DataMember]
        public Nullable<System.DateTime> PedCompDataBaseVencParc
        {
            get { return _pedCompDataBaseVencParc; }
            set
            {
                if (_pedCompDataBaseVencParc != value)
                {
                    _pedCompDataBaseVencParc = value;
                    OnPropertyChanged("PedCompDataBaseVencParc");
                }
            }
        }
        private Nullable<System.DateTime> _pedCompDataBaseVencParc;
    
        [DataMember]
        public Nullable<System.DateTime> PedCompCompet
        {
            get { return _pedCompCompet; }
            set
            {
                if (_pedCompCompet != value)
                {
                    _pedCompCompet = value;
                    OnPropertyChanged("PedCompCompet");
                }
            }
        }
        private Nullable<System.DateTime> _pedCompCompet;
    
        [DataMember]
        public string EntCod
        {
            get { return _entCod; }
            set
            {
                if (_entCod != value)
                {
                    _entCod = value;
                    OnPropertyChanged("EntCod");
                }
            }
        }
        private string _entCod;
    
        [DataMember]
        public string PedCompNumPedEnt
        {
            get { return _pedCompNumPedEnt; }
            set
            {
                if (_pedCompNumPedEnt != value)
                {
                    _pedCompNumPedEnt = value;
                    OnPropertyChanged("PedCompNumPedEnt");
                }
            }
        }
        private string _pedCompNumPedEnt;
    
        [DataMember]
        public string TabPVCod
        {
            get { return _tabPVCod; }
            set
            {
                if (_tabPVCod != value)
                {
                    _tabPVCod = value;
                    OnPropertyChanged("TabPVCod");
                }
            }
        }
        private string _tabPVCod;
    
        [DataMember]
        public string PedCompStrDesc
        {
            get { return _pedCompStrDesc; }
            set
            {
                if (_pedCompStrDesc != value)
                {
                    _pedCompStrDesc = value;
                    OnPropertyChanged("PedCompStrDesc");
                }
            }
        }
        private string _pedCompStrDesc;
    
        [DataMember]
        public Nullable<decimal> PedCompPercDesc
        {
            get { return _pedCompPercDesc; }
            set
            {
                if (_pedCompPercDesc != value)
                {
                    _pedCompPercDesc = value;
                    OnPropertyChanged("PedCompPercDesc");
                }
            }
        }
        private Nullable<decimal> _pedCompPercDesc;
    
        [DataMember]
        public string PedCompIpiBaseIcms
        {
            get { return _pedCompIpiBaseIcms; }
            set
            {
                if (_pedCompIpiBaseIcms != value)
                {
                    _pedCompIpiBaseIcms = value;
                    OnPropertyChanged("PedCompIpiBaseIcms");
                }
            }
        }
        private string _pedCompIpiBaseIcms;
    
        [DataMember]
        public string PedCompIdentAcrescFin
        {
            get { return _pedCompIdentAcrescFin; }
            set
            {
                if (_pedCompIdentAcrescFin != value)
                {
                    _pedCompIdentAcrescFin = value;
                    OnPropertyChanged("PedCompIdentAcrescFin");
                }
            }
        }
        private string _pedCompIdentAcrescFin;
    
        [DataMember]
        public Nullable<decimal> PedCompPercAcrescFin
        {
            get { return _pedCompPercAcrescFin; }
            set
            {
                if (_pedCompPercAcrescFin != value)
                {
                    _pedCompPercAcrescFin = value;
                    OnPropertyChanged("PedCompPercAcrescFin");
                }
            }
        }
        private Nullable<decimal> _pedCompPercAcrescFin;
    
        [DataMember]
        public Nullable<decimal> PedCompValAcrescFin
        {
            get { return _pedCompValAcrescFin; }
            set
            {
                if (_pedCompValAcrescFin != value)
                {
                    _pedCompValAcrescFin = value;
                    OnPropertyChanged("PedCompValAcrescFin");
                }
            }
        }
        private Nullable<decimal> _pedCompValAcrescFin;
    
        [DataMember]
        public Nullable<decimal> PedCompPercIpiAcrescFin
        {
            get { return _pedCompPercIpiAcrescFin; }
            set
            {
                if (_pedCompPercIpiAcrescFin != value)
                {
                    _pedCompPercIpiAcrescFin = value;
                    OnPropertyChanged("PedCompPercIpiAcrescFin");
                }
            }
        }
        private Nullable<decimal> _pedCompPercIpiAcrescFin;
    
        [DataMember]
        public Nullable<decimal> PedCompValIpiAcrescFin
        {
            get { return _pedCompValIpiAcrescFin; }
            set
            {
                if (_pedCompValIpiAcrescFin != value)
                {
                    _pedCompValIpiAcrescFin = value;
                    OnPropertyChanged("PedCompValIpiAcrescFin");
                }
            }
        }
        private Nullable<decimal> _pedCompValIpiAcrescFin;
    
        [DataMember]
        public string PedCompIdentDescEspec
        {
            get { return _pedCompIdentDescEspec; }
            set
            {
                if (_pedCompIdentDescEspec != value)
                {
                    _pedCompIdentDescEspec = value;
                    OnPropertyChanged("PedCompIdentDescEspec");
                }
            }
        }
        private string _pedCompIdentDescEspec;
    
        [DataMember]
        public Nullable<decimal> PedCompPercDescEspec
        {
            get { return _pedCompPercDescEspec; }
            set
            {
                if (_pedCompPercDescEspec != value)
                {
                    _pedCompPercDescEspec = value;
                    OnPropertyChanged("PedCompPercDescEspec");
                }
            }
        }
        private Nullable<decimal> _pedCompPercDescEspec;
    
        [DataMember]
        public Nullable<decimal> PedCompValDescEspec
        {
            get { return _pedCompValDescEspec; }
            set
            {
                if (_pedCompValDescEspec != value)
                {
                    _pedCompValDescEspec = value;
                    OnPropertyChanged("PedCompValDescEspec");
                }
            }
        }
        private Nullable<decimal> _pedCompValDescEspec;
    
        [DataMember]
        public Nullable<decimal> PedCompValMerc
        {
            get { return _pedCompValMerc; }
            set
            {
                if (_pedCompValMerc != value)
                {
                    _pedCompValMerc = value;
                    OnPropertyChanged("PedCompValMerc");
                }
            }
        }
        private Nullable<decimal> _pedCompValMerc;
    
        [DataMember]
        public Nullable<decimal> PedCompValServ
        {
            get { return _pedCompValServ; }
            set
            {
                if (_pedCompValServ != value)
                {
                    _pedCompValServ = value;
                    OnPropertyChanged("PedCompValServ");
                }
            }
        }
        private Nullable<decimal> _pedCompValServ;
    
        [DataMember]
        public Nullable<decimal> PedCompValBaseIss
        {
            get { return _pedCompValBaseIss; }
            set
            {
                if (_pedCompValBaseIss != value)
                {
                    _pedCompValBaseIss = value;
                    OnPropertyChanged("PedCompValBaseIss");
                }
            }
        }
        private Nullable<decimal> _pedCompValBaseIss;
    
        [DataMember]
        public Nullable<decimal> PedCompValIss
        {
            get { return _pedCompValIss; }
            set
            {
                if (_pedCompValIss != value)
                {
                    _pedCompValIss = value;
                    OnPropertyChanged("PedCompValIss");
                }
            }
        }
        private Nullable<decimal> _pedCompValIss;
    
        [DataMember]
        public Nullable<decimal> PedCompValBaseIrrf
        {
            get { return _pedCompValBaseIrrf; }
            set
            {
                if (_pedCompValBaseIrrf != value)
                {
                    _pedCompValBaseIrrf = value;
                    OnPropertyChanged("PedCompValBaseIrrf");
                }
            }
        }
        private Nullable<decimal> _pedCompValBaseIrrf;
    
        [DataMember]
        public Nullable<decimal> PedCompValMinIrrf
        {
            get { return _pedCompValMinIrrf; }
            set
            {
                if (_pedCompValMinIrrf != value)
                {
                    _pedCompValMinIrrf = value;
                    OnPropertyChanged("PedCompValMinIrrf");
                }
            }
        }
        private Nullable<decimal> _pedCompValMinIrrf;
    
        [DataMember]
        public Nullable<decimal> PedCompValCalcIrrf
        {
            get { return _pedCompValCalcIrrf; }
            set
            {
                if (_pedCompValCalcIrrf != value)
                {
                    _pedCompValCalcIrrf = value;
                    OnPropertyChanged("PedCompValCalcIrrf");
                }
            }
        }
        private Nullable<decimal> _pedCompValCalcIrrf;
    
        [DataMember]
        public Nullable<decimal> PedCompValBaseIcms
        {
            get { return _pedCompValBaseIcms; }
            set
            {
                if (_pedCompValBaseIcms != value)
                {
                    _pedCompValBaseIcms = value;
                    OnPropertyChanged("PedCompValBaseIcms");
                }
            }
        }
        private Nullable<decimal> _pedCompValBaseIcms;
    
        [DataMember]
        public Nullable<decimal> PedCompValIcms
        {
            get { return _pedCompValIcms; }
            set
            {
                if (_pedCompValIcms != value)
                {
                    _pedCompValIcms = value;
                    OnPropertyChanged("PedCompValIcms");
                }
            }
        }
        private Nullable<decimal> _pedCompValIcms;
    
        [DataMember]
        public Nullable<decimal> PedCompValEmbalagem
        {
            get { return _pedCompValEmbalagem; }
            set
            {
                if (_pedCompValEmbalagem != value)
                {
                    _pedCompValEmbalagem = value;
                    OnPropertyChanged("PedCompValEmbalagem");
                }
            }
        }
        private Nullable<decimal> _pedCompValEmbalagem;
    
        [DataMember]
        public Nullable<decimal> PedCompValFrete
        {
            get { return _pedCompValFrete; }
            set
            {
                if (_pedCompValFrete != value)
                {
                    _pedCompValFrete = value;
                    OnPropertyChanged("PedCompValFrete");
                }
            }
        }
        private Nullable<decimal> _pedCompValFrete;
    
        [DataMember]
        public Nullable<decimal> PedCompValSeguro
        {
            get { return _pedCompValSeguro; }
            set
            {
                if (_pedCompValSeguro != value)
                {
                    _pedCompValSeguro = value;
                    OnPropertyChanged("PedCompValSeguro");
                }
            }
        }
        private Nullable<decimal> _pedCompValSeguro;
    
        [DataMember]
        public Nullable<decimal> PedCompValDespesa
        {
            get { return _pedCompValDespesa; }
            set
            {
                if (_pedCompValDespesa != value)
                {
                    _pedCompValDespesa = value;
                    OnPropertyChanged("PedCompValDespesa");
                }
            }
        }
        private Nullable<decimal> _pedCompValDespesa;
    
        [DataMember]
        public Nullable<decimal> PedCompValBaseIpi
        {
            get { return _pedCompValBaseIpi; }
            set
            {
                if (_pedCompValBaseIpi != value)
                {
                    _pedCompValBaseIpi = value;
                    OnPropertyChanged("PedCompValBaseIpi");
                }
            }
        }
        private Nullable<decimal> _pedCompValBaseIpi;
    
        [DataMember]
        public Nullable<decimal> PedCompValIpi
        {
            get { return _pedCompValIpi; }
            set
            {
                if (_pedCompValIpi != value)
                {
                    _pedCompValIpi = value;
                    OnPropertyChanged("PedCompValIpi");
                }
            }
        }
        private Nullable<decimal> _pedCompValIpi;
    
        [DataMember]
        public Nullable<decimal> PedCompValGerBaseIss
        {
            get { return _pedCompValGerBaseIss; }
            set
            {
                if (_pedCompValGerBaseIss != value)
                {
                    _pedCompValGerBaseIss = value;
                    OnPropertyChanged("PedCompValGerBaseIss");
                }
            }
        }
        private Nullable<decimal> _pedCompValGerBaseIss;
    
        [DataMember]
        public Nullable<decimal> PedCompValGerIss
        {
            get { return _pedCompValGerIss; }
            set
            {
                if (_pedCompValGerIss != value)
                {
                    _pedCompValGerIss = value;
                    OnPropertyChanged("PedCompValGerIss");
                }
            }
        }
        private Nullable<decimal> _pedCompValGerIss;
    
        [DataMember]
        public Nullable<decimal> PedCompValGerBaseIrrf
        {
            get { return _pedCompValGerBaseIrrf; }
            set
            {
                if (_pedCompValGerBaseIrrf != value)
                {
                    _pedCompValGerBaseIrrf = value;
                    OnPropertyChanged("PedCompValGerBaseIrrf");
                }
            }
        }
        private Nullable<decimal> _pedCompValGerBaseIrrf;
    
        [DataMember]
        public Nullable<decimal> PedCompValGerCalcIrrf
        {
            get { return _pedCompValGerCalcIrrf; }
            set
            {
                if (_pedCompValGerCalcIrrf != value)
                {
                    _pedCompValGerCalcIrrf = value;
                    OnPropertyChanged("PedCompValGerCalcIrrf");
                }
            }
        }
        private Nullable<decimal> _pedCompValGerCalcIrrf;
    
        [DataMember]
        public Nullable<decimal> PedCompValGerIrrf
        {
            get { return _pedCompValGerIrrf; }
            set
            {
                if (_pedCompValGerIrrf != value)
                {
                    _pedCompValGerIrrf = value;
                    OnPropertyChanged("PedCompValGerIrrf");
                }
            }
        }
        private Nullable<decimal> _pedCompValGerIrrf;
    
        [DataMember]
        public Nullable<decimal> PedCompValGerServTot
        {
            get { return _pedCompValGerServTot; }
            set
            {
                if (_pedCompValGerServTot != value)
                {
                    _pedCompValGerServTot = value;
                    OnPropertyChanged("PedCompValGerServTot");
                }
            }
        }
        private Nullable<decimal> _pedCompValGerServTot;
    
        [DataMember]
        public Nullable<decimal> PedCompValGerBaseIcms
        {
            get { return _pedCompValGerBaseIcms; }
            set
            {
                if (_pedCompValGerBaseIcms != value)
                {
                    _pedCompValGerBaseIcms = value;
                    OnPropertyChanged("PedCompValGerBaseIcms");
                }
            }
        }
        private Nullable<decimal> _pedCompValGerBaseIcms;
    
        [DataMember]
        public Nullable<decimal> PedCompValGerIcms
        {
            get { return _pedCompValGerIcms; }
            set
            {
                if (_pedCompValGerIcms != value)
                {
                    _pedCompValGerIcms = value;
                    OnPropertyChanged("PedCompValGerIcms");
                }
            }
        }
        private Nullable<decimal> _pedCompValGerIcms;
    
        [DataMember]
        public Nullable<decimal> PedCompValGerBaseIpi
        {
            get { return _pedCompValGerBaseIpi; }
            set
            {
                if (_pedCompValGerBaseIpi != value)
                {
                    _pedCompValGerBaseIpi = value;
                    OnPropertyChanged("PedCompValGerBaseIpi");
                }
            }
        }
        private Nullable<decimal> _pedCompValGerBaseIpi;
    
        [DataMember]
        public Nullable<decimal> PedCompValGerIpi
        {
            get { return _pedCompValGerIpi; }
            set
            {
                if (_pedCompValGerIpi != value)
                {
                    _pedCompValGerIpi = value;
                    OnPropertyChanged("PedCompValGerIpi");
                }
            }
        }
        private Nullable<decimal> _pedCompValGerIpi;
    
        [DataMember]
        public Nullable<decimal> PedCompValTotal
        {
            get { return _pedCompValTotal; }
            set
            {
                if (_pedCompValTotal != value)
                {
                    _pedCompValTotal = value;
                    OnPropertyChanged("PedCompValTotal");
                }
            }
        }
        private Nullable<decimal> _pedCompValTotal;
    
        [DataMember]
        public string CompradCod
        {
            get { return _compradCod; }
            set
            {
                if (_compradCod != value)
                {
                    _compradCod = value;
                    OnPropertyChanged("CompradCod");
                }
            }
        }
        private string _compradCod;
    
        [DataMember]
        public string PedCompTranspCod
        {
            get { return _pedCompTranspCod; }
            set
            {
                if (_pedCompTranspCod != value)
                {
                    _pedCompTranspCod = value;
                    OnPropertyChanged("PedCompTranspCod");
                }
            }
        }
        private string _pedCompTranspCod;
    
        [DataMember]
        public string PedCompStatFrete
        {
            get { return _pedCompStatFrete; }
            set
            {
                if (_pedCompStatFrete != value)
                {
                    _pedCompStatFrete = value;
                    OnPropertyChanged("PedCompStatFrete");
                }
            }
        }
        private string _pedCompStatFrete;
    
        [DataMember]
        public string CCtrlCodEstr
        {
            get { return _cCtrlCodEstr; }
            set
            {
                if (_cCtrlCodEstr != value)
                {
                    _cCtrlCodEstr = value;
                    OnPropertyChanged("CCtrlCodEstr");
                }
            }
        }
        private string _cCtrlCodEstr;
    
        [DataMember]
        public string PedCompRef
        {
            get { return _pedCompRef; }
            set
            {
                if (_pedCompRef != value)
                {
                    ChangeTracker.RecordOriginalValue("PedCompRef", _pedCompRef);
                    if (!IsDeserializing)
                    {
                        if (PED_COMP2 != null && PED_COMP2.PedCompNum != value)
                        {
                            var previousValue = _pED_COMP2;
                            _pED_COMP2 = null;
                            FixupPED_COMP2(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("PED_COMP2");
                        }
                    }
                    _pedCompRef = value;
                    OnPropertyChanged("PedCompRef");
                }
            }
        }
        private string _pedCompRef;
    
        [DataMember]
        public string PedCompIntegFin
        {
            get { return _pedCompIntegFin; }
            set
            {
                if (_pedCompIntegFin != value)
                {
                    _pedCompIntegFin = value;
                    OnPropertyChanged("PedCompIntegFin");
                }
            }
        }
        private string _pedCompIntegFin;
    
        [DataMember]
        public string PedCompViaTransp
        {
            get { return _pedCompViaTransp; }
            set
            {
                if (_pedCompViaTransp != value)
                {
                    _pedCompViaTransp = value;
                    OnPropertyChanged("PedCompViaTransp");
                }
            }
        }
        private string _pedCompViaTransp;
    
        [DataMember]
        public string PedCompEntCodContato
        {
            get { return _pedCompEntCodContato; }
            set
            {
                if (_pedCompEntCodContato != value)
                {
                    _pedCompEntCodContato = value;
                    OnPropertyChanged("PedCompEntCodContato");
                }
            }
        }
        private string _pedCompEntCodContato;
    
        [DataMember]
        public string PedCompIdentAcrescFinProd
        {
            get { return _pedCompIdentAcrescFinProd; }
            set
            {
                if (_pedCompIdentAcrescFinProd != value)
                {
                    _pedCompIdentAcrescFinProd = value;
                    OnPropertyChanged("PedCompIdentAcrescFinProd");
                }
            }
        }
        private string _pedCompIdentAcrescFinProd;
    
        [DataMember]
        public Nullable<decimal> PedCompPercAcrescFinProd
        {
            get { return _pedCompPercAcrescFinProd; }
            set
            {
                if (_pedCompPercAcrescFinProd != value)
                {
                    _pedCompPercAcrescFinProd = value;
                    OnPropertyChanged("PedCompPercAcrescFinProd");
                }
            }
        }
        private Nullable<decimal> _pedCompPercAcrescFinProd;
    
        [DataMember]
        public Nullable<decimal> PedCompValAcrescFinProd
        {
            get { return _pedCompValAcrescFinProd; }
            set
            {
                if (_pedCompValAcrescFinProd != value)
                {
                    _pedCompValAcrescFinProd = value;
                    OnPropertyChanged("PedCompValAcrescFinProd");
                }
            }
        }
        private Nullable<decimal> _pedCompValAcrescFinProd;
    
        [DataMember]
        public string PedCompIdentDescEspecProd
        {
            get { return _pedCompIdentDescEspecProd; }
            set
            {
                if (_pedCompIdentDescEspecProd != value)
                {
                    _pedCompIdentDescEspecProd = value;
                    OnPropertyChanged("PedCompIdentDescEspecProd");
                }
            }
        }
        private string _pedCompIdentDescEspecProd;
    
        [DataMember]
        public Nullable<decimal> PedCompPercDescEspecProd
        {
            get { return _pedCompPercDescEspecProd; }
            set
            {
                if (_pedCompPercDescEspecProd != value)
                {
                    _pedCompPercDescEspecProd = value;
                    OnPropertyChanged("PedCompPercDescEspecProd");
                }
            }
        }
        private Nullable<decimal> _pedCompPercDescEspecProd;
    
        [DataMember]
        public Nullable<decimal> PedCompValDescEspecProd
        {
            get { return _pedCompValDescEspecProd; }
            set
            {
                if (_pedCompValDescEspecProd != value)
                {
                    _pedCompValDescEspecProd = value;
                    OnPropertyChanged("PedCompValDescEspecProd");
                }
            }
        }
        private Nullable<decimal> _pedCompValDescEspecProd;
    
        [DataMember]
        public string PedCompIdentAcrescFinServ
        {
            get { return _pedCompIdentAcrescFinServ; }
            set
            {
                if (_pedCompIdentAcrescFinServ != value)
                {
                    _pedCompIdentAcrescFinServ = value;
                    OnPropertyChanged("PedCompIdentAcrescFinServ");
                }
            }
        }
        private string _pedCompIdentAcrescFinServ;
    
        [DataMember]
        public Nullable<decimal> PedCompPercAcrescFinServ
        {
            get { return _pedCompPercAcrescFinServ; }
            set
            {
                if (_pedCompPercAcrescFinServ != value)
                {
                    _pedCompPercAcrescFinServ = value;
                    OnPropertyChanged("PedCompPercAcrescFinServ");
                }
            }
        }
        private Nullable<decimal> _pedCompPercAcrescFinServ;
    
        [DataMember]
        public Nullable<decimal> PedCompValAcrescFinServ
        {
            get { return _pedCompValAcrescFinServ; }
            set
            {
                if (_pedCompValAcrescFinServ != value)
                {
                    _pedCompValAcrescFinServ = value;
                    OnPropertyChanged("PedCompValAcrescFinServ");
                }
            }
        }
        private Nullable<decimal> _pedCompValAcrescFinServ;
    
        [DataMember]
        public string PedCompIdentDescEspecServ
        {
            get { return _pedCompIdentDescEspecServ; }
            set
            {
                if (_pedCompIdentDescEspecServ != value)
                {
                    _pedCompIdentDescEspecServ = value;
                    OnPropertyChanged("PedCompIdentDescEspecServ");
                }
            }
        }
        private string _pedCompIdentDescEspecServ;
    
        [DataMember]
        public Nullable<decimal> PedCompPercDescEspecServ
        {
            get { return _pedCompPercDescEspecServ; }
            set
            {
                if (_pedCompPercDescEspecServ != value)
                {
                    _pedCompPercDescEspecServ = value;
                    OnPropertyChanged("PedCompPercDescEspecServ");
                }
            }
        }
        private Nullable<decimal> _pedCompPercDescEspecServ;
    
        [DataMember]
        public Nullable<decimal> PedCompValDescEspecServ
        {
            get { return _pedCompValDescEspecServ; }
            set
            {
                if (_pedCompValDescEspecServ != value)
                {
                    _pedCompValDescEspecServ = value;
                    OnPropertyChanged("PedCompValDescEspecServ");
                }
            }
        }
        private Nullable<decimal> _pedCompValDescEspecServ;
    
        [DataMember]
        public string PedCompAprov
        {
            get { return _pedCompAprov; }
            set
            {
                if (_pedCompAprov != value)
                {
                    _pedCompAprov = value;
                    OnPropertyChanged("PedCompAprov");
                }
            }
        }
        private string _pedCompAprov;
    
        [DataMember]
        public string PedVendaEmpCod
        {
            get { return _pedVendaEmpCod; }
            set
            {
                if (_pedVendaEmpCod != value)
                {
                    _pedVendaEmpCod = value;
                    OnPropertyChanged("PedVendaEmpCod");
                }
            }
        }
        private string _pedVendaEmpCod;
    
        [DataMember]
        public string PedVendaNum
        {
            get { return _pedVendaNum; }
            set
            {
                if (_pedVendaNum != value)
                {
                    _pedVendaNum = value;
                    OnPropertyChanged("PedVendaNum");
                }
            }
        }
        private string _pedVendaNum;
    
        [DataMember]
        public string PedCompEmpCodLocEnt
        {
            get { return _pedCompEmpCodLocEnt; }
            set
            {
                if (_pedCompEmpCodLocEnt != value)
                {
                    ChangeTracker.RecordOriginalValue("PedCompEmpCodLocEnt", _pedCompEmpCodLocEnt);
                    if (!IsDeserializing)
                    {
                        if (EMPRESA_FILIAL != null && EMPRESA_FILIAL.EmpCod != value)
                        {
                            EMPRESA_FILIAL = null;
                        }
                    }
                    _pedCompEmpCodLocEnt = value;
                    OnPropertyChanged("PedCompEmpCodLocEnt");
                }
            }
        }
        private string _pedCompEmpCodLocEnt;
    
        [DataMember]
        public string PedCompComprado
        {
            get { return _pedCompComprado; }
            set
            {
                if (_pedCompComprado != value)
                {
                    _pedCompComprado = value;
                    OnPropertyChanged("PedCompComprado");
                }
            }
        }
        private string _pedCompComprado;
    
        [DataMember]
        public string IndEconCod
        {
            get { return _indEconCod; }
            set
            {
                if (_indEconCod != value)
                {
                    ChangeTracker.RecordOriginalValue("IndEconCod", _indEconCod);
                    if (!IsDeserializing)
                    {
                        if (IND_ECONOMICO != null && IND_ECONOMICO.IndEconCod != value)
                        {
                            IND_ECONOMICO = null;
                        }
                    }
                    _indEconCod = value;
                    OnPropertyChanged("IndEconCod");
                }
            }
        }
        private string _indEconCod;
    
        [DataMember]
        public Nullable<decimal> PedCompValCambio
        {
            get { return _pedCompValCambio; }
            set
            {
                if (_pedCompValCambio != value)
                {
                    _pedCompValCambio = value;
                    OnPropertyChanged("PedCompValCambio");
                }
            }
        }
        private Nullable<decimal> _pedCompValCambio;
    
        [DataMember]
        public string PedCompStat
        {
            get { return _pedCompStat; }
            set
            {
                if (_pedCompStat != value)
                {
                    _pedCompStat = value;
                    OnPropertyChanged("PedCompStat");
                }
            }
        }
        private string _pedCompStat;
    
        [DataMember]
        public Nullable<System.DateTime> PedCompLibBloqData
        {
            get { return _pedCompLibBloqData; }
            set
            {
                if (_pedCompLibBloqData != value)
                {
                    _pedCompLibBloqData = value;
                    OnPropertyChanged("PedCompLibBloqData");
                }
            }
        }
        private Nullable<System.DateTime> _pedCompLibBloqData;
    
        [DataMember]
        public string PedCompLibBloqUsuCod
        {
            get { return _pedCompLibBloqUsuCod; }
            set
            {
                if (_pedCompLibBloqUsuCod != value)
                {
                    _pedCompLibBloqUsuCod = value;
                    OnPropertyChanged("PedCompLibBloqUsuCod");
                }
            }
        }
        private string _pedCompLibBloqUsuCod;
    
        [DataMember]
        public string UsuCod
        {
            get { return _usuCod; }
            set
            {
                if (_usuCod != value)
                {
                    ChangeTracker.RecordOriginalValue("UsuCod", _usuCod);
                    if (!IsDeserializing)
                    {
                        if (USUARIO != null && USUARIO.UsuCod != value)
                        {
                            USUARIO = null;
                        }
                    }
                    _usuCod = value;
                    OnPropertyChanged("UsuCod");
                }
            }
        }
        private string _usuCod;
    
        [DataMember]
        public string PedCompTexto
        {
            get { return _pedCompTexto; }
            set
            {
                if (_pedCompTexto != value)
                {
                    _pedCompTexto = value;
                    OnPropertyChanged("PedCompTexto");
                }
            }
        }
        private string _pedCompTexto;
    
        [DataMember]
        public Nullable<decimal> PedCompPercFreteEmbut
        {
            get { return _pedCompPercFreteEmbut; }
            set
            {
                if (_pedCompPercFreteEmbut != value)
                {
                    _pedCompPercFreteEmbut = value;
                    OnPropertyChanged("PedCompPercFreteEmbut");
                }
            }
        }
        private Nullable<decimal> _pedCompPercFreteEmbut;
    
        [DataMember]
        public Nullable<decimal> PedCompValFreteEmbut
        {
            get { return _pedCompValFreteEmbut; }
            set
            {
                if (_pedCompValFreteEmbut != value)
                {
                    _pedCompValFreteEmbut = value;
                    OnPropertyChanged("PedCompValFreteEmbut");
                }
            }
        }
        private Nullable<decimal> _pedCompValFreteEmbut;
    
        [DataMember]
        public Nullable<decimal> PedCompPercFinancEmbut
        {
            get { return _pedCompPercFinancEmbut; }
            set
            {
                if (_pedCompPercFinancEmbut != value)
                {
                    _pedCompPercFinancEmbut = value;
                    OnPropertyChanged("PedCompPercFinancEmbut");
                }
            }
        }
        private Nullable<decimal> _pedCompPercFinancEmbut;
    
        [DataMember]
        public Nullable<decimal> PedCompValFinancEmbut
        {
            get { return _pedCompValFinancEmbut; }
            set
            {
                if (_pedCompValFinancEmbut != value)
                {
                    _pedCompValFinancEmbut = value;
                    OnPropertyChanged("PedCompValFinancEmbut");
                }
            }
        }
        private Nullable<decimal> _pedCompValFinancEmbut;
    
        [DataMember]
        public string PedCompOrig
        {
            get { return _pedCompOrig; }
            set
            {
                if (_pedCompOrig != value)
                {
                    _pedCompOrig = value;
                    OnPropertyChanged("PedCompOrig");
                }
            }
        }
        private string _pedCompOrig;
    
        [DataMember]
        public string ReqCompEmpCod
        {
            get { return _reqCompEmpCod; }
            set
            {
                if (_reqCompEmpCod != value)
                {
                    ChangeTracker.RecordOriginalValue("ReqCompEmpCod", _reqCompEmpCod);
                    if (!IsDeserializing)
                    {
                        if (REQ_COMP != null && REQ_COMP.EmpCod != value)
                        {
                            var previousValue = _rEQ_COMP;
                            _rEQ_COMP = null;
                            FixupREQ_COMP(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("REQ_COMP");
                        }
                    }
                    _reqCompEmpCod = value;
                    OnPropertyChanged("ReqCompEmpCod");
                }
            }
        }
        private string _reqCompEmpCod;
    
        [DataMember]
        public string ReqCompNum
        {
            get { return _reqCompNum; }
            set
            {
                if (_reqCompNum != value)
                {
                    ChangeTracker.RecordOriginalValue("ReqCompNum", _reqCompNum);
                    if (!IsDeserializing)
                    {
                        if (REQ_COMP != null && REQ_COMP.ReqCompNum != value)
                        {
                            var previousValue = _rEQ_COMP;
                            _rEQ_COMP = null;
                            FixupREQ_COMP(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("REQ_COMP");
                        }
                    }
                    _reqCompNum = value;
                    OnPropertyChanged("ReqCompNum");
                }
            }
        }
        private string _reqCompNum;
    
        [DataMember]
        public Nullable<int> ResReqCompNum
        {
            get { return _resReqCompNum; }
            set
            {
                if (_resReqCompNum != value)
                {
                    _resReqCompNum = value;
                    OnPropertyChanged("ResReqCompNum");
                }
            }
        }
        private Nullable<int> _resReqCompNum;
    
        [DataMember]
        public Nullable<decimal> PedCompValBaseIcmsPropST
        {
            get { return _pedCompValBaseIcmsPropST; }
            set
            {
                if (_pedCompValBaseIcmsPropST != value)
                {
                    _pedCompValBaseIcmsPropST = value;
                    OnPropertyChanged("PedCompValBaseIcmsPropST");
                }
            }
        }
        private Nullable<decimal> _pedCompValBaseIcmsPropST;
    
        [DataMember]
        public Nullable<decimal> PedCompValIcmsPropST
        {
            get { return _pedCompValIcmsPropST; }
            set
            {
                if (_pedCompValIcmsPropST != value)
                {
                    _pedCompValIcmsPropST = value;
                    OnPropertyChanged("PedCompValIcmsPropST");
                }
            }
        }
        private Nullable<decimal> _pedCompValIcmsPropST;
    
        [DataMember]
        public Nullable<decimal> PedCompValBaseIcmsSTLista
        {
            get { return _pedCompValBaseIcmsSTLista; }
            set
            {
                if (_pedCompValBaseIcmsSTLista != value)
                {
                    _pedCompValBaseIcmsSTLista = value;
                    OnPropertyChanged("PedCompValBaseIcmsSTLista");
                }
            }
        }
        private Nullable<decimal> _pedCompValBaseIcmsSTLista;
    
        [DataMember]
        public Nullable<decimal> PedCompValIcmsSTLista
        {
            get { return _pedCompValIcmsSTLista; }
            set
            {
                if (_pedCompValIcmsSTLista != value)
                {
                    _pedCompValIcmsSTLista = value;
                    OnPropertyChanged("PedCompValIcmsSTLista");
                }
            }
        }
        private Nullable<decimal> _pedCompValIcmsSTLista;
    
        [DataMember]
        public Nullable<decimal> PedCompValBaseIcmsSTLucro
        {
            get { return _pedCompValBaseIcmsSTLucro; }
            set
            {
                if (_pedCompValBaseIcmsSTLucro != value)
                {
                    _pedCompValBaseIcmsSTLucro = value;
                    OnPropertyChanged("PedCompValBaseIcmsSTLucro");
                }
            }
        }
        private Nullable<decimal> _pedCompValBaseIcmsSTLucro;
    
        [DataMember]
        public Nullable<decimal> PedCompValIcmsSTLucro
        {
            get { return _pedCompValIcmsSTLucro; }
            set
            {
                if (_pedCompValIcmsSTLucro != value)
                {
                    _pedCompValIcmsSTLucro = value;
                    OnPropertyChanged("PedCompValIcmsSTLucro");
                }
            }
        }
        private Nullable<decimal> _pedCompValIcmsSTLucro;
    
        [DataMember]
        public Nullable<decimal> PedCompValBaseIcmsST
        {
            get { return _pedCompValBaseIcmsST; }
            set
            {
                if (_pedCompValBaseIcmsST != value)
                {
                    _pedCompValBaseIcmsST = value;
                    OnPropertyChanged("PedCompValBaseIcmsST");
                }
            }
        }
        private Nullable<decimal> _pedCompValBaseIcmsST;
    
        [DataMember]
        public Nullable<decimal> PedCompValIcmsST
        {
            get { return _pedCompValIcmsST; }
            set
            {
                if (_pedCompValIcmsST != value)
                {
                    _pedCompValIcmsST = value;
                    OnPropertyChanged("PedCompValIcmsST");
                }
            }
        }
        private Nullable<decimal> _pedCompValIcmsST;
    
        [DataMember]
        public Nullable<decimal> PedCompValIcmsRetST
        {
            get { return _pedCompValIcmsRetST; }
            set
            {
                if (_pedCompValIcmsRetST != value)
                {
                    _pedCompValIcmsRetST = value;
                    OnPropertyChanged("PedCompValIcmsRetST");
                }
            }
        }
        private Nullable<decimal> _pedCompValIcmsRetST;
    
        [DataMember]
        public Nullable<decimal> PedCompValGerBaseIcmsPropST
        {
            get { return _pedCompValGerBaseIcmsPropST; }
            set
            {
                if (_pedCompValGerBaseIcmsPropST != value)
                {
                    _pedCompValGerBaseIcmsPropST = value;
                    OnPropertyChanged("PedCompValGerBaseIcmsPropST");
                }
            }
        }
        private Nullable<decimal> _pedCompValGerBaseIcmsPropST;
    
        [DataMember]
        public Nullable<decimal> PedCompValGerIcmsPropST
        {
            get { return _pedCompValGerIcmsPropST; }
            set
            {
                if (_pedCompValGerIcmsPropST != value)
                {
                    _pedCompValGerIcmsPropST = value;
                    OnPropertyChanged("PedCompValGerIcmsPropST");
                }
            }
        }
        private Nullable<decimal> _pedCompValGerIcmsPropST;
    
        [DataMember]
        public Nullable<decimal> PedCompValGerBaseIcmsSTLista
        {
            get { return _pedCompValGerBaseIcmsSTLista; }
            set
            {
                if (_pedCompValGerBaseIcmsSTLista != value)
                {
                    _pedCompValGerBaseIcmsSTLista = value;
                    OnPropertyChanged("PedCompValGerBaseIcmsSTLista");
                }
            }
        }
        private Nullable<decimal> _pedCompValGerBaseIcmsSTLista;
    
        [DataMember]
        public Nullable<decimal> PedCompValGerIcmsSTLista
        {
            get { return _pedCompValGerIcmsSTLista; }
            set
            {
                if (_pedCompValGerIcmsSTLista != value)
                {
                    _pedCompValGerIcmsSTLista = value;
                    OnPropertyChanged("PedCompValGerIcmsSTLista");
                }
            }
        }
        private Nullable<decimal> _pedCompValGerIcmsSTLista;
    
        [DataMember]
        public Nullable<decimal> PedCompValGerBaseIcmsSTLucro
        {
            get { return _pedCompValGerBaseIcmsSTLucro; }
            set
            {
                if (_pedCompValGerBaseIcmsSTLucro != value)
                {
                    _pedCompValGerBaseIcmsSTLucro = value;
                    OnPropertyChanged("PedCompValGerBaseIcmsSTLucro");
                }
            }
        }
        private Nullable<decimal> _pedCompValGerBaseIcmsSTLucro;
    
        [DataMember]
        public Nullable<decimal> PedCompValGerIcmsSTLucro
        {
            get { return _pedCompValGerIcmsSTLucro; }
            set
            {
                if (_pedCompValGerIcmsSTLucro != value)
                {
                    _pedCompValGerIcmsSTLucro = value;
                    OnPropertyChanged("PedCompValGerIcmsSTLucro");
                }
            }
        }
        private Nullable<decimal> _pedCompValGerIcmsSTLucro;
    
        [DataMember]
        public Nullable<decimal> PedCompValGerBaseIcmsST
        {
            get { return _pedCompValGerBaseIcmsST; }
            set
            {
                if (_pedCompValGerBaseIcmsST != value)
                {
                    _pedCompValGerBaseIcmsST = value;
                    OnPropertyChanged("PedCompValGerBaseIcmsST");
                }
            }
        }
        private Nullable<decimal> _pedCompValGerBaseIcmsST;
    
        [DataMember]
        public Nullable<decimal> PedCompValGerIcmsST
        {
            get { return _pedCompValGerIcmsST; }
            set
            {
                if (_pedCompValGerIcmsST != value)
                {
                    _pedCompValGerIcmsST = value;
                    OnPropertyChanged("PedCompValGerIcmsST");
                }
            }
        }
        private Nullable<decimal> _pedCompValGerIcmsST;
    
        [DataMember]
        public Nullable<decimal> PedCompValGerIcmsRetST
        {
            get { return _pedCompValGerIcmsRetST; }
            set
            {
                if (_pedCompValGerIcmsRetST != value)
                {
                    _pedCompValGerIcmsRetST = value;
                    OnPropertyChanged("PedCompValGerIcmsRetST");
                }
            }
        }
        private Nullable<decimal> _pedCompValGerIcmsRetST;
    
        [DataMember]
        public string PedCompIcmsFreteSomaIcmsST
        {
            get { return _pedCompIcmsFreteSomaIcmsST; }
            set
            {
                if (_pedCompIcmsFreteSomaIcmsST != value)
                {
                    _pedCompIcmsFreteSomaIcmsST = value;
                    OnPropertyChanged("PedCompIcmsFreteSomaIcmsST");
                }
            }
        }
        private string _pedCompIcmsFreteSomaIcmsST;
    
        [DataMember]
        public Nullable<decimal> PedCompValGerBaseIcmsSTRat
        {
            get { return _pedCompValGerBaseIcmsSTRat; }
            set
            {
                if (_pedCompValGerBaseIcmsSTRat != value)
                {
                    _pedCompValGerBaseIcmsSTRat = value;
                    OnPropertyChanged("PedCompValGerBaseIcmsSTRat");
                }
            }
        }
        private Nullable<decimal> _pedCompValGerBaseIcmsSTRat;
    
        [DataMember]
        public Nullable<decimal> PedCompValGerIcmsSTRat
        {
            get { return _pedCompValGerIcmsSTRat; }
            set
            {
                if (_pedCompValGerIcmsSTRat != value)
                {
                    _pedCompValGerIcmsSTRat = value;
                    OnPropertyChanged("PedCompValGerIcmsSTRat");
                }
            }
        }
        private Nullable<decimal> _pedCompValGerIcmsSTRat;
    
        [DataMember]
        public Nullable<decimal> PedCompValMercST
        {
            get { return _pedCompValMercST; }
            set
            {
                if (_pedCompValMercST != value)
                {
                    _pedCompValMercST = value;
                    OnPropertyChanged("PedCompValMercST");
                }
            }
        }
        private Nullable<decimal> _pedCompValMercST;
    
        [DataMember]
        public Nullable<decimal> PedCompPercIIAcrescFin
        {
            get { return _pedCompPercIIAcrescFin; }
            set
            {
                if (_pedCompPercIIAcrescFin != value)
                {
                    _pedCompPercIIAcrescFin = value;
                    OnPropertyChanged("PedCompPercIIAcrescFin");
                }
            }
        }
        private Nullable<decimal> _pedCompPercIIAcrescFin;
    
        [DataMember]
        public Nullable<decimal> PedCompValIIAcrescFin
        {
            get { return _pedCompValIIAcrescFin; }
            set
            {
                if (_pedCompValIIAcrescFin != value)
                {
                    _pedCompValIIAcrescFin = value;
                    OnPropertyChanged("PedCompValIIAcrescFin");
                }
            }
        }
        private Nullable<decimal> _pedCompValIIAcrescFin;
    
        [DataMember]
        public Nullable<decimal> PedCompValBaseII
        {
            get { return _pedCompValBaseII; }
            set
            {
                if (_pedCompValBaseII != value)
                {
                    _pedCompValBaseII = value;
                    OnPropertyChanged("PedCompValBaseII");
                }
            }
        }
        private Nullable<decimal> _pedCompValBaseII;
    
        [DataMember]
        public Nullable<decimal> PedCompValII
        {
            get { return _pedCompValII; }
            set
            {
                if (_pedCompValII != value)
                {
                    _pedCompValII = value;
                    OnPropertyChanged("PedCompValII");
                }
            }
        }
        private Nullable<decimal> _pedCompValII;
    
        [DataMember]
        public Nullable<decimal> PedCompValGerBaseII
        {
            get { return _pedCompValGerBaseII; }
            set
            {
                if (_pedCompValGerBaseII != value)
                {
                    _pedCompValGerBaseII = value;
                    OnPropertyChanged("PedCompValGerBaseII");
                }
            }
        }
        private Nullable<decimal> _pedCompValGerBaseII;
    
        [DataMember]
        public Nullable<decimal> PedCompValGerII
        {
            get { return _pedCompValGerII; }
            set
            {
                if (_pedCompValGerII != value)
                {
                    _pedCompValGerII = value;
                    OnPropertyChanged("PedCompValGerII");
                }
            }
        }
        private Nullable<decimal> _pedCompValGerII;
    
        [DataMember]
        public Nullable<System.DateTime> PedCompDataEntregaInic
        {
            get { return _pedCompDataEntregaInic; }
            set
            {
                if (_pedCompDataEntregaInic != value)
                {
                    _pedCompDataEntregaInic = value;
                    OnPropertyChanged("PedCompDataEntregaInic");
                }
            }
        }
        private Nullable<System.DateTime> _pedCompDataEntregaInic;
    
        [DataMember]
        public string TipoPagRecCod
        {
            get { return _tipoPagRecCod; }
            set
            {
                if (_tipoPagRecCod != value)
                {
                    _tipoPagRecCod = value;
                    OnPropertyChanged("TipoPagRecCod");
                }
            }
        }
        private string _tipoPagRecCod;
    
        [DataMember]
        public Nullable<decimal> PedCompValSiscomex
        {
            get { return _pedCompValSiscomex; }
            set
            {
                if (_pedCompValSiscomex != value)
                {
                    _pedCompValSiscomex = value;
                    OnPropertyChanged("PedCompValSiscomex");
                }
            }
        }
        private Nullable<decimal> _pedCompValSiscomex;
    
        [DataMember]
        public Nullable<decimal> PedCompValCalcIssDedTot
        {
            get { return _pedCompValCalcIssDedTot; }
            set
            {
                if (_pedCompValCalcIssDedTot != value)
                {
                    _pedCompValCalcIssDedTot = value;
                    OnPropertyChanged("PedCompValCalcIssDedTot");
                }
            }
        }
        private Nullable<decimal> _pedCompValCalcIssDedTot;
    
        [DataMember]
        public Nullable<decimal> PedCompValDifIcms
        {
            get { return _pedCompValDifIcms; }
            set
            {
                if (_pedCompValDifIcms != value)
                {
                    _pedCompValDifIcms = value;
                    OnPropertyChanged("PedCompValDifIcms");
                }
            }
        }
        private Nullable<decimal> _pedCompValDifIcms;
    
        [DataMember]
        public Nullable<decimal> PedCompValBaseCofins
        {
            get { return _pedCompValBaseCofins; }
            set
            {
                if (_pedCompValBaseCofins != value)
                {
                    _pedCompValBaseCofins = value;
                    OnPropertyChanged("PedCompValBaseCofins");
                }
            }
        }
        private Nullable<decimal> _pedCompValBaseCofins;
    
        [DataMember]
        public Nullable<decimal> PedCompPercCofinsRF
        {
            get { return _pedCompPercCofinsRF; }
            set
            {
                if (_pedCompPercCofinsRF != value)
                {
                    _pedCompPercCofinsRF = value;
                    OnPropertyChanged("PedCompPercCofinsRF");
                }
            }
        }
        private Nullable<decimal> _pedCompPercCofinsRF;
    
        [DataMember]
        public Nullable<decimal> PedCompValCofinsRF
        {
            get { return _pedCompValCofinsRF; }
            set
            {
                if (_pedCompValCofinsRF != value)
                {
                    _pedCompValCofinsRF = value;
                    OnPropertyChanged("PedCompValCofinsRF");
                }
            }
        }
        private Nullable<decimal> _pedCompValCofinsRF;
    
        [DataMember]
        public Nullable<decimal> PedCompValBasePis
        {
            get { return _pedCompValBasePis; }
            set
            {
                if (_pedCompValBasePis != value)
                {
                    _pedCompValBasePis = value;
                    OnPropertyChanged("PedCompValBasePis");
                }
            }
        }
        private Nullable<decimal> _pedCompValBasePis;
    
        [DataMember]
        public Nullable<decimal> PedCompPercPisRF
        {
            get { return _pedCompPercPisRF; }
            set
            {
                if (_pedCompPercPisRF != value)
                {
                    _pedCompPercPisRF = value;
                    OnPropertyChanged("PedCompPercPisRF");
                }
            }
        }
        private Nullable<decimal> _pedCompPercPisRF;
    
        [DataMember]
        public Nullable<decimal> PedCompValPisRF
        {
            get { return _pedCompValPisRF; }
            set
            {
                if (_pedCompValPisRF != value)
                {
                    _pedCompValPisRF = value;
                    OnPropertyChanged("PedCompValPisRF");
                }
            }
        }
        private Nullable<decimal> _pedCompValPisRF;
    
        [DataMember]
        public Nullable<decimal> PedCompValBaseCsll
        {
            get { return _pedCompValBaseCsll; }
            set
            {
                if (_pedCompValBaseCsll != value)
                {
                    _pedCompValBaseCsll = value;
                    OnPropertyChanged("PedCompValBaseCsll");
                }
            }
        }
        private Nullable<decimal> _pedCompValBaseCsll;
    
        [DataMember]
        public Nullable<decimal> PedCompPercCsllRF
        {
            get { return _pedCompPercCsllRF; }
            set
            {
                if (_pedCompPercCsllRF != value)
                {
                    _pedCompPercCsllRF = value;
                    OnPropertyChanged("PedCompPercCsllRF");
                }
            }
        }
        private Nullable<decimal> _pedCompPercCsllRF;
    
        [DataMember]
        public Nullable<decimal> PedCompValCsllRF
        {
            get { return _pedCompValCsllRF; }
            set
            {
                if (_pedCompValCsllRF != value)
                {
                    _pedCompValCsllRF = value;
                    OnPropertyChanged("PedCompValCsllRF");
                }
            }
        }
        private Nullable<decimal> _pedCompValCsllRF;
    
        [DataMember]
        public string PedCompNumPedEntOrig
        {
            get { return _pedCompNumPedEntOrig; }
            set
            {
                if (_pedCompNumPedEntOrig != value)
                {
                    _pedCompNumPedEntOrig = value;
                    OnPropertyChanged("PedCompNumPedEntOrig");
                }
            }
        }
        private string _pedCompNumPedEntOrig;
    
        [DataMember]
        public string OrcNum
        {
            get { return _orcNum; }
            set
            {
                if (_orcNum != value)
                {
                    _orcNum = value;
                    OnPropertyChanged("OrcNum");
                }
            }
        }
        private string _orcNum;
    
        [DataMember]
        public string PedCompTipoEntrega
        {
            get { return _pedCompTipoEntrega; }
            set
            {
                if (_pedCompTipoEntrega != value)
                {
                    _pedCompTipoEntrega = value;
                    OnPropertyChanged("PedCompTipoEntrega");
                }
            }
        }
        private string _pedCompTipoEntrega;
    
        [DataMember]
        public string GrpCompraCod
        {
            get { return _grpCompraCod; }
            set
            {
                if (_grpCompraCod != value)
                {
                    _grpCompraCod = value;
                    OnPropertyChanged("GrpCompraCod");
                }
            }
        }
        private string _grpCompraCod;
    
        [DataMember]
        public string USERPedCompFunRural
        {
            get { return _uSERPedCompFunRural; }
            set
            {
                if (_uSERPedCompFunRural != value)
                {
                    _uSERPedCompFunRural = value;
                    OnPropertyChanged("USERPedCompFunRural");
                }
            }
        }
        private string _uSERPedCompFunRural;
    
        [DataMember]
        public string USERPedCompraLocDesembarque
        {
            get { return _uSERPedCompraLocDesembarque; }
            set
            {
                if (_uSERPedCompraLocDesembarque != value)
                {
                    _uSERPedCompraLocDesembarque = value;
                    OnPropertyChanged("USERPedCompraLocDesembarque");
                }
            }
        }
        private string _uSERPedCompraLocDesembarque;
    
        [DataMember]
        public string USERForma_Pag
        {
            get { return _uSERForma_Pag; }
            set
            {
                if (_uSERForma_Pag != value)
                {
                    _uSERForma_Pag = value;
                    OnPropertyChanged("USERForma_Pag");
                }
            }
        }
        private string _uSERForma_Pag;
    
        [DataMember]
        public string USERImpresso
        {
            get { return _uSERImpresso; }
            set
            {
                if (_uSERImpresso != value)
                {
                    _uSERImpresso = value;
                    OnPropertyChanged("USERImpresso");
                }
            }
        }
        private string _uSERImpresso;
    
        [DataMember]
        public Nullable<decimal> PedCompRepIcmsDifValDesc
        {
            get { return _pedCompRepIcmsDifValDesc; }
            set
            {
                if (_pedCompRepIcmsDifValDesc != value)
                {
                    _pedCompRepIcmsDifValDesc = value;
                    OnPropertyChanged("PedCompRepIcmsDifValDesc");
                }
            }
        }
        private Nullable<decimal> _pedCompRepIcmsDifValDesc;
    
        [DataMember]
        public Nullable<decimal> PedCompRepIcmsRedValDesc
        {
            get { return _pedCompRepIcmsRedValDesc; }
            set
            {
                if (_pedCompRepIcmsRedValDesc != value)
                {
                    _pedCompRepIcmsRedValDesc = value;
                    OnPropertyChanged("PedCompRepIcmsRedValDesc");
                }
            }
        }
        private Nullable<decimal> _pedCompRepIcmsRedValDesc;
    
        [DataMember]
        public Nullable<decimal> PedCompPesoLiq
        {
            get { return _pedCompPesoLiq; }
            set
            {
                if (_pedCompPesoLiq != value)
                {
                    _pedCompPesoLiq = value;
                    OnPropertyChanged("PedCompPesoLiq");
                }
            }
        }
        private Nullable<decimal> _pedCompPesoLiq;
    
        [DataMember]
        public Nullable<decimal> PedCompPesoBruto
        {
            get { return _pedCompPesoBruto; }
            set
            {
                if (_pedCompPesoBruto != value)
                {
                    _pedCompPesoBruto = value;
                    OnPropertyChanged("PedCompPesoBruto");
                }
            }
        }
        private Nullable<decimal> _pedCompPesoBruto;
    
        [DataMember]
        public string PeCompRateioFretePorPeso
        {
            get { return _peCompRateioFretePorPeso; }
            set
            {
                if (_peCompRateioFretePorPeso != value)
                {
                    _peCompRateioFretePorPeso = value;
                    OnPropertyChanged("PeCompRateioFretePorPeso");
                }
            }
        }
        private string _peCompRateioFretePorPeso;
    
        [DataMember]
        public string PedCompTransf
        {
            get { return _pedCompTransf; }
            set
            {
                if (_pedCompTransf != value)
                {
                    _pedCompTransf = value;
                    OnPropertyChanged("PedCompTransf");
                }
            }
        }
        private string _pedCompTransf;
    
        [DataMember]
        public string PedCompTextoHist
        {
            get { return _pedCompTextoHist; }
            set
            {
                if (_pedCompTextoHist != value)
                {
                    _pedCompTextoHist = value;
                    OnPropertyChanged("PedCompTextoHist");
                }
            }
        }
        private string _pedCompTextoHist;
    
        [DataMember]
        public string PedCompValAbaixoMinForn
        {
            get { return _pedCompValAbaixoMinForn; }
            set
            {
                if (_pedCompValAbaixoMinForn != value)
                {
                    _pedCompValAbaixoMinForn = value;
                    OnPropertyChanged("PedCompValAbaixoMinForn");
                }
            }
        }
        private string _pedCompValAbaixoMinForn;
    
        [DataMember]
        public string PedCompRateioFretePorPeso
        {
            get { return _pedCompRateioFretePorPeso; }
            set
            {
                if (_pedCompRateioFretePorPeso != value)
                {
                    _pedCompRateioFretePorPeso = value;
                    OnPropertyChanged("PedCompRateioFretePorPeso");
                }
            }
        }
        private string _pedCompRateioFretePorPeso;
    
        [DataMember]
        public string PedCompOrigDataBaseVencParc
        {
            get { return _pedCompOrigDataBaseVencParc; }
            set
            {
                if (_pedCompOrigDataBaseVencParc != value)
                {
                    _pedCompOrigDataBaseVencParc = value;
                    OnPropertyChanged("PedCompOrigDataBaseVencParc");
                }
            }
        }
        private string _pedCompOrigDataBaseVencParc;
    
        [DataMember]
        public Nullable<decimal> PedCompValCap
        {
            get { return _pedCompValCap; }
            set
            {
                if (_pedCompValCap != value)
                {
                    _pedCompValCap = value;
                    OnPropertyChanged("PedCompValCap");
                }
            }
        }
        private Nullable<decimal> _pedCompValCap;
    
        [DataMember]
        public string TipoLancCod
        {
            get { return _tipoLancCod; }
            set
            {
                if (_tipoLancCod != value)
                {
                    _tipoLancCod = value;
                    OnPropertyChanged("TipoLancCod");
                }
            }
        }
        private string _tipoLancCod;
    
        [DataMember]
        public string PedCompEntCodLocEnt
        {
            get { return _pedCompEntCodLocEnt; }
            set
            {
                if (_pedCompEntCodLocEnt != value)
                {
                    _pedCompEntCodLocEnt = value;
                    OnPropertyChanged("PedCompEntCodLocEnt");
                }
            }
        }
        private string _pedCompEntCodLocEnt;
    
        [DataMember]
        public string PedCompFreteTerc
        {
            get { return _pedCompFreteTerc; }
            set
            {
                if (_pedCompFreteTerc != value)
                {
                    _pedCompFreteTerc = value;
                    OnPropertyChanged("PedCompFreteTerc");
                }
            }
        }
        private string _pedCompFreteTerc;
    
        [DataMember]
        public string PedCompExportado
        {
            get { return _pedCompExportado; }
            set
            {
                if (_pedCompExportado != value)
                {
                    _pedCompExportado = value;
                    OnPropertyChanged("PedCompExportado");
                }
            }
        }
        private string _pedCompExportado;
    
        [DataMember]
        public string FinCompCod
        {
            get { return _finCompCod; }
            set
            {
                if (_finCompCod != value)
                {
                    _finCompCod = value;
                    OnPropertyChanged("FinCompCod");
                }
            }
        }
        private string _finCompCod;
    
        [DataMember]
        public string PedCompTerc
        {
            get { return _pedCompTerc; }
            set
            {
                if (_pedCompTerc != value)
                {
                    _pedCompTerc = value;
                    OnPropertyChanged("PedCompTerc");
                }
            }
        }
        private string _pedCompTerc;
    
        [DataMember]
        public string CtrlProjNum
        {
            get { return _ctrlProjNum; }
            set
            {
                if (_ctrlProjNum != value)
                {
                    _ctrlProjNum = value;
                    OnPropertyChanged("CtrlProjNum");
                }
            }
        }
        private string _ctrlProjNum;
    
        [DataMember]
        public string MatrizCod
        {
            get { return _matrizCod; }
            set
            {
                if (_matrizCod != value)
                {
                    _matrizCod = value;
                    OnPropertyChanged("MatrizCod");
                }
            }
        }
        private string _matrizCod;
    
        [DataMember]
        public string LinhaCod
        {
            get { return _linhaCod; }
            set
            {
                if (_linhaCod != value)
                {
                    _linhaCod = value;
                    OnPropertyChanged("LinhaCod");
                }
            }
        }
        private string _linhaCod;
    
        [DataMember]
        public string ColunaCod
        {
            get { return _colunaCod; }
            set
            {
                if (_colunaCod != value)
                {
                    _colunaCod = value;
                    OnPropertyChanged("ColunaCod");
                }
            }
        }
        private string _colunaCod;
    
        [DataMember]
        public Nullable<int> VerbaCtrlProjSeq
        {
            get { return _verbaCtrlProjSeq; }
            set
            {
                if (_verbaCtrlProjSeq != value)
                {
                    _verbaCtrlProjSeq = value;
                    OnPropertyChanged("VerbaCtrlProjSeq");
                }
            }
        }
        private Nullable<int> _verbaCtrlProjSeq;
    
        [DataMember]
        public string ReqMatNum
        {
            get { return _reqMatNum; }
            set
            {
                if (_reqMatNum != value)
                {
                    _reqMatNum = value;
                    OnPropertyChanged("ReqMatNum");
                }
            }
        }
        private string _reqMatNum;
    
        [DataMember]
        public string PedCompStatDev
        {
            get { return _pedCompStatDev; }
            set
            {
                if (_pedCompStatDev != value)
                {
                    _pedCompStatDev = value;
                    OnPropertyChanged("PedCompStatDev");
                }
            }
        }
        private string _pedCompStatDev;
    
        [DataMember]
        public string PedCompCondPagCodAdiant
        {
            get { return _pedCompCondPagCodAdiant; }
            set
            {
                if (_pedCompCondPagCodAdiant != value)
                {
                    ChangeTracker.RecordOriginalValue("PedCompCondPagCodAdiant", _pedCompCondPagCodAdiant);
                    if (!IsDeserializing)
                    {
                        if (COND_PAG != null && COND_PAG.CondPagCod != value)
                        {
                            COND_PAG = null;
                        }
                    }
                    _pedCompCondPagCodAdiant = value;
                    OnPropertyChanged("PedCompCondPagCodAdiant");
                }
            }
        }
        private string _pedCompCondPagCodAdiant;
    
        [DataMember]
        public Nullable<decimal> PedCompValAdiant
        {
            get { return _pedCompValAdiant; }
            set
            {
                if (_pedCompValAdiant != value)
                {
                    _pedCompValAdiant = value;
                    OnPropertyChanged("PedCompValAdiant");
                }
            }
        }
        private Nullable<decimal> _pedCompValAdiant;
    
        [DataMember]
        public string PedCompAtualEstimCCtrl
        {
            get { return _pedCompAtualEstimCCtrl; }
            set
            {
                if (_pedCompAtualEstimCCtrl != value)
                {
                    _pedCompAtualEstimCCtrl = value;
                    OnPropertyChanged("PedCompAtualEstimCCtrl");
                }
            }
        }
        private string _pedCompAtualEstimCCtrl;
    
        [DataMember]
        public Nullable<decimal> PedCompValPISProdRF
        {
            get { return _pedCompValPISProdRF; }
            set
            {
                if (_pedCompValPISProdRF != value)
                {
                    _pedCompValPISProdRF = value;
                    OnPropertyChanged("PedCompValPISProdRF");
                }
            }
        }
        private Nullable<decimal> _pedCompValPISProdRF;
    
        [DataMember]
        public Nullable<decimal> PedCompValCofinsProdRF
        {
            get { return _pedCompValCofinsProdRF; }
            set
            {
                if (_pedCompValCofinsProdRF != value)
                {
                    _pedCompValCofinsProdRF = value;
                    OnPropertyChanged("PedCompValCofinsProdRF");
                }
            }
        }
        private Nullable<decimal> _pedCompValCofinsProdRF;
    
        [DataMember]
        public string PedCompCertific
        {
            get { return _pedCompCertific; }
            set
            {
                if (_pedCompCertific != value)
                {
                    _pedCompCertific = value;
                    OnPropertyChanged("PedCompCertific");
                }
            }
        }
        private string _pedCompCertific;
    
        [DataMember]
        public string USERAprovador
        {
            get { return _uSERAprovador; }
            set
            {
                if (_uSERAprovador != value)
                {
                    _uSERAprovador = value;
                    OnPropertyChanged("USERAprovador");
                }
            }
        }
        private string _uSERAprovador;
    
        [DataMember]
        public string USERGeradoDeCopia
        {
            get { return _uSERGeradoDeCopia; }
            set
            {
                if (_uSERGeradoDeCopia != value)
                {
                    _uSERGeradoDeCopia = value;
                    OnPropertyChanged("USERGeradoDeCopia");
                }
            }
        }
        private string _uSERGeradoDeCopia;
    
        [DataMember]
        public string USERLiberaAprovacao
        {
            get { return _uSERLiberaAprovacao; }
            set
            {
                if (_uSERLiberaAprovacao != value)
                {
                    _uSERLiberaAprovacao = value;
                    OnPropertyChanged("USERLiberaAprovacao");
                }
            }
        }
        private string _uSERLiberaAprovacao;
    
        [DataMember]
        public string USERPedidoCotado
        {
            get { return _uSERPedidoCotado; }
            set
            {
                if (_uSERPedidoCotado != value)
                {
                    _uSERPedidoCotado = value;
                    OnPropertyChanged("USERPedidoCotado");
                }
            }
        }
        private string _uSERPedidoCotado;
    
        [DataMember]
        public string PedCompStatDisponib
        {
            get { return _pedCompStatDisponib; }
            set
            {
                if (_pedCompStatDisponib != value)
                {
                    _pedCompStatDisponib = value;
                    OnPropertyChanged("PedCompStatDisponib");
                }
            }
        }
        private string _pedCompStatDisponib;
    
        [DataMember]
        public string PedCompUsuCodEmUso
        {
            get { return _pedCompUsuCodEmUso; }
            set
            {
                if (_pedCompUsuCodEmUso != value)
                {
                    ChangeTracker.RecordOriginalValue("PedCompUsuCodEmUso", _pedCompUsuCodEmUso);
                    if (!IsDeserializing)
                    {
                        if (USUARIO1 != null && USUARIO1.UsuCod != value)
                        {
                            USUARIO1 = null;
                        }
                    }
                    _pedCompUsuCodEmUso = value;
                    OnPropertyChanged("PedCompUsuCodEmUso");
                }
            }
        }
        private string _pedCompUsuCodEmUso;
    
        [DataMember]
        public string USERMotivoManutencaoVeiculo
        {
            get { return _uSERMotivoManutencaoVeiculo; }
            set
            {
                if (_uSERMotivoManutencaoVeiculo != value)
                {
                    _uSERMotivoManutencaoVeiculo = value;
                    OnPropertyChanged("USERMotivoManutencaoVeiculo");
                }
            }
        }
        private string _uSERMotivoManutencaoVeiculo;
    
        [DataMember]
        public string USERPlacaVeiculo
        {
            get { return _uSERPlacaVeiculo; }
            set
            {
                if (_uSERPlacaVeiculo != value)
                {
                    _uSERPlacaVeiculo = value;
                    OnPropertyChanged("USERPlacaVeiculo");
                }
            }
        }
        private string _uSERPlacaVeiculo;
    
        [DataMember]
        public Nullable<System.DateTime> PedCompDataHoraInicEntrega
        {
            get { return _pedCompDataHoraInicEntrega; }
            set
            {
                if (_pedCompDataHoraInicEntrega != value)
                {
                    _pedCompDataHoraInicEntrega = value;
                    OnPropertyChanged("PedCompDataHoraInicEntrega");
                }
            }
        }
        private Nullable<System.DateTime> _pedCompDataHoraInicEntrega;
    
        [DataMember]
        public Nullable<System.DateTime> PedCompDataHoraFimEntrega
        {
            get { return _pedCompDataHoraFimEntrega; }
            set
            {
                if (_pedCompDataHoraFimEntrega != value)
                {
                    _pedCompDataHoraFimEntrega = value;
                    OnPropertyChanged("PedCompDataHoraFimEntrega");
                }
            }
        }
        private Nullable<System.DateTime> _pedCompDataHoraFimEntrega;
    
        [DataMember]
        public string PEDCOMPENTNOME
        {
            get { return _pEDCOMPENTNOME; }
            set
            {
                if (_pEDCOMPENTNOME != value)
                {
                    _pEDCOMPENTNOME = value;
                    OnPropertyChanged("PEDCOMPENTNOME");
                }
            }
        }
        private string _pEDCOMPENTNOME;
    
        [DataMember]
        public Nullable<int> IdGerencProj
        {
            get { return _idGerencProj; }
            set
            {
                if (_idGerencProj != value)
                {
                    _idGerencProj = value;
                    OnPropertyChanged("IdGerencProj");
                }
            }
        }
        private Nullable<int> _idGerencProj;
    
        [DataMember]
        public Nullable<int> IdVerbaGerencProj
        {
            get { return _idVerbaGerencProj; }
            set
            {
                if (_idVerbaGerencProj != value)
                {
                    _idVerbaGerencProj = value;
                    OnPropertyChanged("IdVerbaGerencProj");
                }
            }
        }
        private Nullable<int> _idVerbaGerencProj;
    
        [DataMember]
        public Nullable<short> USERNumFluig
        {
            get { return _uSERNumFluig; }
            set
            {
                if (_uSERNumFluig != value)
                {
                    _uSERNumFluig = value;
                    OnPropertyChanged("USERNumFluig");
                }
            }
        }
        private Nullable<short> _uSERNumFluig;
    
        [DataMember]
        public string USERRecebido
        {
            get { return _uSERRecebido; }
            set
            {
                if (_uSERRecebido != value)
                {
                    _uSERRecebido = value;
                    OnPropertyChanged("USERRecebido");
                }
            }
        }
        private string _uSERRecebido;
    
        [DataMember]
        public string PEDCOMPJUST
        {
            get { return _pEDCOMPJUST; }
            set
            {
                if (_pEDCOMPJUST != value)
                {
                    _pEDCOMPJUST = value;
                    OnPropertyChanged("PEDCOMPJUST");
                }
            }
        }
        private string _pEDCOMPJUST;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public COND_PAG COND_PAG
        {
            get { return _cOND_PAG; }
            set
            {
                if (!ReferenceEquals(_cOND_PAG, value))
                {
                    var previousValue = _cOND_PAG;
                    _cOND_PAG = value;
                    FixupCOND_PAG(previousValue);
                    OnNavigationPropertyChanged("COND_PAG");
                }
            }
        }
        private COND_PAG _cOND_PAG;
    
        [DataMember]
        public COND_PAG_PED_COMP COND_PAG_PED_COMP
        {
            get { return _cOND_PAG_PED_COMP; }
            set
            {
                if (!ReferenceEquals(_cOND_PAG_PED_COMP, value))
                {
                    var previousValue = _cOND_PAG_PED_COMP;
                    _cOND_PAG_PED_COMP = value;
                    FixupCOND_PAG_PED_COMP(previousValue);
                    OnNavigationPropertyChanged("COND_PAG_PED_COMP");
                }
            }
        }
        private COND_PAG_PED_COMP _cOND_PAG_PED_COMP;
    
        [DataMember]
        public EMPRESA_FILIAL EMPRESA_FILIAL
        {
            get { return _eMPRESA_FILIAL; }
            set
            {
                if (!ReferenceEquals(_eMPRESA_FILIAL, value))
                {
                    var previousValue = _eMPRESA_FILIAL;
                    _eMPRESA_FILIAL = value;
                    FixupEMPRESA_FILIAL(previousValue);
                    OnNavigationPropertyChanged("EMPRESA_FILIAL");
                }
            }
        }
        private EMPRESA_FILIAL _eMPRESA_FILIAL;
    
        [DataMember]
        public EMPRESA_FILIAL EMPRESA_FILIAL1
        {
            get { return _eMPRESA_FILIAL1; }
            set
            {
                if (!ReferenceEquals(_eMPRESA_FILIAL1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added && value != null)
                    {
                        // This the dependent end of an identifying relationship, so the principal end cannot be changed if it is already set,
                        // otherwise it can only be set to an entity with a primary key that is the same value as the dependent's foreign key.
                        if (EmpCod != value.EmpCod)
                        {
                            throw new InvalidOperationException("The principal end of an identifying relationship can only be changed when the dependent end is in the Added state.");
                        }
                    }
                    var previousValue = _eMPRESA_FILIAL1;
                    _eMPRESA_FILIAL1 = value;
                    FixupEMPRESA_FILIAL1(previousValue);
                    OnNavigationPropertyChanged("EMPRESA_FILIAL1");
                }
            }
        }
        private EMPRESA_FILIAL _eMPRESA_FILIAL1;
    
        [DataMember]
        public IND_ECONOMICO IND_ECONOMICO
        {
            get { return _iND_ECONOMICO; }
            set
            {
                if (!ReferenceEquals(_iND_ECONOMICO, value))
                {
                    var previousValue = _iND_ECONOMICO;
                    _iND_ECONOMICO = value;
                    FixupIND_ECONOMICO(previousValue);
                    OnNavigationPropertyChanged("IND_ECONOMICO");
                }
            }
        }
        private IND_ECONOMICO _iND_ECONOMICO;
    
        [DataMember]
        public TrackableCollection<ITEM_PED_COMP> ITEM_PED_COMP
        {
            get
            {
                if (_iTEM_PED_COMP == null)
                {
                    _iTEM_PED_COMP = new TrackableCollection<ITEM_PED_COMP>();
                    _iTEM_PED_COMP.CollectionChanged += FixupITEM_PED_COMP;
                }
                return _iTEM_PED_COMP;
            }
            set
            {
                if (!ReferenceEquals(_iTEM_PED_COMP, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_iTEM_PED_COMP != null)
                    {
                        _iTEM_PED_COMP.CollectionChanged -= FixupITEM_PED_COMP;
                        // This is the principal end in an association that performs cascade deletes.
                        // Remove the cascade delete event handler for any entities in the current collection.
                        foreach (ITEM_PED_COMP item in _iTEM_PED_COMP)
                        {
                            ChangeTracker.ObjectStateChanging -= item.HandleCascadeDelete;
                        }
                    }
                    _iTEM_PED_COMP = value;
                    if (_iTEM_PED_COMP != null)
                    {
                        _iTEM_PED_COMP.CollectionChanged += FixupITEM_PED_COMP;
                        // This is the principal end in an association that performs cascade deletes.
                        // Add the cascade delete event handler for any entities that are already in the new collection.
                        foreach (ITEM_PED_COMP item in _iTEM_PED_COMP)
                        {
                            ChangeTracker.ObjectStateChanging += item.HandleCascadeDelete;
                        }
                    }
                    OnNavigationPropertyChanged("ITEM_PED_COMP");
                }
            }
        }
        private TrackableCollection<ITEM_PED_COMP> _iTEM_PED_COMP;
    
        [DataMember]
        public TrackableCollection<PARC_PAG_PED_COMP> PARC_PAG_PED_COMP
        {
            get
            {
                if (_pARC_PAG_PED_COMP == null)
                {
                    _pARC_PAG_PED_COMP = new TrackableCollection<PARC_PAG_PED_COMP>();
                    _pARC_PAG_PED_COMP.CollectionChanged += FixupPARC_PAG_PED_COMP;
                }
                return _pARC_PAG_PED_COMP;
            }
            set
            {
                if (!ReferenceEquals(_pARC_PAG_PED_COMP, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pARC_PAG_PED_COMP != null)
                    {
                        _pARC_PAG_PED_COMP.CollectionChanged -= FixupPARC_PAG_PED_COMP;
                        // This is the principal end in an association that performs cascade deletes.
                        // Remove the cascade delete event handler for any entities in the current collection.
                        foreach (PARC_PAG_PED_COMP item in _pARC_PAG_PED_COMP)
                        {
                            ChangeTracker.ObjectStateChanging -= item.HandleCascadeDelete;
                        }
                    }
                    _pARC_PAG_PED_COMP = value;
                    if (_pARC_PAG_PED_COMP != null)
                    {
                        _pARC_PAG_PED_COMP.CollectionChanged += FixupPARC_PAG_PED_COMP;
                        // This is the principal end in an association that performs cascade deletes.
                        // Add the cascade delete event handler for any entities that are already in the new collection.
                        foreach (PARC_PAG_PED_COMP item in _pARC_PAG_PED_COMP)
                        {
                            ChangeTracker.ObjectStateChanging += item.HandleCascadeDelete;
                        }
                    }
                    OnNavigationPropertyChanged("PARC_PAG_PED_COMP");
                }
            }
        }
        private TrackableCollection<PARC_PAG_PED_COMP> _pARC_PAG_PED_COMP;
    
        [DataMember]
        public REQ_COMP REQ_COMP
        {
            get { return _rEQ_COMP; }
            set
            {
                if (!ReferenceEquals(_rEQ_COMP, value))
                {
                    var previousValue = _rEQ_COMP;
                    _rEQ_COMP = value;
                    FixupREQ_COMP(previousValue);
                    OnNavigationPropertyChanged("REQ_COMP");
                }
            }
        }
        private REQ_COMP _rEQ_COMP;
    
        [DataMember]
        public USUARIO USUARIO
        {
            get { return _uSUARIO; }
            set
            {
                if (!ReferenceEquals(_uSUARIO, value))
                {
                    var previousValue = _uSUARIO;
                    _uSUARIO = value;
                    FixupUSUARIO(previousValue);
                    OnNavigationPropertyChanged("USUARIO");
                }
            }
        }
        private USUARIO _uSUARIO;
    
        [DataMember]
        public TrackableCollection<PED_COMP> PED_COMP1
        {
            get
            {
                if (_pED_COMP1 == null)
                {
                    _pED_COMP1 = new TrackableCollection<PED_COMP>();
                    _pED_COMP1.CollectionChanged += FixupPED_COMP1;
                }
                return _pED_COMP1;
            }
            set
            {
                if (!ReferenceEquals(_pED_COMP1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pED_COMP1 != null)
                    {
                        _pED_COMP1.CollectionChanged -= FixupPED_COMP1;
                    }
                    _pED_COMP1 = value;
                    if (_pED_COMP1 != null)
                    {
                        _pED_COMP1.CollectionChanged += FixupPED_COMP1;
                    }
                    OnNavigationPropertyChanged("PED_COMP1");
                }
            }
        }
        private TrackableCollection<PED_COMP> _pED_COMP1;
    
        [DataMember]
        public PED_COMP PED_COMP2
        {
            get { return _pED_COMP2; }
            set
            {
                if (!ReferenceEquals(_pED_COMP2, value))
                {
                    var previousValue = _pED_COMP2;
                    _pED_COMP2 = value;
                    FixupPED_COMP2(previousValue);
                    OnNavigationPropertyChanged("PED_COMP2");
                }
            }
        }
        private PED_COMP _pED_COMP2;
    
        [DataMember]
        public USUARIO USUARIO1
        {
            get { return _uSUARIO1; }
            set
            {
                if (!ReferenceEquals(_uSUARIO1, value))
                {
                    var previousValue = _uSUARIO1;
                    _uSUARIO1 = value;
                    FixupUSUARIO1(previousValue);
                    OnNavigationPropertyChanged("USUARIO1");
                }
            }
        }
        private USUARIO _uSUARIO1;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        // This entity type is the dependent end in at least one association that performs cascade deletes.
        // This event handler will process notifications that occur when the principal end is deleted.
        internal void HandleCascadeDelete(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                this.MarkAsDeleted();
            }
        }
    
        protected virtual void ClearNavigationProperties()
        {
            COND_PAG = null;
            COND_PAG_PED_COMP = null;
            EMPRESA_FILIAL = null;
            EMPRESA_FILIAL1 = null;
            IND_ECONOMICO = null;
            ITEM_PED_COMP.Clear();
            PARC_PAG_PED_COMP.Clear();
            REQ_COMP = null;
            USUARIO = null;
            PED_COMP1.Clear();
            PED_COMP2 = null;
            USUARIO1 = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupCOND_PAG(COND_PAG previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.PED_COMP.Contains(this))
            {
                previousValue.PED_COMP.Remove(this);
            }
    
            if (COND_PAG != null)
            {
                if (!COND_PAG.PED_COMP.Contains(this))
                {
                    COND_PAG.PED_COMP.Add(this);
                }
    
                PedCompCondPagCodAdiant = COND_PAG.CondPagCod;
            }
            else if (!skipKeys)
            {
                PedCompCondPagCodAdiant = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("COND_PAG")
                    && (ChangeTracker.OriginalValues["COND_PAG"] == COND_PAG))
                {
                    ChangeTracker.OriginalValues.Remove("COND_PAG");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("COND_PAG", previousValue);
                }
                if (COND_PAG != null && !COND_PAG.ChangeTracker.ChangeTrackingEnabled)
                {
                    COND_PAG.StartTracking();
                }
            }
        }
    
        private void FixupCOND_PAG_PED_COMP(COND_PAG_PED_COMP previousValue)
        {
            // This is the principal end in an association that performs cascade deletes.
            // Update the event listener to refer to the new dependent.
            if (previousValue != null)
            {
                ChangeTracker.ObjectStateChanging -= previousValue.HandleCascadeDelete;
            }
    
            if (COND_PAG_PED_COMP != null)
            {
                ChangeTracker.ObjectStateChanging += COND_PAG_PED_COMP.HandleCascadeDelete;
            }
    
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && ReferenceEquals(previousValue.PED_COMP, this))
            {
                previousValue.PED_COMP = null;
            }
    
            if (COND_PAG_PED_COMP != null)
            {
                COND_PAG_PED_COMP.PED_COMP = this;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("COND_PAG_PED_COMP")
                    && (ChangeTracker.OriginalValues["COND_PAG_PED_COMP"] == COND_PAG_PED_COMP))
                {
                    ChangeTracker.OriginalValues.Remove("COND_PAG_PED_COMP");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("COND_PAG_PED_COMP", previousValue);
                    // This is the principal end of an identifying association, so the dependent must be deleted when the relationship is removed.
                    // If the current state of the dependent is Added, the relationship can be changed without causing the dependent to be deleted.
                    if (previousValue != null && previousValue.ChangeTracker.State != ObjectState.Added)
                    {
                        previousValue.MarkAsDeleted();
                    }
                }
                if (COND_PAG_PED_COMP != null && !COND_PAG_PED_COMP.ChangeTracker.ChangeTrackingEnabled)
                {
                    COND_PAG_PED_COMP.StartTracking();
                }
            }
        }
    
        private void FixupEMPRESA_FILIAL(EMPRESA_FILIAL previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.PED_COMP.Contains(this))
            {
                previousValue.PED_COMP.Remove(this);
            }
    
            if (EMPRESA_FILIAL != null)
            {
                if (!EMPRESA_FILIAL.PED_COMP.Contains(this))
                {
                    EMPRESA_FILIAL.PED_COMP.Add(this);
                }
    
                PedCompEmpCodLocEnt = EMPRESA_FILIAL.EmpCod;
            }
            else if (!skipKeys)
            {
                PedCompEmpCodLocEnt = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("EMPRESA_FILIAL")
                    && (ChangeTracker.OriginalValues["EMPRESA_FILIAL"] == EMPRESA_FILIAL))
                {
                    ChangeTracker.OriginalValues.Remove("EMPRESA_FILIAL");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("EMPRESA_FILIAL", previousValue);
                }
                if (EMPRESA_FILIAL != null && !EMPRESA_FILIAL.ChangeTracker.ChangeTrackingEnabled)
                {
                    EMPRESA_FILIAL.StartTracking();
                }
            }
        }
    
        private void FixupEMPRESA_FILIAL1(EMPRESA_FILIAL previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.PED_COMP1.Contains(this))
            {
                previousValue.PED_COMP1.Remove(this);
            }
    
            if (EMPRESA_FILIAL1 != null)
            {
                if (!EMPRESA_FILIAL1.PED_COMP1.Contains(this))
                {
                    EMPRESA_FILIAL1.PED_COMP1.Add(this);
                }
    
                EmpCod = EMPRESA_FILIAL1.EmpCod;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("EMPRESA_FILIAL1")
                    && (ChangeTracker.OriginalValues["EMPRESA_FILIAL1"] == EMPRESA_FILIAL1))
                {
                    ChangeTracker.OriginalValues.Remove("EMPRESA_FILIAL1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("EMPRESA_FILIAL1", previousValue);
                }
                if (EMPRESA_FILIAL1 != null && !EMPRESA_FILIAL1.ChangeTracker.ChangeTrackingEnabled)
                {
                    EMPRESA_FILIAL1.StartTracking();
                }
            }
        }
    
        private void FixupIND_ECONOMICO(IND_ECONOMICO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.PED_COMP.Contains(this))
            {
                previousValue.PED_COMP.Remove(this);
            }
    
            if (IND_ECONOMICO != null)
            {
                if (!IND_ECONOMICO.PED_COMP.Contains(this))
                {
                    IND_ECONOMICO.PED_COMP.Add(this);
                }
    
                IndEconCod = IND_ECONOMICO.IndEconCod;
            }
            else if (!skipKeys)
            {
                IndEconCod = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("IND_ECONOMICO")
                    && (ChangeTracker.OriginalValues["IND_ECONOMICO"] == IND_ECONOMICO))
                {
                    ChangeTracker.OriginalValues.Remove("IND_ECONOMICO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("IND_ECONOMICO", previousValue);
                }
                if (IND_ECONOMICO != null && !IND_ECONOMICO.ChangeTracker.ChangeTrackingEnabled)
                {
                    IND_ECONOMICO.StartTracking();
                }
            }
        }
    
        private void FixupREQ_COMP(REQ_COMP previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.PED_COMP.Contains(this))
            {
                previousValue.PED_COMP.Remove(this);
            }
    
            if (REQ_COMP != null)
            {
                if (!REQ_COMP.PED_COMP.Contains(this))
                {
                    REQ_COMP.PED_COMP.Add(this);
                }
    
                ReqCompEmpCod = REQ_COMP.EmpCod;
                ReqCompNum = REQ_COMP.ReqCompNum;
            }
            else if (!skipKeys)
            {
                ReqCompEmpCod = null;
                ReqCompNum = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("REQ_COMP")
                    && (ChangeTracker.OriginalValues["REQ_COMP"] == REQ_COMP))
                {
                    ChangeTracker.OriginalValues.Remove("REQ_COMP");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("REQ_COMP", previousValue);
                }
                if (REQ_COMP != null && !REQ_COMP.ChangeTracker.ChangeTrackingEnabled)
                {
                    REQ_COMP.StartTracking();
                }
            }
        }
    
        private void FixupUSUARIO(USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.PED_COMP.Contains(this))
            {
                previousValue.PED_COMP.Remove(this);
            }
    
            if (USUARIO != null)
            {
                if (!USUARIO.PED_COMP.Contains(this))
                {
                    USUARIO.PED_COMP.Add(this);
                }
    
                UsuCod = USUARIO.UsuCod;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("USUARIO")
                    && (ChangeTracker.OriginalValues["USUARIO"] == USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("USUARIO", previousValue);
                }
                if (USUARIO != null && !USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupPED_COMP2(PED_COMP previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.PED_COMP1.Contains(this))
            {
                previousValue.PED_COMP1.Remove(this);
            }
    
            if (PED_COMP2 != null)
            {
                if (!PED_COMP2.PED_COMP1.Contains(this))
                {
                    PED_COMP2.PED_COMP1.Add(this);
                }
    
                EmpCod = PED_COMP2.EmpCod;
                PedCompRef = PED_COMP2.PedCompNum;
            }
            else if (!skipKeys)
            {
                PedCompRef = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("PED_COMP2")
                    && (ChangeTracker.OriginalValues["PED_COMP2"] == PED_COMP2))
                {
                    ChangeTracker.OriginalValues.Remove("PED_COMP2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("PED_COMP2", previousValue);
                }
                if (PED_COMP2 != null && !PED_COMP2.ChangeTracker.ChangeTrackingEnabled)
                {
                    PED_COMP2.StartTracking();
                }
            }
        }
    
        private void FixupUSUARIO1(USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.PED_COMP1.Contains(this))
            {
                previousValue.PED_COMP1.Remove(this);
            }
    
            if (USUARIO1 != null)
            {
                if (!USUARIO1.PED_COMP1.Contains(this))
                {
                    USUARIO1.PED_COMP1.Add(this);
                }
    
                PedCompUsuCodEmUso = USUARIO1.UsuCod;
            }
            else if (!skipKeys)
            {
                PedCompUsuCodEmUso = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("USUARIO1")
                    && (ChangeTracker.OriginalValues["USUARIO1"] == USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("USUARIO1", previousValue);
                }
                if (USUARIO1 != null && !USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupITEM_PED_COMP(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ITEM_PED_COMP item in e.NewItems)
                {
                    item.PED_COMP = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ITEM_PED_COMP", item);
                    }
                    // This is the principal end in an association that performs cascade deletes.
                    // Update the event listener to refer to the new dependent.
                    ChangeTracker.ObjectStateChanging += item.HandleCascadeDelete;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ITEM_PED_COMP item in e.OldItems)
                {
                    if (ReferenceEquals(item.PED_COMP, this))
                    {
                        item.PED_COMP = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ITEM_PED_COMP", item);
                        // Delete the dependent end of this identifying association. If the current state is Added,
                        // allow the relationship to be changed without causing the dependent to be deleted.
                        if (item.ChangeTracker.State != ObjectState.Added)
                        {
                            item.MarkAsDeleted();
                        }
                    }
                    // This is the principal end in an association that performs cascade deletes.
                    // Remove the previous dependent from the event listener.
                    ChangeTracker.ObjectStateChanging -= item.HandleCascadeDelete;
                }
            }
        }
    
        private void FixupPARC_PAG_PED_COMP(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PARC_PAG_PED_COMP item in e.NewItems)
                {
                    item.PED_COMP = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PARC_PAG_PED_COMP", item);
                    }
                    // This is the principal end in an association that performs cascade deletes.
                    // Update the event listener to refer to the new dependent.
                    ChangeTracker.ObjectStateChanging += item.HandleCascadeDelete;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PARC_PAG_PED_COMP item in e.OldItems)
                {
                    if (ReferenceEquals(item.PED_COMP, this))
                    {
                        item.PED_COMP = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PARC_PAG_PED_COMP", item);
                        // Delete the dependent end of this identifying association. If the current state is Added,
                        // allow the relationship to be changed without causing the dependent to be deleted.
                        if (item.ChangeTracker.State != ObjectState.Added)
                        {
                            item.MarkAsDeleted();
                        }
                    }
                    // This is the principal end in an association that performs cascade deletes.
                    // Remove the previous dependent from the event listener.
                    ChangeTracker.ObjectStateChanging -= item.HandleCascadeDelete;
                }
            }
        }
    
        private void FixupPED_COMP1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PED_COMP item in e.NewItems)
                {
                    item.PED_COMP2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PED_COMP1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PED_COMP item in e.OldItems)
                {
                    if (ReferenceEquals(item.PED_COMP2, this))
                    {
                        item.PED_COMP2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PED_COMP1", item);
                    }
                }
            }
        }

        #endregion

    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHylinedoBrasilMobile.Models.bdApolo2
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(ATIVIDADE_GRUPO))]
    public partial class ATIVIDADE: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public string EmpCod
        {
            get { return _empCod; }
            set
            {
                if (_empCod != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'EmpCod' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    if (!IsDeserializing)
                    {
                        if (ATIVIDADE_GRUPO != null && ATIVIDADE_GRUPO.EmpCod != value)
                        {
                            ATIVIDADE_GRUPO = null;
                        }
                    }
                    _empCod = value;
                    OnPropertyChanged("EmpCod");
                }
            }
        }
        private string _empCod;
    
        [DataMember]
        public string CCtrlCodEstr
        {
            get { return _cCtrlCodEstr; }
            set
            {
                if (_cCtrlCodEstr != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'CCtrlCodEstr' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _cCtrlCodEstr = value;
                    OnPropertyChanged("CCtrlCodEstr");
                }
            }
        }
        private string _cCtrlCodEstr;
    
        [DataMember]
        public Nullable<decimal> AtivDisp
        {
            get { return _ativDisp; }
            set
            {
                if (_ativDisp != value)
                {
                    _ativDisp = value;
                    OnPropertyChanged("AtivDisp");
                }
            }
        }
        private Nullable<decimal> _ativDisp;
    
        [DataMember]
        public string UnidMedCodDisp
        {
            get { return _unidMedCodDisp; }
            set
            {
                if (_unidMedCodDisp != value)
                {
                    _unidMedCodDisp = value;
                    OnPropertyChanged("UnidMedCodDisp");
                }
            }
        }
        private string _unidMedCodDisp;
    
        [DataMember]
        public string PlanoCtaEmpCod
        {
            get { return _planoCtaEmpCod; }
            set
            {
                if (_planoCtaEmpCod != value)
                {
                    _planoCtaEmpCod = value;
                    OnPropertyChanged("PlanoCtaEmpCod");
                }
            }
        }
        private string _planoCtaEmpCod;
    
        [DataMember]
        public string PlanoCtaCodRed
        {
            get { return _planoCtaCodRed; }
            set
            {
                if (_planoCtaCodRed != value)
                {
                    _planoCtaCodRed = value;
                    OnPropertyChanged("PlanoCtaCodRed");
                }
            }
        }
        private string _planoCtaCodRed;
    
        [DataMember]
        public Nullable<decimal> AtivMOValFixo
        {
            get { return _ativMOValFixo; }
            set
            {
                if (_ativMOValFixo != value)
                {
                    _ativMOValFixo = value;
                    OnPropertyChanged("AtivMOValFixo");
                }
            }
        }
        private Nullable<decimal> _ativMOValFixo;
    
        [DataMember]
        public Nullable<decimal> AtivMOValVar
        {
            get { return _ativMOValVar; }
            set
            {
                if (_ativMOValVar != value)
                {
                    _ativMOValVar = value;
                    OnPropertyChanged("AtivMOValVar");
                }
            }
        }
        private Nullable<decimal> _ativMOValVar;
    
        [DataMember]
        public Nullable<decimal> AtivEquipValFixo
        {
            get { return _ativEquipValFixo; }
            set
            {
                if (_ativEquipValFixo != value)
                {
                    _ativEquipValFixo = value;
                    OnPropertyChanged("AtivEquipValFixo");
                }
            }
        }
        private Nullable<decimal> _ativEquipValFixo;
    
        [DataMember]
        public Nullable<decimal> AtivEquipValVar
        {
            get { return _ativEquipValVar; }
            set
            {
                if (_ativEquipValVar != value)
                {
                    _ativEquipValVar = value;
                    OnPropertyChanged("AtivEquipValVar");
                }
            }
        }
        private Nullable<decimal> _ativEquipValVar;
    
        [DataMember]
        public Nullable<decimal> AtivCtaValFixo
        {
            get { return _ativCtaValFixo; }
            set
            {
                if (_ativCtaValFixo != value)
                {
                    _ativCtaValFixo = value;
                    OnPropertyChanged("AtivCtaValFixo");
                }
            }
        }
        private Nullable<decimal> _ativCtaValFixo;
    
        [DataMember]
        public Nullable<decimal> AtivCtaValVar
        {
            get { return _ativCtaValVar; }
            set
            {
                if (_ativCtaValVar != value)
                {
                    _ativCtaValVar = value;
                    OnPropertyChanged("AtivCtaValVar");
                }
            }
        }
        private Nullable<decimal> _ativCtaValVar;
    
        [DataMember]
        public Nullable<decimal> AtivAuxValFixo
        {
            get { return _ativAuxValFixo; }
            set
            {
                if (_ativAuxValFixo != value)
                {
                    _ativAuxValFixo = value;
                    OnPropertyChanged("AtivAuxValFixo");
                }
            }
        }
        private Nullable<decimal> _ativAuxValFixo;
    
        [DataMember]
        public Nullable<decimal> AtivAuxValVar
        {
            get { return _ativAuxValVar; }
            set
            {
                if (_ativAuxValVar != value)
                {
                    _ativAuxValVar = value;
                    OnPropertyChanged("AtivAuxValVar");
                }
            }
        }
        private Nullable<decimal> _ativAuxValVar;
    
        [DataMember]
        public Nullable<decimal> AtivMatValFixo
        {
            get { return _ativMatValFixo; }
            set
            {
                if (_ativMatValFixo != value)
                {
                    _ativMatValFixo = value;
                    OnPropertyChanged("AtivMatValFixo");
                }
            }
        }
        private Nullable<decimal> _ativMatValFixo;
    
        [DataMember]
        public Nullable<decimal> AtivMatValVar
        {
            get { return _ativMatValVar; }
            set
            {
                if (_ativMatValVar != value)
                {
                    _ativMatValVar = value;
                    OnPropertyChanged("AtivMatValVar");
                }
            }
        }
        private Nullable<decimal> _ativMatValVar;
    
        [DataMember]
        public Nullable<decimal> AtivValFixo
        {
            get { return _ativValFixo; }
            set
            {
                if (_ativValFixo != value)
                {
                    _ativValFixo = value;
                    OnPropertyChanged("AtivValFixo");
                }
            }
        }
        private Nullable<decimal> _ativValFixo;
    
        [DataMember]
        public Nullable<decimal> AtivValVar
        {
            get { return _ativValVar; }
            set
            {
                if (_ativValVar != value)
                {
                    _ativValVar = value;
                    OnPropertyChanged("AtivValVar");
                }
            }
        }
        private Nullable<decimal> _ativValVar;
    
        [DataMember]
        public Nullable<decimal> AtivUepDirecValFixo
        {
            get { return _ativUepDirecValFixo; }
            set
            {
                if (_ativUepDirecValFixo != value)
                {
                    _ativUepDirecValFixo = value;
                    OnPropertyChanged("AtivUepDirecValFixo");
                }
            }
        }
        private Nullable<decimal> _ativUepDirecValFixo;
    
        [DataMember]
        public Nullable<decimal> AtivUepDirecValVar
        {
            get { return _ativUepDirecValVar; }
            set
            {
                if (_ativUepDirecValVar != value)
                {
                    _ativUepDirecValVar = value;
                    OnPropertyChanged("AtivUepDirecValVar");
                }
            }
        }
        private Nullable<decimal> _ativUepDirecValVar;
    
        [DataMember]
        public string AtivStat
        {
            get { return _ativStat; }
            set
            {
                if (_ativStat != value)
                {
                    _ativStat = value;
                    OnPropertyChanged("AtivStat");
                }
            }
        }
        private string _ativStat;
    
        [DataMember]
        public string EntCod
        {
            get { return _entCod; }
            set
            {
                if (_entCod != value)
                {
                    _entCod = value;
                    OnPropertyChanged("EntCod");
                }
            }
        }
        private string _entCod;
    
        [DataMember]
        public string AtivCodAlt
        {
            get { return _ativCodAlt; }
            set
            {
                if (_ativCodAlt != value)
                {
                    _ativCodAlt = value;
                    OnPropertyChanged("AtivCodAlt");
                }
            }
        }
        private string _ativCodAlt;
    
        [DataMember]
        public Nullable<short> AtivContCalcRecursivo
        {
            get { return _ativContCalcRecursivo; }
            set
            {
                if (_ativContCalcRecursivo != value)
                {
                    _ativContCalcRecursivo = value;
                    OnPropertyChanged("AtivContCalcRecursivo");
                }
            }
        }
        private Nullable<short> _ativContCalcRecursivo;
    
        [DataMember]
        public string AtivTexto
        {
            get { return _ativTexto; }
            set
            {
                if (_ativTexto != value)
                {
                    _ativTexto = value;
                    OnPropertyChanged("AtivTexto");
                }
            }
        }
        private string _ativTexto;
    
        [DataMember]
        public Nullable<decimal> AtivMOIndirValFixo
        {
            get { return _ativMOIndirValFixo; }
            set
            {
                if (_ativMOIndirValFixo != value)
                {
                    _ativMOIndirValFixo = value;
                    OnPropertyChanged("AtivMOIndirValFixo");
                }
            }
        }
        private Nullable<decimal> _ativMOIndirValFixo;
    
        [DataMember]
        public Nullable<decimal> AtivMOIndirValVar
        {
            get { return _ativMOIndirValVar; }
            set
            {
                if (_ativMOIndirValVar != value)
                {
                    _ativMOIndirValVar = value;
                    OnPropertyChanged("AtivMOIndirValVar");
                }
            }
        }
        private Nullable<decimal> _ativMOIndirValVar;
    
        [DataMember]
        public string AtivGrpCodEstr
        {
            get { return _ativGrpCodEstr; }
            set
            {
                if (_ativGrpCodEstr != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'AtivGrpCodEstr' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    if (!IsDeserializing)
                    {
                        if (ATIVIDADE_GRUPO != null && ATIVIDADE_GRUPO.AtivGrpCodEstr != value)
                        {
                            ATIVIDADE_GRUPO = null;
                        }
                    }
                    _ativGrpCodEstr = value;
                    OnPropertyChanged("AtivGrpCodEstr");
                }
            }
        }
        private string _ativGrpCodEstr;
    
        [DataMember]
        public Nullable<System.DateTime> ATIVDTVALIDINI
        {
            get { return _aTIVDTVALIDINI; }
            set
            {
                if (_aTIVDTVALIDINI != value)
                {
                    _aTIVDTVALIDINI = value;
                    OnPropertyChanged("ATIVDTVALIDINI");
                }
            }
        }
        private Nullable<System.DateTime> _aTIVDTVALIDINI;
    
        [DataMember]
        public Nullable<System.DateTime> ATIVDTVALIDFIN
        {
            get { return _aTIVDTVALIDFIN; }
            set
            {
                if (_aTIVDTVALIDFIN != value)
                {
                    _aTIVDTVALIDFIN = value;
                    OnPropertyChanged("ATIVDTVALIDFIN");
                }
            }
        }
        private Nullable<System.DateTime> _aTIVDTVALIDFIN;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public ATIVIDADE_GRUPO ATIVIDADE_GRUPO
        {
            get { return _aTIVIDADE_GRUPO; }
            set
            {
                if (!ReferenceEquals(_aTIVIDADE_GRUPO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added && value != null)
                    {
                        // This the dependent end of an identifying relationship, so the principal end cannot be changed if it is already set,
                        // otherwise it can only be set to an entity with a primary key that is the same value as the dependent's foreign key.
                        if (EmpCod != value.EmpCod || AtivGrpCodEstr != value.AtivGrpCodEstr)
                        {
                            throw new InvalidOperationException("The principal end of an identifying relationship can only be changed when the dependent end is in the Added state.");
                        }
                    }
                    var previousValue = _aTIVIDADE_GRUPO;
                    _aTIVIDADE_GRUPO = value;
                    FixupATIVIDADE_GRUPO(previousValue);
                    OnNavigationPropertyChanged("ATIVIDADE_GRUPO");
                }
            }
        }
        private ATIVIDADE_GRUPO _aTIVIDADE_GRUPO;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        // This entity type is the dependent end in at least one association that performs cascade deletes.
        // This event handler will process notifications that occur when the principal end is deleted.
        internal void HandleCascadeDelete(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                this.MarkAsDeleted();
            }
        }
    
        protected virtual void ClearNavigationProperties()
        {
            ATIVIDADE_GRUPO = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupATIVIDADE_GRUPO(ATIVIDADE_GRUPO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ATIVIDADE.Contains(this))
            {
                previousValue.ATIVIDADE.Remove(this);
            }
    
            if (ATIVIDADE_GRUPO != null)
            {
                if (!ATIVIDADE_GRUPO.ATIVIDADE.Contains(this))
                {
                    ATIVIDADE_GRUPO.ATIVIDADE.Add(this);
                }
    
                EmpCod = ATIVIDADE_GRUPO.EmpCod;
                AtivGrpCodEstr = ATIVIDADE_GRUPO.AtivGrpCodEstr;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ATIVIDADE_GRUPO")
                    && (ChangeTracker.OriginalValues["ATIVIDADE_GRUPO"] == ATIVIDADE_GRUPO))
                {
                    ChangeTracker.OriginalValues.Remove("ATIVIDADE_GRUPO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ATIVIDADE_GRUPO", previousValue);
                }
                if (ATIVIDADE_GRUPO != null && !ATIVIDADE_GRUPO.ChangeTracker.ChangeTrackingEnabled)
                {
                    ATIVIDADE_GRUPO.StartTracking();
                }
            }
        }

        #endregion

    }
}

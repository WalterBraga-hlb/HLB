//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHylinedoBrasilMobile.Models
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Config_Formula_Racao))]
    public partial class Config_Formula_Racao_Galpao: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _iD = value;
                    OnPropertyChanged("ID");
                }
            }
        }
        private int _iD;
    
        [DataMember]
        public int IDConfigFormulaRacao
        {
            get { return _iDConfigFormulaRacao; }
            set
            {
                if (_iDConfigFormulaRacao != value)
                {
                    ChangeTracker.RecordOriginalValue("IDConfigFormulaRacao", _iDConfigFormulaRacao);
                    if (!IsDeserializing)
                    {
                        if (Config_Formula_Racao != null && Config_Formula_Racao.ID != value)
                        {
                            Config_Formula_Racao = null;
                        }
                    }
                    _iDConfigFormulaRacao = value;
                    OnPropertyChanged("IDConfigFormulaRacao");
                }
            }
        }
        private int _iDConfigFormulaRacao;
    
        [DataMember]
        public string CodNucleo
        {
            get { return _codNucleo; }
            set
            {
                if (_codNucleo != value)
                {
                    _codNucleo = value;
                    OnPropertyChanged("CodNucleo");
                }
            }
        }
        private string _codNucleo;
    
        [DataMember]
        public string NumGalpao
        {
            get { return _numGalpao; }
            set
            {
                if (_numGalpao != value)
                {
                    _numGalpao = value;
                    OnPropertyChanged("NumGalpao");
                }
            }
        }
        private string _numGalpao;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public Config_Formula_Racao Config_Formula_Racao
        {
            get { return _config_Formula_Racao; }
            set
            {
                if (!ReferenceEquals(_config_Formula_Racao, value))
                {
                    var previousValue = _config_Formula_Racao;
                    _config_Formula_Racao = value;
                    FixupConfig_Formula_Racao(previousValue);
                    OnNavigationPropertyChanged("Config_Formula_Racao");
                }
            }
        }
        private Config_Formula_Racao _config_Formula_Racao;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Config_Formula_Racao = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupConfig_Formula_Racao(Config_Formula_Racao previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Config_Formula_Racao_Galpao.Contains(this))
            {
                previousValue.Config_Formula_Racao_Galpao.Remove(this);
            }
    
            if (Config_Formula_Racao != null)
            {
                if (!Config_Formula_Racao.Config_Formula_Racao_Galpao.Contains(this))
                {
                    Config_Formula_Racao.Config_Formula_Racao_Galpao.Add(this);
                }
    
                IDConfigFormulaRacao = Config_Formula_Racao.ID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Config_Formula_Racao")
                    && (ChangeTracker.OriginalValues["Config_Formula_Racao"] == Config_Formula_Racao))
                {
                    ChangeTracker.OriginalValues.Remove("Config_Formula_Racao");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Config_Formula_Racao", previousValue);
                }
                if (Config_Formula_Racao != null && !Config_Formula_Racao.ChangeTracker.ChangeTrackingEnabled)
                {
                    Config_Formula_Racao.StartTracking();
                }
            }
        }

        #endregion

    }
}

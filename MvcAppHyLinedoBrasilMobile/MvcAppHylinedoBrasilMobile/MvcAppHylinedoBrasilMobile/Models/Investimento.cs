//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHylinedoBrasilMobile.Models
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Investimento_Solicitacao))]
    [KnownType(typeof(Investimento_Mes))]
    public partial class Investimento: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _iD = value;
                    OnPropertyChanged("ID");
                }
            }
        }
        private int _iD;
    
        [DataMember]
        public string NumeroProjeto
        {
            get { return _numeroProjeto; }
            set
            {
                if (_numeroProjeto != value)
                {
                    _numeroProjeto = value;
                    OnPropertyChanged("NumeroProjeto");
                }
            }
        }
        private string _numeroProjeto;
    
        [DataMember]
        public string NomeProjeto
        {
            get { return _nomeProjeto; }
            set
            {
                if (_nomeProjeto != value)
                {
                    _nomeProjeto = value;
                    OnPropertyChanged("NomeProjeto");
                }
            }
        }
        private string _nomeProjeto;
    
        [DataMember]
        public string Departamento
        {
            get { return _departamento; }
            set
            {
                if (_departamento != value)
                {
                    _departamento = value;
                    OnPropertyChanged("Departamento");
                }
            }
        }
        private string _departamento;
    
        [DataMember]
        public string Responsavel
        {
            get { return _responsavel; }
            set
            {
                if (_responsavel != value)
                {
                    _responsavel = value;
                    OnPropertyChanged("Responsavel");
                }
            }
        }
        private string _responsavel;
    
        [DataMember]
        public decimal ValorAprovado
        {
            get { return _valorAprovado; }
            set
            {
                if (_valorAprovado != value)
                {
                    _valorAprovado = value;
                    OnPropertyChanged("ValorAprovado");
                }
            }
        }
        private decimal _valorAprovado;
    
        [DataMember]
        public int AnoMesInicial
        {
            get { return _anoMesInicial; }
            set
            {
                if (_anoMesInicial != value)
                {
                    _anoMesInicial = value;
                    OnPropertyChanged("AnoMesInicial");
                }
            }
        }
        private int _anoMesInicial;
    
        [DataMember]
        public int AnoMesFinal
        {
            get { return _anoMesFinal; }
            set
            {
                if (_anoMesFinal != value)
                {
                    _anoMesFinal = value;
                    OnPropertyChanged("AnoMesFinal");
                }
            }
        }
        private int _anoMesFinal;
    
        [DataMember]
        public string Usuario
        {
            get { return _usuario; }
            set
            {
                if (_usuario != value)
                {
                    _usuario = value;
                    OnPropertyChanged("Usuario");
                }
            }
        }
        private string _usuario;
    
        [DataMember]
        public System.DateTime DataHoraCadastro
        {
            get { return _dataHoraCadastro; }
            set
            {
                if (_dataHoraCadastro != value)
                {
                    _dataHoraCadastro = value;
                    OnPropertyChanged("DataHoraCadastro");
                }
            }
        }
        private System.DateTime _dataHoraCadastro;
    
        [DataMember]
        public string Origem
        {
            get { return _origem; }
            set
            {
                if (_origem != value)
                {
                    _origem = value;
                    OnPropertyChanged("Origem");
                }
            }
        }
        private string _origem;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<Investimento_Solicitacao> Investimento_Solicitacao
        {
            get
            {
                if (_investimento_Solicitacao == null)
                {
                    _investimento_Solicitacao = new TrackableCollection<Investimento_Solicitacao>();
                    _investimento_Solicitacao.CollectionChanged += FixupInvestimento_Solicitacao;
                }
                return _investimento_Solicitacao;
            }
            set
            {
                if (!ReferenceEquals(_investimento_Solicitacao, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_investimento_Solicitacao != null)
                    {
                        _investimento_Solicitacao.CollectionChanged -= FixupInvestimento_Solicitacao;
                    }
                    _investimento_Solicitacao = value;
                    if (_investimento_Solicitacao != null)
                    {
                        _investimento_Solicitacao.CollectionChanged += FixupInvestimento_Solicitacao;
                    }
                    OnNavigationPropertyChanged("Investimento_Solicitacao");
                }
            }
        }
        private TrackableCollection<Investimento_Solicitacao> _investimento_Solicitacao;
    
        [DataMember]
        public TrackableCollection<Investimento_Mes> Investimento_Mes
        {
            get
            {
                if (_investimento_Mes == null)
                {
                    _investimento_Mes = new TrackableCollection<Investimento_Mes>();
                    _investimento_Mes.CollectionChanged += FixupInvestimento_Mes;
                }
                return _investimento_Mes;
            }
            set
            {
                if (!ReferenceEquals(_investimento_Mes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_investimento_Mes != null)
                    {
                        _investimento_Mes.CollectionChanged -= FixupInvestimento_Mes;
                    }
                    _investimento_Mes = value;
                    if (_investimento_Mes != null)
                    {
                        _investimento_Mes.CollectionChanged += FixupInvestimento_Mes;
                    }
                    OnNavigationPropertyChanged("Investimento_Mes");
                }
            }
        }
        private TrackableCollection<Investimento_Mes> _investimento_Mes;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Investimento_Solicitacao.Clear();
            Investimento_Mes.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupInvestimento_Solicitacao(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Investimento_Solicitacao item in e.NewItems)
                {
                    item.Investimento = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Investimento_Solicitacao", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Investimento_Solicitacao item in e.OldItems)
                {
                    if (ReferenceEquals(item.Investimento, this))
                    {
                        item.Investimento = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Investimento_Solicitacao", item);
                    }
                }
            }
        }
    
        private void FixupInvestimento_Mes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Investimento_Mes item in e.NewItems)
                {
                    item.Investimento = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Investimento_Mes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Investimento_Mes item in e.OldItems)
                {
                    if (ReferenceEquals(item.Investimento, this))
                    {
                        item.Investimento = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Investimento_Mes", item);
                    }
                }
            }
        }

        #endregion

    }
}

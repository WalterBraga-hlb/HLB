//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHylinedoBrasilMobile.Models.Fluig
{
    [DataContract(IsReference = true)]
    public partial class VU_RRC_Fluig_Only: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public string NomeSolicitante
        {
            get { return _nomeSolicitante; }
            set
            {
                if (_nomeSolicitante != value)
                {
                    _nomeSolicitante = value;
                    OnPropertyChanged("NomeSolicitante");
                }
            }
        }
        private string _nomeSolicitante;
    
        [DataMember]
        public Nullable<System.DateTime> DataSolicitacao
        {
            get { return _dataSolicitacao; }
            set
            {
                if (_dataSolicitacao != value)
                {
                    _dataSolicitacao = value;
                    OnPropertyChanged("DataSolicitacao");
                }
            }
        }
        private Nullable<System.DateTime> _dataSolicitacao;
    
        [DataMember]
        public Nullable<System.DateTime> DataConclusao
        {
            get { return _dataConclusao; }
            set
            {
                if (_dataConclusao != value)
                {
                    _dataConclusao = value;
                    OnPropertyChanged("DataConclusao");
                }
            }
        }
        private Nullable<System.DateTime> _dataConclusao;
    
        [DataMember]
        public string Reclamação_Por
        {
            get { return _reclamação_Por; }
            set
            {
                if (_reclamação_Por != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Reclamação_Por' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _reclamação_Por = value;
                    OnPropertyChanged("Reclamação_Por");
                }
            }
        }
        private string _reclamação_Por;
    
        [DataMember]
        public int Nº_Reclamação
        {
            get { return _nº_Reclamação; }
            set
            {
                if (_nº_Reclamação != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Nº_Reclamação' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _nº_Reclamação = value;
                    OnPropertyChanged("Nº_Reclamação");
                }
            }
        }
        private int _nº_Reclamação;
    
        [DataMember]
        public string descricao_fatos
        {
            get { return _descricao_fatos; }
            set
            {
                if (_descricao_fatos != value)
                {
                    _descricao_fatos = value;
                    OnPropertyChanged("descricao_fatos");
                }
            }
        }
        private string _descricao_fatos;
    
        [DataMember]
        public string tipo_reclamacao
        {
            get { return _tipo_reclamacao; }
            set
            {
                if (_tipo_reclamacao != value)
                {
                    _tipo_reclamacao = value;
                    OnPropertyChanged("tipo_reclamacao");
                }
            }
        }
        private string _tipo_reclamacao;
    
        [DataMember]
        public string tipo_problema_incubatorio
        {
            get { return _tipo_problema_incubatorio; }
            set
            {
                if (_tipo_problema_incubatorio != value)
                {
                    _tipo_problema_incubatorio = value;
                    OnPropertyChanged("tipo_problema_incubatorio");
                }
            }
        }
        private string _tipo_problema_incubatorio;
    
        [DataMember]
        public string tipo_problema_transporte
        {
            get { return _tipo_problema_transporte; }
            set
            {
                if (_tipo_problema_transporte != value)
                {
                    _tipo_problema_transporte = value;
                    OnPropertyChanged("tipo_problema_transporte");
                }
            }
        }
        private string _tipo_problema_transporte;
    
        [DataMember]
        public string analise_granja
        {
            get { return _analise_granja; }
            set
            {
                if (_analise_granja != value)
                {
                    _analise_granja = value;
                    OnPropertyChanged("analise_granja");
                }
            }
        }
        private string _analise_granja;
    
        [DataMember]
        public string analise_qualidade
        {
            get { return _analise_qualidade; }
            set
            {
                if (_analise_qualidade != value)
                {
                    _analise_qualidade = value;
                    OnPropertyChanged("analise_qualidade");
                }
            }
        }
        private string _analise_qualidade;
    
        [DataMember]
        public string qtde_bonificada
        {
            get { return _qtde_bonificada; }
            set
            {
                if (_qtde_bonificada != value)
                {
                    _qtde_bonificada = value;
                    OnPropertyChanged("qtde_bonificada");
                }
            }
        }
        private string _qtde_bonificada;
    
        [DataMember]
        public string Status
        {
            get { return _status; }
            set
            {
                if (_status != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Status' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _status = value;
                    OnPropertyChanged("Status");
                }
            }
        }
        private string _status;
    
        [DataMember]
        public string chave_pedido
        {
            get { return _chave_pedido; }
            set
            {
                if (_chave_pedido != value)
                {
                    _chave_pedido = value;
                    OnPropertyChanged("chave_pedido");
                }
            }
        }
        private string _chave_pedido;
    
        [DataMember]
        public string data_bonificada_programacao
        {
            get { return _data_bonificada_programacao; }
            set
            {
                if (_data_bonificada_programacao != value)
                {
                    _data_bonificada_programacao = value;
                    OnPropertyChanged("data_bonificada_programacao");
                }
            }
        }
        private string _data_bonificada_programacao;
    
        [DataMember]
        public string qtde_bonificada_programacao
        {
            get { return _qtde_bonificada_programacao; }
            set
            {
                if (_qtde_bonificada_programacao != value)
                {
                    _qtde_bonificada_programacao = value;
                    OnPropertyChanged("qtde_bonificada_programacao");
                }
            }
        }
        private string _qtde_bonificada_programacao;
    
        [DataMember]
        public string idweb_bonificada_programacao
        {
            get { return _idweb_bonificada_programacao; }
            set
            {
                if (_idweb_bonificada_programacao != value)
                {
                    _idweb_bonificada_programacao = value;
                    OnPropertyChanged("idweb_bonificada_programacao");
                }
            }
        }
        private string _idweb_bonificada_programacao;
    
        [DataMember]
        public string analise_programacao
        {
            get { return _analise_programacao; }
            set
            {
                if (_analise_programacao != value)
                {
                    _analise_programacao = value;
                    OnPropertyChanged("analise_programacao");
                }
            }
        }
        private string _analise_programacao;
    
        [DataMember]
        public string status_programacao
        {
            get { return _status_programacao; }
            set
            {
                if (_status_programacao != value)
                {
                    _status_programacao = value;
                    OnPropertyChanged("status_programacao");
                }
            }
        }
        private string _status_programacao;
    
        [DataMember]
        public string motivo_bonificacao
        {
            get { return _motivo_bonificacao; }
            set
            {
                if (_motivo_bonificacao != value)
                {
                    _motivo_bonificacao = value;
                    OnPropertyChanged("motivo_bonificacao");
                }
            }
        }
        private string _motivo_bonificacao;
    
        [DataMember]
        public string causa
        {
            get { return _causa; }
            set
            {
                if (_causa != value)
                {
                    _causa = value;
                    OnPropertyChanged("causa");
                }
            }
        }
        private string _causa;
    
        [DataMember]
        public string porque_ocorre
        {
            get { return _porque_ocorre; }
            set
            {
                if (_porque_ocorre != value)
                {
                    _porque_ocorre = value;
                    OnPropertyChanged("porque_ocorre");
                }
            }
        }
        private string _porque_ocorre;
    
        [DataMember]
        public string problema_cliente
        {
            get { return _problema_cliente; }
            set
            {
                if (_problema_cliente != value)
                {
                    _problema_cliente = value;
                    OnPropertyChanged("problema_cliente");
                }
            }
        }
        private string _problema_cliente;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion

    }
}

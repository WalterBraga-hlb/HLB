//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHylinedoBrasilMobile.Models
{
    [DataContract(IsReference = true)]
    public partial class LOG_Item_Pedido_Venda: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _iD = value;
                    OnPropertyChanged("ID");
                }
            }
        }
        private int _iD;
    
        [DataMember]
        public int IDPedidoVenda
        {
            get { return _iDPedidoVenda; }
            set
            {
                if (_iDPedidoVenda != value)
                {
                    _iDPedidoVenda = value;
                    OnPropertyChanged("IDPedidoVenda");
                }
            }
        }
        private int _iDPedidoVenda;
    
        [DataMember]
        public string ProdCodEstr
        {
            get { return _prodCodEstr; }
            set
            {
                if (_prodCodEstr != value)
                {
                    _prodCodEstr = value;
                    OnPropertyChanged("ProdCodEstr");
                }
            }
        }
        private string _prodCodEstr;
    
        [DataMember]
        public System.DateTime DataEntregaInicial
        {
            get { return _dataEntregaInicial; }
            set
            {
                if (_dataEntregaInicial != value)
                {
                    _dataEntregaInicial = value;
                    OnPropertyChanged("DataEntregaInicial");
                }
            }
        }
        private System.DateTime _dataEntregaInicial;
    
        [DataMember]
        public System.DateTime DataEntregaFinal
        {
            get { return _dataEntregaFinal; }
            set
            {
                if (_dataEntregaFinal != value)
                {
                    _dataEntregaFinal = value;
                    OnPropertyChanged("DataEntregaFinal");
                }
            }
        }
        private System.DateTime _dataEntregaFinal;
    
        [DataMember]
        public int QtdeLiquida
        {
            get { return _qtdeLiquida; }
            set
            {
                if (_qtdeLiquida != value)
                {
                    _qtdeLiquida = value;
                    OnPropertyChanged("QtdeLiquida");
                }
            }
        }
        private int _qtdeLiquida;
    
        [DataMember]
        public Nullable<decimal> PercBonificacao
        {
            get { return _percBonificacao; }
            set
            {
                if (_percBonificacao != value)
                {
                    _percBonificacao = value;
                    OnPropertyChanged("PercBonificacao");
                }
            }
        }
        private Nullable<decimal> _percBonificacao;
    
        [DataMember]
        public Nullable<int> QtdeBonificada
        {
            get { return _qtdeBonificada; }
            set
            {
                if (_qtdeBonificada != value)
                {
                    _qtdeBonificada = value;
                    OnPropertyChanged("QtdeBonificada");
                }
            }
        }
        private Nullable<int> _qtdeBonificada;
    
        [DataMember]
        public Nullable<int> QtdeReposicao
        {
            get { return _qtdeReposicao; }
            set
            {
                if (_qtdeReposicao != value)
                {
                    _qtdeReposicao = value;
                    OnPropertyChanged("QtdeReposicao");
                }
            }
        }
        private Nullable<int> _qtdeReposicao;
    
        [DataMember]
        public Nullable<decimal> PrecoUnitario
        {
            get { return _precoUnitario; }
            set
            {
                if (_precoUnitario != value)
                {
                    _precoUnitario = value;
                    OnPropertyChanged("PrecoUnitario");
                }
            }
        }
        private Nullable<decimal> _precoUnitario;
    
        [DataMember]
        public int Sequencia
        {
            get { return _sequencia; }
            set
            {
                if (_sequencia != value)
                {
                    _sequencia = value;
                    OnPropertyChanged("Sequencia");
                }
            }
        }
        private int _sequencia;
    
        [DataMember]
        public System.DateTime DataHora
        {
            get { return _dataHora; }
            set
            {
                if (_dataHora != value)
                {
                    _dataHora = value;
                    OnPropertyChanged("DataHora");
                }
            }
        }
        private System.DateTime _dataHora;
    
        [DataMember]
        public string Operacao
        {
            get { return _operacao; }
            set
            {
                if (_operacao != value)
                {
                    _operacao = value;
                    OnPropertyChanged("Operacao");
                }
            }
        }
        private string _operacao;
    
        [DataMember]
        public Nullable<int> IDItPedVenda
        {
            get { return _iDItPedVenda; }
            set
            {
                if (_iDItPedVenda != value)
                {
                    _iDItPedVenda = value;
                    OnPropertyChanged("IDItPedVenda");
                }
            }
        }
        private Nullable<int> _iDItPedVenda;
    
        [DataMember]
        public string OrderNoCHIC
        {
            get { return _orderNoCHIC; }
            set
            {
                if (_orderNoCHIC != value)
                {
                    _orderNoCHIC = value;
                    OnPropertyChanged("OrderNoCHIC");
                }
            }
        }
        private string _orderNoCHIC;
    
        [DataMember]
        public Nullable<int> IDLogPedidoVenda
        {
            get { return _iDLogPedidoVenda; }
            set
            {
                if (_iDLogPedidoVenda != value)
                {
                    _iDLogPedidoVenda = value;
                    OnPropertyChanged("IDLogPedidoVenda");
                }
            }
        }
        private Nullable<int> _iDLogPedidoVenda;
    
        [DataMember]
        public string OrderNoCHICReposicao
        {
            get { return _orderNoCHICReposicao; }
            set
            {
                if (_orderNoCHICReposicao != value)
                {
                    _orderNoCHICReposicao = value;
                    OnPropertyChanged("OrderNoCHICReposicao");
                }
            }
        }
        private string _orderNoCHICReposicao;
    
        [DataMember]
        public string TipoAlteracao
        {
            get { return _tipoAlteracao; }
            set
            {
                if (_tipoAlteracao != value)
                {
                    _tipoAlteracao = value;
                    OnPropertyChanged("TipoAlteracao");
                }
            }
        }
        private string _tipoAlteracao;
    
        [DataMember]
        public string Vacina
        {
            get { return _vacina; }
            set
            {
                if (_vacina != value)
                {
                    _vacina = value;
                    OnPropertyChanged("Vacina");
                }
            }
        }
        private string _vacina;
    
        [DataMember]
        public Nullable<decimal> PrecoPinto
        {
            get { return _precoPinto; }
            set
            {
                if (_precoPinto != value)
                {
                    _precoPinto = value;
                    OnPropertyChanged("PrecoPinto");
                }
            }
        }
        private Nullable<decimal> _precoPinto;
    
        [DataMember]
        public string TipoReposicao
        {
            get { return _tipoReposicao; }
            set
            {
                if (_tipoReposicao != value)
                {
                    _tipoReposicao = value;
                    OnPropertyChanged("TipoReposicao");
                }
            }
        }
        private string _tipoReposicao;
    
        [DataMember]
        public Nullable<decimal> ValorTotal
        {
            get { return _valorTotal; }
            set
            {
                if (_valorTotal != value)
                {
                    _valorTotal = value;
                    OnPropertyChanged("ValorTotal");
                }
            }
        }
        private Nullable<decimal> _valorTotal;
    
        [DataMember]
        public int Sobra
        {
            get { return _sobra; }
            set
            {
                if (_sobra != value)
                {
                    _sobra = value;
                    OnPropertyChanged("Sobra");
                }
            }
        }
        private int _sobra;
    
        [DataMember]
        public string PedidoPS
        {
            get { return _pedidoPS; }
            set
            {
                if (_pedidoPS != value)
                {
                    _pedidoPS = value;
                    OnPropertyChanged("PedidoPS");
                }
            }
        }
        private string _pedidoPS;
    
        [DataMember]
        public Nullable<int> ItPedidoPS
        {
            get { return _itPedidoPS; }
            set
            {
                if (_itPedidoPS != value)
                {
                    _itPedidoPS = value;
                    OnPropertyChanged("ItPedidoPS");
                }
            }
        }
        private Nullable<int> _itPedidoPS;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion

    }
}

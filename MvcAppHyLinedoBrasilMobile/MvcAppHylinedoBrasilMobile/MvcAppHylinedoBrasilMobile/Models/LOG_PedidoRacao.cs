//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHylinedoBrasilMobile.Models
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(LOG_PedidoRacao_Item))]
    [KnownType(typeof(LOG_PedidoRacao_Item_Aditivo))]
    public partial class LOG_PedidoRacao: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _iD = value;
                    OnPropertyChanged("ID");
                }
            }
        }
        private int _iD;
    
        [DataMember]
        public System.DateTime DataOperacao
        {
            get { return _dataOperacao; }
            set
            {
                if (_dataOperacao != value)
                {
                    _dataOperacao = value;
                    OnPropertyChanged("DataOperacao");
                }
            }
        }
        private System.DateTime _dataOperacao;
    
        [DataMember]
        public string UsuarioOperacao
        {
            get { return _usuarioOperacao; }
            set
            {
                if (_usuarioOperacao != value)
                {
                    _usuarioOperacao = value;
                    OnPropertyChanged("UsuarioOperacao");
                }
            }
        }
        private string _usuarioOperacao;
    
        [DataMember]
        public string Operacao
        {
            get { return _operacao; }
            set
            {
                if (_operacao != value)
                {
                    _operacao = value;
                    OnPropertyChanged("Operacao");
                }
            }
        }
        private string _operacao;
    
        [DataMember]
        public int IDPedidoRacao
        {
            get { return _iDPedidoRacao; }
            set
            {
                if (_iDPedidoRacao != value)
                {
                    _iDPedidoRacao = value;
                    OnPropertyChanged("IDPedidoRacao");
                }
            }
        }
        private int _iDPedidoRacao;
    
        [DataMember]
        public string Empresa
        {
            get { return _empresa; }
            set
            {
                if (_empresa != value)
                {
                    _empresa = value;
                    OnPropertyChanged("Empresa");
                }
            }
        }
        private string _empresa;
    
        [DataMember]
        public Nullable<System.DateTime> DataInicial
        {
            get { return _dataInicial; }
            set
            {
                if (_dataInicial != value)
                {
                    _dataInicial = value;
                    OnPropertyChanged("DataInicial");
                }
            }
        }
        private Nullable<System.DateTime> _dataInicial;
    
        [DataMember]
        public Nullable<System.DateTime> DataFinal
        {
            get { return _dataFinal; }
            set
            {
                if (_dataFinal != value)
                {
                    _dataFinal = value;
                    OnPropertyChanged("DataFinal");
                }
            }
        }
        private Nullable<System.DateTime> _dataFinal;
    
        [DataMember]
        public string StatusPedido
        {
            get { return _statusPedido; }
            set
            {
                if (_statusPedido != value)
                {
                    _statusPedido = value;
                    OnPropertyChanged("StatusPedido");
                }
            }
        }
        private string _statusPedido;
    
        [DataMember]
        public string RotaEntregaCod
        {
            get { return _rotaEntregaCod; }
            set
            {
                if (_rotaEntregaCod != value)
                {
                    _rotaEntregaCod = value;
                    OnPropertyChanged("RotaEntregaCod");
                }
            }
        }
        private string _rotaEntregaCod;
    
        [DataMember]
        public string Observacao
        {
            get { return _observacao; }
            set
            {
                if (_observacao != value)
                {
                    _observacao = value;
                    OnPropertyChanged("Observacao");
                }
            }
        }
        private string _observacao;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<LOG_PedidoRacao_Item> LOG_PedidoRacao_Item
        {
            get
            {
                if (_lOG_PedidoRacao_Item == null)
                {
                    _lOG_PedidoRacao_Item = new TrackableCollection<LOG_PedidoRacao_Item>();
                    _lOG_PedidoRacao_Item.CollectionChanged += FixupLOG_PedidoRacao_Item;
                }
                return _lOG_PedidoRacao_Item;
            }
            set
            {
                if (!ReferenceEquals(_lOG_PedidoRacao_Item, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_lOG_PedidoRacao_Item != null)
                    {
                        _lOG_PedidoRacao_Item.CollectionChanged -= FixupLOG_PedidoRacao_Item;
                    }
                    _lOG_PedidoRacao_Item = value;
                    if (_lOG_PedidoRacao_Item != null)
                    {
                        _lOG_PedidoRacao_Item.CollectionChanged += FixupLOG_PedidoRacao_Item;
                    }
                    OnNavigationPropertyChanged("LOG_PedidoRacao_Item");
                }
            }
        }
        private TrackableCollection<LOG_PedidoRacao_Item> _lOG_PedidoRacao_Item;
    
        [DataMember]
        public TrackableCollection<LOG_PedidoRacao_Item_Aditivo> LOG_PedidoRacao_Item_Aditivo
        {
            get
            {
                if (_lOG_PedidoRacao_Item_Aditivo == null)
                {
                    _lOG_PedidoRacao_Item_Aditivo = new TrackableCollection<LOG_PedidoRacao_Item_Aditivo>();
                    _lOG_PedidoRacao_Item_Aditivo.CollectionChanged += FixupLOG_PedidoRacao_Item_Aditivo;
                }
                return _lOG_PedidoRacao_Item_Aditivo;
            }
            set
            {
                if (!ReferenceEquals(_lOG_PedidoRacao_Item_Aditivo, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_lOG_PedidoRacao_Item_Aditivo != null)
                    {
                        _lOG_PedidoRacao_Item_Aditivo.CollectionChanged -= FixupLOG_PedidoRacao_Item_Aditivo;
                    }
                    _lOG_PedidoRacao_Item_Aditivo = value;
                    if (_lOG_PedidoRacao_Item_Aditivo != null)
                    {
                        _lOG_PedidoRacao_Item_Aditivo.CollectionChanged += FixupLOG_PedidoRacao_Item_Aditivo;
                    }
                    OnNavigationPropertyChanged("LOG_PedidoRacao_Item_Aditivo");
                }
            }
        }
        private TrackableCollection<LOG_PedidoRacao_Item_Aditivo> _lOG_PedidoRacao_Item_Aditivo;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            LOG_PedidoRacao_Item.Clear();
            LOG_PedidoRacao_Item_Aditivo.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupLOG_PedidoRacao_Item(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (LOG_PedidoRacao_Item item in e.NewItems)
                {
                    item.LOG_PedidoRacao = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("LOG_PedidoRacao_Item", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LOG_PedidoRacao_Item item in e.OldItems)
                {
                    if (ReferenceEquals(item.LOG_PedidoRacao, this))
                    {
                        item.LOG_PedidoRacao = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("LOG_PedidoRacao_Item", item);
                    }
                }
            }
        }
    
        private void FixupLOG_PedidoRacao_Item_Aditivo(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (LOG_PedidoRacao_Item_Aditivo item in e.NewItems)
                {
                    item.LOG_PedidoRacao = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("LOG_PedidoRacao_Item_Aditivo", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LOG_PedidoRacao_Item_Aditivo item in e.OldItems)
                {
                    if (ReferenceEquals(item.LOG_PedidoRacao, this))
                    {
                        item.LOG_PedidoRacao = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("LOG_PedidoRacao_Item_Aditivo", item);
                    }
                }
            }
        }

        #endregion

    }
}

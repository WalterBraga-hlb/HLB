//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHylinedoBrasilMobile.Models
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Config_Formula_Racao_Unidade))]
    [KnownType(typeof(Config_Formula_Racao_Linhagem))]
    [KnownType(typeof(Config_Formula_Racao_Adicionais))]
    [KnownType(typeof(PedidoRacao_Item))]
    [KnownType(typeof(Config_Formula_Racao_Galpao))]
    public partial class Config_Formula_Racao: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _iD = value;
                    OnPropertyChanged("ID");
                }
            }
        }
        private int _iD;
    
        [DataMember]
        public string Descricao
        {
            get { return _descricao; }
            set
            {
                if (_descricao != value)
                {
                    _descricao = value;
                    OnPropertyChanged("Descricao");
                }
            }
        }
        private string _descricao;
    
        [DataMember]
        public string ProdCodEstr
        {
            get { return _prodCodEstr; }
            set
            {
                if (_prodCodEstr != value)
                {
                    _prodCodEstr = value;
                    OnPropertyChanged("ProdCodEstr");
                }
            }
        }
        private string _prodCodEstr;
    
        [DataMember]
        public int Ativa
        {
            get { return _ativa; }
            set
            {
                if (_ativa != value)
                {
                    _ativa = value;
                    OnPropertyChanged("Ativa");
                }
            }
        }
        private int _ativa;
    
        [DataMember]
        public Nullable<int> NumFormula
        {
            get { return _numFormula; }
            set
            {
                if (_numFormula != value)
                {
                    _numFormula = value;
                    OnPropertyChanged("NumFormula");
                }
            }
        }
        private Nullable<int> _numFormula;
    
        [DataMember]
        public string Modelo
        {
            get { return _modelo; }
            set
            {
                if (_modelo != value)
                {
                    _modelo = value;
                    OnPropertyChanged("Modelo");
                }
            }
        }
        private string _modelo;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<Config_Formula_Racao_Unidade> Config_Formula_Racao_Unidade
        {
            get
            {
                if (_config_Formula_Racao_Unidade == null)
                {
                    _config_Formula_Racao_Unidade = new TrackableCollection<Config_Formula_Racao_Unidade>();
                    _config_Formula_Racao_Unidade.CollectionChanged += FixupConfig_Formula_Racao_Unidade;
                }
                return _config_Formula_Racao_Unidade;
            }
            set
            {
                if (!ReferenceEquals(_config_Formula_Racao_Unidade, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_config_Formula_Racao_Unidade != null)
                    {
                        _config_Formula_Racao_Unidade.CollectionChanged -= FixupConfig_Formula_Racao_Unidade;
                    }
                    _config_Formula_Racao_Unidade = value;
                    if (_config_Formula_Racao_Unidade != null)
                    {
                        _config_Formula_Racao_Unidade.CollectionChanged += FixupConfig_Formula_Racao_Unidade;
                    }
                    OnNavigationPropertyChanged("Config_Formula_Racao_Unidade");
                }
            }
        }
        private TrackableCollection<Config_Formula_Racao_Unidade> _config_Formula_Racao_Unidade;
    
        [DataMember]
        public TrackableCollection<Config_Formula_Racao_Linhagem> Config_Formula_Racao_Linhagem
        {
            get
            {
                if (_config_Formula_Racao_Linhagem == null)
                {
                    _config_Formula_Racao_Linhagem = new TrackableCollection<Config_Formula_Racao_Linhagem>();
                    _config_Formula_Racao_Linhagem.CollectionChanged += FixupConfig_Formula_Racao_Linhagem;
                }
                return _config_Formula_Racao_Linhagem;
            }
            set
            {
                if (!ReferenceEquals(_config_Formula_Racao_Linhagem, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_config_Formula_Racao_Linhagem != null)
                    {
                        _config_Formula_Racao_Linhagem.CollectionChanged -= FixupConfig_Formula_Racao_Linhagem;
                    }
                    _config_Formula_Racao_Linhagem = value;
                    if (_config_Formula_Racao_Linhagem != null)
                    {
                        _config_Formula_Racao_Linhagem.CollectionChanged += FixupConfig_Formula_Racao_Linhagem;
                    }
                    OnNavigationPropertyChanged("Config_Formula_Racao_Linhagem");
                }
            }
        }
        private TrackableCollection<Config_Formula_Racao_Linhagem> _config_Formula_Racao_Linhagem;
    
        [DataMember]
        public TrackableCollection<Config_Formula_Racao_Adicionais> Config_Formula_Racao_Adicionais
        {
            get
            {
                if (_config_Formula_Racao_Adicionais == null)
                {
                    _config_Formula_Racao_Adicionais = new TrackableCollection<Config_Formula_Racao_Adicionais>();
                    _config_Formula_Racao_Adicionais.CollectionChanged += FixupConfig_Formula_Racao_Adicionais;
                }
                return _config_Formula_Racao_Adicionais;
            }
            set
            {
                if (!ReferenceEquals(_config_Formula_Racao_Adicionais, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_config_Formula_Racao_Adicionais != null)
                    {
                        _config_Formula_Racao_Adicionais.CollectionChanged -= FixupConfig_Formula_Racao_Adicionais;
                    }
                    _config_Formula_Racao_Adicionais = value;
                    if (_config_Formula_Racao_Adicionais != null)
                    {
                        _config_Formula_Racao_Adicionais.CollectionChanged += FixupConfig_Formula_Racao_Adicionais;
                    }
                    OnNavigationPropertyChanged("Config_Formula_Racao_Adicionais");
                }
            }
        }
        private TrackableCollection<Config_Formula_Racao_Adicionais> _config_Formula_Racao_Adicionais;
    
        [DataMember]
        public TrackableCollection<PedidoRacao_Item> PedidoRacao_Item
        {
            get
            {
                if (_pedidoRacao_Item == null)
                {
                    _pedidoRacao_Item = new TrackableCollection<PedidoRacao_Item>();
                    _pedidoRacao_Item.CollectionChanged += FixupPedidoRacao_Item;
                }
                return _pedidoRacao_Item;
            }
            set
            {
                if (!ReferenceEquals(_pedidoRacao_Item, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pedidoRacao_Item != null)
                    {
                        _pedidoRacao_Item.CollectionChanged -= FixupPedidoRacao_Item;
                    }
                    _pedidoRacao_Item = value;
                    if (_pedidoRacao_Item != null)
                    {
                        _pedidoRacao_Item.CollectionChanged += FixupPedidoRacao_Item;
                    }
                    OnNavigationPropertyChanged("PedidoRacao_Item");
                }
            }
        }
        private TrackableCollection<PedidoRacao_Item> _pedidoRacao_Item;
    
        [DataMember]
        public TrackableCollection<Config_Formula_Racao_Galpao> Config_Formula_Racao_Galpao
        {
            get
            {
                if (_config_Formula_Racao_Galpao == null)
                {
                    _config_Formula_Racao_Galpao = new TrackableCollection<Config_Formula_Racao_Galpao>();
                    _config_Formula_Racao_Galpao.CollectionChanged += FixupConfig_Formula_Racao_Galpao;
                }
                return _config_Formula_Racao_Galpao;
            }
            set
            {
                if (!ReferenceEquals(_config_Formula_Racao_Galpao, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_config_Formula_Racao_Galpao != null)
                    {
                        _config_Formula_Racao_Galpao.CollectionChanged -= FixupConfig_Formula_Racao_Galpao;
                    }
                    _config_Formula_Racao_Galpao = value;
                    if (_config_Formula_Racao_Galpao != null)
                    {
                        _config_Formula_Racao_Galpao.CollectionChanged += FixupConfig_Formula_Racao_Galpao;
                    }
                    OnNavigationPropertyChanged("Config_Formula_Racao_Galpao");
                }
            }
        }
        private TrackableCollection<Config_Formula_Racao_Galpao> _config_Formula_Racao_Galpao;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Config_Formula_Racao_Unidade.Clear();
            Config_Formula_Racao_Linhagem.Clear();
            Config_Formula_Racao_Adicionais.Clear();
            PedidoRacao_Item.Clear();
            Config_Formula_Racao_Galpao.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupConfig_Formula_Racao_Unidade(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Config_Formula_Racao_Unidade item in e.NewItems)
                {
                    item.Config_Formula_Racao = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Config_Formula_Racao_Unidade", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Config_Formula_Racao_Unidade item in e.OldItems)
                {
                    if (ReferenceEquals(item.Config_Formula_Racao, this))
                    {
                        item.Config_Formula_Racao = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Config_Formula_Racao_Unidade", item);
                    }
                }
            }
        }
    
        private void FixupConfig_Formula_Racao_Linhagem(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Config_Formula_Racao_Linhagem item in e.NewItems)
                {
                    item.Config_Formula_Racao = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Config_Formula_Racao_Linhagem", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Config_Formula_Racao_Linhagem item in e.OldItems)
                {
                    if (ReferenceEquals(item.Config_Formula_Racao, this))
                    {
                        item.Config_Formula_Racao = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Config_Formula_Racao_Linhagem", item);
                    }
                }
            }
        }
    
        private void FixupConfig_Formula_Racao_Adicionais(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Config_Formula_Racao_Adicionais item in e.NewItems)
                {
                    item.Config_Formula_Racao = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Config_Formula_Racao_Adicionais", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Config_Formula_Racao_Adicionais item in e.OldItems)
                {
                    if (ReferenceEquals(item.Config_Formula_Racao, this))
                    {
                        item.Config_Formula_Racao = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Config_Formula_Racao_Adicionais", item);
                    }
                }
            }
        }
    
        private void FixupPedidoRacao_Item(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PedidoRacao_Item item in e.NewItems)
                {
                    item.Config_Formula_Racao = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PedidoRacao_Item", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PedidoRacao_Item item in e.OldItems)
                {
                    if (ReferenceEquals(item.Config_Formula_Racao, this))
                    {
                        item.Config_Formula_Racao = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PedidoRacao_Item", item);
                    }
                }
            }
        }
    
        private void FixupConfig_Formula_Racao_Galpao(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Config_Formula_Racao_Galpao item in e.NewItems)
                {
                    item.Config_Formula_Racao = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Config_Formula_Racao_Galpao", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Config_Formula_Racao_Galpao item in e.OldItems)
                {
                    if (ReferenceEquals(item.Config_Formula_Racao, this))
                    {
                        item.Config_Formula_Racao = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Config_Formula_Racao_Galpao", item);
                    }
                }
            }
        }

        #endregion

    }
}

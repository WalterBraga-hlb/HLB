//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHylinedoBrasilMobile.Models
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Investimento))]
    [KnownType(typeof(Investimento_Mes_Movimentacao_Saldo))]
    public partial class Investimento_Mes: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _iD = value;
                    OnPropertyChanged("ID");
                }
            }
        }
        private int _iD;
    
        [DataMember]
        public int IDInvestimento
        {
            get { return _iDInvestimento; }
            set
            {
                if (_iDInvestimento != value)
                {
                    ChangeTracker.RecordOriginalValue("IDInvestimento", _iDInvestimento);
                    if (!IsDeserializing)
                    {
                        if (Investimento != null && Investimento.ID != value)
                        {
                            Investimento = null;
                        }
                    }
                    _iDInvestimento = value;
                    OnPropertyChanged("IDInvestimento");
                }
            }
        }
        private int _iDInvestimento;
    
        [DataMember]
        public int AnoMes
        {
            get { return _anoMes; }
            set
            {
                if (_anoMes != value)
                {
                    _anoMes = value;
                    OnPropertyChanged("AnoMes");
                }
            }
        }
        private int _anoMes;
    
        [DataMember]
        public decimal ValorOrcado
        {
            get { return _valorOrcado; }
            set
            {
                if (_valorOrcado != value)
                {
                    _valorOrcado = value;
                    OnPropertyChanged("ValorOrcado");
                }
            }
        }
        private decimal _valorOrcado;
    
        [DataMember]
        public decimal ValorUtilizado
        {
            get { return _valorUtilizado; }
            set
            {
                if (_valorUtilizado != value)
                {
                    _valorUtilizado = value;
                    OnPropertyChanged("ValorUtilizado");
                }
            }
        }
        private decimal _valorUtilizado;
    
        [DataMember]
        public decimal ValorSolicitado
        {
            get { return _valorSolicitado; }
            set
            {
                if (_valorSolicitado != value)
                {
                    _valorSolicitado = value;
                    OnPropertyChanged("ValorSolicitado");
                }
            }
        }
        private decimal _valorSolicitado;
    
        [DataMember]
        public decimal Saldo
        {
            get { return _saldo; }
            set
            {
                if (_saldo != value)
                {
                    _saldo = value;
                    OnPropertyChanged("Saldo");
                }
            }
        }
        private decimal _saldo;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public Investimento Investimento
        {
            get { return _investimento; }
            set
            {
                if (!ReferenceEquals(_investimento, value))
                {
                    var previousValue = _investimento;
                    _investimento = value;
                    FixupInvestimento(previousValue);
                    OnNavigationPropertyChanged("Investimento");
                }
            }
        }
        private Investimento _investimento;
    
        [DataMember]
        public TrackableCollection<Investimento_Mes_Movimentacao_Saldo> Investimento_Mes_Movimentacao_Saldo
        {
            get
            {
                if (_investimento_Mes_Movimentacao_Saldo == null)
                {
                    _investimento_Mes_Movimentacao_Saldo = new TrackableCollection<Investimento_Mes_Movimentacao_Saldo>();
                    _investimento_Mes_Movimentacao_Saldo.CollectionChanged += FixupInvestimento_Mes_Movimentacao_Saldo;
                }
                return _investimento_Mes_Movimentacao_Saldo;
            }
            set
            {
                if (!ReferenceEquals(_investimento_Mes_Movimentacao_Saldo, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_investimento_Mes_Movimentacao_Saldo != null)
                    {
                        _investimento_Mes_Movimentacao_Saldo.CollectionChanged -= FixupInvestimento_Mes_Movimentacao_Saldo;
                    }
                    _investimento_Mes_Movimentacao_Saldo = value;
                    if (_investimento_Mes_Movimentacao_Saldo != null)
                    {
                        _investimento_Mes_Movimentacao_Saldo.CollectionChanged += FixupInvestimento_Mes_Movimentacao_Saldo;
                    }
                    OnNavigationPropertyChanged("Investimento_Mes_Movimentacao_Saldo");
                }
            }
        }
        private TrackableCollection<Investimento_Mes_Movimentacao_Saldo> _investimento_Mes_Movimentacao_Saldo;
    
        [DataMember]
        public TrackableCollection<Investimento_Mes_Movimentacao_Saldo> Investimento_Mes_Movimentacao_Saldo1
        {
            get
            {
                if (_investimento_Mes_Movimentacao_Saldo1 == null)
                {
                    _investimento_Mes_Movimentacao_Saldo1 = new TrackableCollection<Investimento_Mes_Movimentacao_Saldo>();
                    _investimento_Mes_Movimentacao_Saldo1.CollectionChanged += FixupInvestimento_Mes_Movimentacao_Saldo1;
                }
                return _investimento_Mes_Movimentacao_Saldo1;
            }
            set
            {
                if (!ReferenceEquals(_investimento_Mes_Movimentacao_Saldo1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_investimento_Mes_Movimentacao_Saldo1 != null)
                    {
                        _investimento_Mes_Movimentacao_Saldo1.CollectionChanged -= FixupInvestimento_Mes_Movimentacao_Saldo1;
                    }
                    _investimento_Mes_Movimentacao_Saldo1 = value;
                    if (_investimento_Mes_Movimentacao_Saldo1 != null)
                    {
                        _investimento_Mes_Movimentacao_Saldo1.CollectionChanged += FixupInvestimento_Mes_Movimentacao_Saldo1;
                    }
                    OnNavigationPropertyChanged("Investimento_Mes_Movimentacao_Saldo1");
                }
            }
        }
        private TrackableCollection<Investimento_Mes_Movimentacao_Saldo> _investimento_Mes_Movimentacao_Saldo1;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Investimento = null;
            Investimento_Mes_Movimentacao_Saldo.Clear();
            Investimento_Mes_Movimentacao_Saldo1.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupInvestimento(Investimento previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Investimento_Mes.Contains(this))
            {
                previousValue.Investimento_Mes.Remove(this);
            }
    
            if (Investimento != null)
            {
                if (!Investimento.Investimento_Mes.Contains(this))
                {
                    Investimento.Investimento_Mes.Add(this);
                }
    
                IDInvestimento = Investimento.ID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Investimento")
                    && (ChangeTracker.OriginalValues["Investimento"] == Investimento))
                {
                    ChangeTracker.OriginalValues.Remove("Investimento");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Investimento", previousValue);
                }
                if (Investimento != null && !Investimento.ChangeTracker.ChangeTrackingEnabled)
                {
                    Investimento.StartTracking();
                }
            }
        }
    
        private void FixupInvestimento_Mes_Movimentacao_Saldo(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Investimento_Mes_Movimentacao_Saldo item in e.NewItems)
                {
                    item.Investimento_Mes = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Investimento_Mes_Movimentacao_Saldo", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Investimento_Mes_Movimentacao_Saldo item in e.OldItems)
                {
                    if (ReferenceEquals(item.Investimento_Mes, this))
                    {
                        item.Investimento_Mes = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Investimento_Mes_Movimentacao_Saldo", item);
                    }
                }
            }
        }
    
        private void FixupInvestimento_Mes_Movimentacao_Saldo1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Investimento_Mes_Movimentacao_Saldo item in e.NewItems)
                {
                    item.Investimento_Mes1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Investimento_Mes_Movimentacao_Saldo1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Investimento_Mes_Movimentacao_Saldo item in e.OldItems)
                {
                    if (ReferenceEquals(item.Investimento_Mes1, this))
                    {
                        item.Investimento_Mes1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Investimento_Mes_Movimentacao_Saldo1", item);
                    }
                }
            }
        }

        #endregion

    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHylinedoBrasilMobile.Models.bdApolo
{
    [DataContract(IsReference = true)]
    public partial class CRIA_CAMPO: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public string TabSistCod
        {
            get { return _tabSistCod; }
            set
            {
                if (_tabSistCod != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'TabSistCod' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _tabSistCod = value;
                    OnPropertyChanged("TabSistCod");
                }
            }
        }
        private string _tabSistCod;
    
        [DataMember]
        public string CriaCampoNome
        {
            get { return _criaCampoNome; }
            set
            {
                if (_criaCampoNome != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'CriaCampoNome' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _criaCampoNome = value;
                    OnPropertyChanged("CriaCampoNome");
                }
            }
        }
        private string _criaCampoNome;
    
        [DataMember]
        public string CriaCampoTitulo
        {
            get { return _criaCampoTitulo; }
            set
            {
                if (_criaCampoTitulo != value)
                {
                    _criaCampoTitulo = value;
                    OnPropertyChanged("CriaCampoTitulo");
                }
            }
        }
        private string _criaCampoTitulo;
    
        [DataMember]
        public string CriaCampoTipo
        {
            get { return _criaCampoTipo; }
            set
            {
                if (_criaCampoTipo != value)
                {
                    _criaCampoTipo = value;
                    OnPropertyChanged("CriaCampoTipo");
                }
            }
        }
        private string _criaCampoTipo;
    
        [DataMember]
        public Nullable<short> CriaCampoTamanho
        {
            get { return _criaCampoTamanho; }
            set
            {
                if (_criaCampoTamanho != value)
                {
                    _criaCampoTamanho = value;
                    OnPropertyChanged("CriaCampoTamanho");
                }
            }
        }
        private Nullable<short> _criaCampoTamanho;
    
        [DataMember]
        public Nullable<short> CriaCampoModoCaracter
        {
            get { return _criaCampoModoCaracter; }
            set
            {
                if (_criaCampoModoCaracter != value)
                {
                    _criaCampoModoCaracter = value;
                    OnPropertyChanged("CriaCampoModoCaracter");
                }
            }
        }
        private Nullable<short> _criaCampoModoCaracter;
    
        [DataMember]
        public string CriaCampoMascara
        {
            get { return _criaCampoMascara; }
            set
            {
                if (_criaCampoMascara != value)
                {
                    _criaCampoMascara = value;
                    OnPropertyChanged("CriaCampoMascara");
                }
            }
        }
        private string _criaCampoMascara;
    
        [DataMember]
        public Nullable<short> CriaCampoQtdCasaDec
        {
            get { return _criaCampoQtdCasaDec; }
            set
            {
                if (_criaCampoQtdCasaDec != value)
                {
                    _criaCampoQtdCasaDec = value;
                    OnPropertyChanged("CriaCampoQtdCasaDec");
                }
            }
        }
        private Nullable<short> _criaCampoQtdCasaDec;
    
        [DataMember]
        public string CriaCampoResultado
        {
            get { return _criaCampoResultado; }
            set
            {
                if (_criaCampoResultado != value)
                {
                    _criaCampoResultado = value;
                    OnPropertyChanged("CriaCampoResultado");
                }
            }
        }
        private string _criaCampoResultado;
    
        [DataMember]
        public Nullable<short> CriaCampoComponente
        {
            get { return _criaCampoComponente; }
            set
            {
                if (_criaCampoComponente != value)
                {
                    _criaCampoComponente = value;
                    OnPropertyChanged("CriaCampoComponente");
                }
            }
        }
        private Nullable<short> _criaCampoComponente;
    
        [DataMember]
        public Nullable<int> CriaCampoTabOrder
        {
            get { return _criaCampoTabOrder; }
            set
            {
                if (_criaCampoTabOrder != value)
                {
                    _criaCampoTabOrder = value;
                    OnPropertyChanged("CriaCampoTabOrder");
                }
            }
        }
        private Nullable<int> _criaCampoTabOrder;
    
        [DataMember]
        public string CriaCampoItem
        {
            get { return _criaCampoItem; }
            set
            {
                if (_criaCampoItem != value)
                {
                    _criaCampoItem = value;
                    OnPropertyChanged("CriaCampoItem");
                }
            }
        }
        private string _criaCampoItem;
    
        [DataMember]
        public string CriaCampoPasta
        {
            get { return _criaCampoPasta; }
            set
            {
                if (_criaCampoPasta != value)
                {
                    _criaCampoPasta = value;
                    OnPropertyChanged("CriaCampoPasta");
                }
            }
        }
        private string _criaCampoPasta;
    
        [DataMember]
        public string CriaCampoDescr
        {
            get { return _criaCampoDescr; }
            set
            {
                if (_criaCampoDescr != value)
                {
                    _criaCampoDescr = value;
                    OnPropertyChanged("CriaCampoDescr");
                }
            }
        }
        private string _criaCampoDescr;
    
        [DataMember]
        public string CriaCampoPropriedades
        {
            get { return _criaCampoPropriedades; }
            set
            {
                if (_criaCampoPropriedades != value)
                {
                    _criaCampoPropriedades = value;
                    OnPropertyChanged("CriaCampoPropriedades");
                }
            }
        }
        private string _criaCampoPropriedades;
    
        [DataMember]
        public string CriaCampoNomeTabela
        {
            get { return _criaCampoNomeTabela; }
            set
            {
                if (_criaCampoNomeTabela != value)
                {
                    _criaCampoNomeTabela = value;
                    OnPropertyChanged("CriaCampoNomeTabela");
                }
            }
        }
        private string _criaCampoNomeTabela;
    
        [DataMember]
        public string CriaCampoValorDefault
        {
            get { return _criaCampoValorDefault; }
            set
            {
                if (_criaCampoValorDefault != value)
                {
                    _criaCampoValorDefault = value;
                    OnPropertyChanged("CriaCampoValorDefault");
                }
            }
        }
        private string _criaCampoValorDefault;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion

    }
}

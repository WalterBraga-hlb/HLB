//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHylinedoBrasilMobile.Models.bdApolo
{
    [DataContract(IsReference = true)]
    public partial class VW_Dados_RRC: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public string Linhagem_da_NF
        {
            get { return _linhagem_da_NF; }
            set
            {
                if (_linhagem_da_NF != value)
                {
                    _linhagem_da_NF = value;
                    OnPropertyChanged("Linhagem_da_NF");
                }
            }
        }
        private string _linhagem_da_NF;
    
        [DataMember]
        public Nullable<System.DateTime> Data_da_RRC
        {
            get { return _data_da_RRC; }
            set
            {
                if (_data_da_RRC != value)
                {
                    _data_da_RRC = value;
                    OnPropertyChanged("Data_da_RRC");
                }
            }
        }
        private Nullable<System.DateTime> _data_da_RRC;
    
        [DataMember]
        public string Cód_Cliente
        {
            get { return _cód_Cliente; }
            set
            {
                if (_cód_Cliente != value)
                {
                    _cód_Cliente = value;
                    OnPropertyChanged("Cód_Cliente");
                }
            }
        }
        private string _cód_Cliente;
    
        [DataMember]
        public string Nome_Cliente
        {
            get { return _nome_Cliente; }
            set
            {
                if (_nome_Cliente != value)
                {
                    _nome_Cliente = value;
                    OnPropertyChanged("Nome_Cliente");
                }
            }
        }
        private string _nome_Cliente;
    
        [DataMember]
        public string Município_UF
        {
            get { return _município_UF; }
            set
            {
                if (_município_UF != value)
                {
                    _município_UF = value;
                    OnPropertyChanged("Município_UF");
                }
            }
        }
        private string _município_UF;
    
        [DataMember]
        public string Usuário_que_abriu_RRC
        {
            get { return _usuário_que_abriu_RRC; }
            set
            {
                if (_usuário_que_abriu_RRC != value)
                {
                    _usuário_que_abriu_RRC = value;
                    OnPropertyChanged("Usuário_que_abriu_RRC");
                }
            }
        }
        private string _usuário_que_abriu_RRC;
    
        [DataMember]
        public Nullable<System.DateTime> Data_Inclusão
        {
            get { return _data_Inclusão; }
            set
            {
                if (_data_Inclusão != value)
                {
                    _data_Inclusão = value;
                    OnPropertyChanged("Data_Inclusão");
                }
            }
        }
        private Nullable<System.DateTime> _data_Inclusão;
    
        [DataMember]
        public string Empresa
        {
            get { return _empresa; }
            set
            {
                if (_empresa != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Empresa' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _empresa = value;
                    OnPropertyChanged("Empresa");
                }
            }
        }
        private string _empresa;
    
        [DataMember]
        public Nullable<System.DateTime> Data_do_Nascimento
        {
            get { return _data_do_Nascimento; }
            set
            {
                if (_data_do_Nascimento != value)
                {
                    _data_do_Nascimento = value;
                    OnPropertyChanged("Data_do_Nascimento");
                }
            }
        }
        private Nullable<System.DateTime> _data_do_Nascimento;
    
        [DataMember]
        public Nullable<System.DateTime> Data_Chegada_no_Cliente
        {
            get { return _data_Chegada_no_Cliente; }
            set
            {
                if (_data_Chegada_no_Cliente != value)
                {
                    _data_Chegada_no_Cliente = value;
                    OnPropertyChanged("Data_Chegada_no_Cliente");
                }
            }
        }
        private Nullable<System.DateTime> _data_Chegada_no_Cliente;
    
        [DataMember]
        public Nullable<decimal> Qtd_Pintos_Enviados
        {
            get { return _qtd_Pintos_Enviados; }
            set
            {
                if (_qtd_Pintos_Enviados != value)
                {
                    _qtd_Pintos_Enviados = value;
                    OnPropertyChanged("Qtd_Pintos_Enviados");
                }
            }
        }
        private Nullable<decimal> _qtd_Pintos_Enviados;
    
        [DataMember]
        public short Mortalidade_na_Entrega
        {
            get { return _mortalidade_na_Entrega; }
            set
            {
                if (_mortalidade_na_Entrega != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Mortalidade_na_Entrega' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _mortalidade_na_Entrega = value;
                    OnPropertyChanged("Mortalidade_na_Entrega");
                }
            }
        }
        private short _mortalidade_na_Entrega;
    
        [DataMember]
        public Nullable<int> Mort__1ª_Semana___Branca
        {
            get { return _mort__1ª_Semana___Branca; }
            set
            {
                if (_mort__1ª_Semana___Branca != value)
                {
                    _mort__1ª_Semana___Branca = value;
                    OnPropertyChanged("Mort__1ª_Semana___Branca");
                }
            }
        }
        private Nullable<int> _mort__1ª_Semana___Branca;
    
        [DataMember]
        public int Mort__1ª_Dia___Branca
        {
            get { return _mort__1ª_Dia___Branca; }
            set
            {
                if (_mort__1ª_Dia___Branca != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Mort__1ª_Dia___Branca' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _mort__1ª_Dia___Branca = value;
                    OnPropertyChanged("Mort__1ª_Dia___Branca");
                }
            }
        }
        private int _mort__1ª_Dia___Branca;
    
        [DataMember]
        public int Mort__2ª_Dia___Branca
        {
            get { return _mort__2ª_Dia___Branca; }
            set
            {
                if (_mort__2ª_Dia___Branca != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Mort__2ª_Dia___Branca' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _mort__2ª_Dia___Branca = value;
                    OnPropertyChanged("Mort__2ª_Dia___Branca");
                }
            }
        }
        private int _mort__2ª_Dia___Branca;
    
        [DataMember]
        public int Mort__3ª_Dia___Branca
        {
            get { return _mort__3ª_Dia___Branca; }
            set
            {
                if (_mort__3ª_Dia___Branca != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Mort__3ª_Dia___Branca' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _mort__3ª_Dia___Branca = value;
                    OnPropertyChanged("Mort__3ª_Dia___Branca");
                }
            }
        }
        private int _mort__3ª_Dia___Branca;
    
        [DataMember]
        public int Mort__4ª_Dia___Branca
        {
            get { return _mort__4ª_Dia___Branca; }
            set
            {
                if (_mort__4ª_Dia___Branca != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Mort__4ª_Dia___Branca' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _mort__4ª_Dia___Branca = value;
                    OnPropertyChanged("Mort__4ª_Dia___Branca");
                }
            }
        }
        private int _mort__4ª_Dia___Branca;
    
        [DataMember]
        public int Mort__5ª_Dia___Branca
        {
            get { return _mort__5ª_Dia___Branca; }
            set
            {
                if (_mort__5ª_Dia___Branca != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Mort__5ª_Dia___Branca' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _mort__5ª_Dia___Branca = value;
                    OnPropertyChanged("Mort__5ª_Dia___Branca");
                }
            }
        }
        private int _mort__5ª_Dia___Branca;
    
        [DataMember]
        public int Mort__6ª_Dia___Branca
        {
            get { return _mort__6ª_Dia___Branca; }
            set
            {
                if (_mort__6ª_Dia___Branca != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Mort__6ª_Dia___Branca' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _mort__6ª_Dia___Branca = value;
                    OnPropertyChanged("Mort__6ª_Dia___Branca");
                }
            }
        }
        private int _mort__6ª_Dia___Branca;
    
        [DataMember]
        public int Mort__7ª_Dia___Branca
        {
            get { return _mort__7ª_Dia___Branca; }
            set
            {
                if (_mort__7ª_Dia___Branca != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Mort__7ª_Dia___Branca' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _mort__7ª_Dia___Branca = value;
                    OnPropertyChanged("Mort__7ª_Dia___Branca");
                }
            }
        }
        private int _mort__7ª_Dia___Branca;
    
        [DataMember]
        public Nullable<int> Mort__1ª_Semana___Vermelha
        {
            get { return _mort__1ª_Semana___Vermelha; }
            set
            {
                if (_mort__1ª_Semana___Vermelha != value)
                {
                    _mort__1ª_Semana___Vermelha = value;
                    OnPropertyChanged("Mort__1ª_Semana___Vermelha");
                }
            }
        }
        private Nullable<int> _mort__1ª_Semana___Vermelha;
    
        [DataMember]
        public int Mort__1ª_Dia___Vermelha
        {
            get { return _mort__1ª_Dia___Vermelha; }
            set
            {
                if (_mort__1ª_Dia___Vermelha != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Mort__1ª_Dia___Vermelha' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _mort__1ª_Dia___Vermelha = value;
                    OnPropertyChanged("Mort__1ª_Dia___Vermelha");
                }
            }
        }
        private int _mort__1ª_Dia___Vermelha;
    
        [DataMember]
        public int Mort__2ª_Dia___Vermelha
        {
            get { return _mort__2ª_Dia___Vermelha; }
            set
            {
                if (_mort__2ª_Dia___Vermelha != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Mort__2ª_Dia___Vermelha' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _mort__2ª_Dia___Vermelha = value;
                    OnPropertyChanged("Mort__2ª_Dia___Vermelha");
                }
            }
        }
        private int _mort__2ª_Dia___Vermelha;
    
        [DataMember]
        public int Mort__3ª_Dia___Vermelha
        {
            get { return _mort__3ª_Dia___Vermelha; }
            set
            {
                if (_mort__3ª_Dia___Vermelha != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Mort__3ª_Dia___Vermelha' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _mort__3ª_Dia___Vermelha = value;
                    OnPropertyChanged("Mort__3ª_Dia___Vermelha");
                }
            }
        }
        private int _mort__3ª_Dia___Vermelha;
    
        [DataMember]
        public int Mort__4ª_Dia___Vermelha
        {
            get { return _mort__4ª_Dia___Vermelha; }
            set
            {
                if (_mort__4ª_Dia___Vermelha != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Mort__4ª_Dia___Vermelha' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _mort__4ª_Dia___Vermelha = value;
                    OnPropertyChanged("Mort__4ª_Dia___Vermelha");
                }
            }
        }
        private int _mort__4ª_Dia___Vermelha;
    
        [DataMember]
        public int Mort__5ª_Dia___Vermelha
        {
            get { return _mort__5ª_Dia___Vermelha; }
            set
            {
                if (_mort__5ª_Dia___Vermelha != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Mort__5ª_Dia___Vermelha' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _mort__5ª_Dia___Vermelha = value;
                    OnPropertyChanged("Mort__5ª_Dia___Vermelha");
                }
            }
        }
        private int _mort__5ª_Dia___Vermelha;
    
        [DataMember]
        public int Mort__6ª_Dia___Vermelha
        {
            get { return _mort__6ª_Dia___Vermelha; }
            set
            {
                if (_mort__6ª_Dia___Vermelha != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Mort__6ª_Dia___Vermelha' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _mort__6ª_Dia___Vermelha = value;
                    OnPropertyChanged("Mort__6ª_Dia___Vermelha");
                }
            }
        }
        private int _mort__6ª_Dia___Vermelha;
    
        [DataMember]
        public int Mort__7ª_Dia___Vermelha
        {
            get { return _mort__7ª_Dia___Vermelha; }
            set
            {
                if (_mort__7ª_Dia___Vermelha != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Mort__7ª_Dia___Vermelha' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _mort__7ª_Dia___Vermelha = value;
                    OnPropertyChanged("Mort__7ª_Dia___Vermelha");
                }
            }
        }
        private int _mort__7ª_Dia___Vermelha;
    
        [DataMember]
        public string Linhagem_RRC
        {
            get { return _linhagem_RRC; }
            set
            {
                if (_linhagem_RRC != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Linhagem_RRC' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _linhagem_RRC = value;
                    OnPropertyChanged("Linhagem_RRC");
                }
            }
        }
        private string _linhagem_RRC;
    
        [DataMember]
        public Nullable<System.DateTime> Data_Resposta_SAC
        {
            get { return _data_Resposta_SAC; }
            set
            {
                if (_data_Resposta_SAC != value)
                {
                    _data_Resposta_SAC = value;
                    OnPropertyChanged("Data_Resposta_SAC");
                }
            }
        }
        private Nullable<System.DateTime> _data_Resposta_SAC;
    
        [DataMember]
        public string Resposta
        {
            get { return _resposta; }
            set
            {
                if (_resposta != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Resposta' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _resposta = value;
                    OnPropertyChanged("Resposta");
                }
            }
        }
        private string _resposta;
    
        [DataMember]
        public string Nº_NF
        {
            get { return _nº_NF; }
            set
            {
                if (_nº_NF != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Nº_NF' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _nº_NF = value;
                    OnPropertyChanged("Nº_NF");
                }
            }
        }
        private string _nº_NF;
    
        [DataMember]
        public string Reclamação
        {
            get { return _reclamação; }
            set
            {
                if (_reclamação != value)
                {
                    _reclamação = value;
                    OnPropertyChanged("Reclamação");
                }
            }
        }
        private string _reclamação;
    
        [DataMember]
        public string Descr__Fatos
        {
            get { return _descr__Fatos; }
            set
            {
                if (_descr__Fatos != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Descr__Fatos' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _descr__Fatos = value;
                    OnPropertyChanged("Descr__Fatos");
                }
            }
        }
        private string _descr__Fatos;
    
        [DataMember]
        public string Ação_Emergencial_Tomada
        {
            get { return _ação_Emergencial_Tomada; }
            set
            {
                if (_ação_Emergencial_Tomada != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Ação_Emergencial_Tomada' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _ação_Emergencial_Tomada = value;
                    OnPropertyChanged("Ação_Emergencial_Tomada");
                }
            }
        }
        private string _ação_Emergencial_Tomada;
    
        [DataMember]
        public Nullable<System.DateTime> Data_Bonif____Desconto
        {
            get { return _data_Bonif____Desconto; }
            set
            {
                if (_data_Bonif____Desconto != value)
                {
                    _data_Bonif____Desconto = value;
                    OnPropertyChanged("Data_Bonif____Desconto");
                }
            }
        }
        private Nullable<System.DateTime> _data_Bonif____Desconto;
    
        [DataMember]
        public Nullable<decimal> Qtde__Bonif____Valor_Desconto
        {
            get { return _qtde__Bonif____Valor_Desconto; }
            set
            {
                if (_qtde__Bonif____Valor_Desconto != value)
                {
                    _qtde__Bonif____Valor_Desconto = value;
                    OnPropertyChanged("Qtde__Bonif____Valor_Desconto");
                }
            }
        }
        private Nullable<decimal> _qtde__Bonif____Valor_Desconto;
    
        [DataMember]
        public Nullable<decimal> C__Bonificação
        {
            get { return _c__Bonificação; }
            set
            {
                if (_c__Bonificação != value)
                {
                    _c__Bonificação = value;
                    OnPropertyChanged("C__Bonificação");
                }
            }
        }
        private Nullable<decimal> _c__Bonificação;
    
        [DataMember]
        public string Linhagem_Ação_Tomada
        {
            get { return _linhagem_Ação_Tomada; }
            set
            {
                if (_linhagem_Ação_Tomada != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Linhagem_Ação_Tomada' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _linhagem_Ação_Tomada = value;
                    OnPropertyChanged("Linhagem_Ação_Tomada");
                }
            }
        }
        private string _linhagem_Ação_Tomada;
    
        [DataMember]
        public string Status_da_Ação_Emergencial_Tomada
        {
            get { return _status_da_Ação_Emergencial_Tomada; }
            set
            {
                if (_status_da_Ação_Emergencial_Tomada != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Status_da_Ação_Emergencial_Tomada' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _status_da_Ação_Emergencial_Tomada = value;
                    OnPropertyChanged("Status_da_Ação_Emergencial_Tomada");
                }
            }
        }
        private string _status_da_Ação_Emergencial_Tomada;
    
        [DataMember]
        public string Comentário_Depto_Comercial_Ação_Tomada
        {
            get { return _comentário_Depto_Comercial_Ação_Tomada; }
            set
            {
                if (_comentário_Depto_Comercial_Ação_Tomada != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Comentário_Depto_Comercial_Ação_Tomada' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _comentário_Depto_Comercial_Ação_Tomada = value;
                    OnPropertyChanged("Comentário_Depto_Comercial_Ação_Tomada");
                }
            }
        }
        private string _comentário_Depto_Comercial_Ação_Tomada;
    
        [DataMember]
        public string EmpCod
        {
            get { return _empCod; }
            set
            {
                if (_empCod != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'EmpCod' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _empCod = value;
                    OnPropertyChanged("EmpCod");
                }
            }
        }
        private string _empCod;
    
        [DataMember]
        public string CtrlDFModForm
        {
            get { return _ctrlDFModForm; }
            set
            {
                if (_ctrlDFModForm != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'CtrlDFModForm' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _ctrlDFModForm = value;
                    OnPropertyChanged("CtrlDFModForm");
                }
            }
        }
        private string _ctrlDFModForm;
    
        [DataMember]
        public string CtrlDFSerie
        {
            get { return _ctrlDFSerie; }
            set
            {
                if (_ctrlDFSerie != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'CtrlDFSerie' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _ctrlDFSerie = value;
                    OnPropertyChanged("CtrlDFSerie");
                }
            }
        }
        private string _ctrlDFSerie;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion

    }
}

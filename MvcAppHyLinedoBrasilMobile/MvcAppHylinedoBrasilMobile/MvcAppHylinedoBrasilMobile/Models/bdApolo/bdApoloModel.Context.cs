//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Common;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects.DataClasses;
using System.Data.Objects;
using System.Data;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace MvcAppHylinedoBrasilMobile.Models.bdApolo
{
    public partial class bdApoloEntities : ObjectContext
    {
        public const string ConnectionString = "name=bdApoloEntities";
        public const string ContainerName = "bdApoloEntities";
    
        #region Constructors
    
        public bdApoloEntities()
            : base(ConnectionString, ContainerName)
        {
            Initialize();
        }
    
        public bdApoloEntities(string connectionString)
            : base(connectionString, ContainerName)
        {
            Initialize();
        }
    
        public bdApoloEntities(EntityConnection connection)
            : base(connection, ContainerName)
        {
            Initialize();
        }
    
        private void Initialize()
        {
            // Creating proxies requires the use of the ProxyDataContractResolver and
            // may allow lazy loading which can expand the loaded graph during serialization.
            ContextOptions.ProxyCreationEnabled = false;
            ObjectMaterialized += new ObjectMaterializedEventHandler(HandleObjectMaterialized);
        }
    
        private void HandleObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            var entity = e.Entity as IObjectWithChangeTracker;
            if (entity != null)
            {
                bool changeTrackingEnabled = entity.ChangeTracker.ChangeTrackingEnabled;
                try
                {
                    entity.MarkAsUnchanged();
                }
                finally
                {
                    entity.ChangeTracker.ChangeTrackingEnabled = changeTrackingEnabled;
                }
                this.StoreReferenceKeyValues(entity);
            }
        }
    
        #endregion
    
        #region ObjectSet Properties
    
        public ObjectSet<EMP_FIL_USUARIO> EMP_FIL_USUARIO
        {
            get { return _eMP_FIL_USUARIO  ?? (_eMP_FIL_USUARIO = CreateObjectSet<EMP_FIL_USUARIO>("EMP_FIL_USUARIO")); }
        }
        private ObjectSet<EMP_FIL_USUARIO> _eMP_FIL_USUARIO;
    
        public ObjectSet<EMPRESA_FILIAL> EMPRESA_FILIAL
        {
            get { return _eMPRESA_FILIAL  ?? (_eMPRESA_FILIAL = CreateObjectSet<EMPRESA_FILIAL>("EMPRESA_FILIAL")); }
        }
        private ObjectSet<EMPRESA_FILIAL> _eMPRESA_FILIAL;
    
        public ObjectSet<CTRL_LOTE> CTRL_LOTE
        {
            get { return _cTRL_LOTE  ?? (_cTRL_LOTE = CreateObjectSet<CTRL_LOTE>("CTRL_LOTE")); }
        }
        private ObjectSet<CTRL_LOTE> _cTRL_LOTE;
    
        public ObjectSet<Fech_Estq> Fech_Estq
        {
            get { return _fech_Estq  ?? (_fech_Estq = CreateObjectSet<Fech_Estq>("Fech_Estq")); }
        }
        private ObjectSet<Fech_Estq> _fech_Estq;
    
        public ObjectSet<EMP_FILIAL_CERTIFICACAO> EMP_FILIAL_CERTIFICACAO
        {
            get { return _eMP_FILIAL_CERTIFICACAO  ?? (_eMP_FILIAL_CERTIFICACAO = CreateObjectSet<EMP_FILIAL_CERTIFICACAO>("EMP_FILIAL_CERTIFICACAO")); }
        }
        private ObjectSet<EMP_FILIAL_CERTIFICACAO> _eMP_FILIAL_CERTIFICACAO;
    
        public ObjectSet<GARANTIA> GARANTIA
        {
            get { return _gARANTIA  ?? (_gARANTIA = CreateObjectSet<GARANTIA>("GARANTIA")); }
        }
        private ObjectSet<GARANTIA> _gARANTIA;
    
        public ObjectSet<CTRL_INV> CTRL_INV
        {
            get { return _cTRL_INV  ?? (_cTRL_INV = CreateObjectSet<CTRL_INV>("CTRL_INV")); }
        }
        private ObjectSet<CTRL_INV> _cTRL_INV;
    
        public ObjectSet<CTRL_LOTE_INV_LOC_ARM1> CTRL_LOTE_INV_LOC_ARM1
        {
            get { return _cTRL_LOTE_INV_LOC_ARM1  ?? (_cTRL_LOTE_INV_LOC_ARM1 = CreateObjectSet<CTRL_LOTE_INV_LOC_ARM1>("CTRL_LOTE_INV_LOC_ARM1")); }
        }
        private ObjectSet<CTRL_LOTE_INV_LOC_ARM1> _cTRL_LOTE_INV_LOC_ARM1;
    
        public ObjectSet<ITEM_CTRL_INV_LOC_ARM1> ITEM_CTRL_INV_LOC_ARM1
        {
            get { return _iTEM_CTRL_INV_LOC_ARM1  ?? (_iTEM_CTRL_INV_LOC_ARM1 = CreateObjectSet<ITEM_CTRL_INV_LOC_ARM1>("ITEM_CTRL_INV_LOC_ARM1")); }
        }
        private ObjectSet<ITEM_CTRL_INV_LOC_ARM1> _iTEM_CTRL_INV_LOC_ARM1;
    
        public ObjectSet<ITEM_CTRL_INV1> ITEM_CTRL_INV1
        {
            get { return _iTEM_CTRL_INV1  ?? (_iTEM_CTRL_INV1 = CreateObjectSet<ITEM_CTRL_INV1>("ITEM_CTRL_INV1")); }
        }
        private ObjectSet<ITEM_CTRL_INV1> _iTEM_CTRL_INV1;
    
        public ObjectSet<Divergencia> Divergencia
        {
            get { return _divergencia  ?? (_divergencia = CreateObjectSet<Divergencia>("Divergencia")); }
        }
        private ObjectSet<Divergencia> _divergencia;
    
        public ObjectSet<PROD_GRUPO_SUBGRUPO> PROD_GRUPO_SUBGRUPO
        {
            get { return _pROD_GRUPO_SUBGRUPO  ?? (_pROD_GRUPO_SUBGRUPO = CreateObjectSet<PROD_GRUPO_SUBGRUPO>("PROD_GRUPO_SUBGRUPO")); }
        }
        private ObjectSet<PROD_GRUPO_SUBGRUPO> _pROD_GRUPO_SUBGRUPO;
    
        public ObjectSet<SUBGRUPO_PROD> SUBGRUPO_PROD
        {
            get { return _sUBGRUPO_PROD  ?? (_sUBGRUPO_PROD = CreateObjectSet<SUBGRUPO_PROD>("SUBGRUPO_PROD")); }
        }
        private ObjectSet<SUBGRUPO_PROD> _sUBGRUPO_PROD;
    
        public ObjectSet<VENDEDOR> VENDEDOR
        {
            get { return _vENDEDOR  ?? (_vENDEDOR = CreateObjectSet<VENDEDOR>("VENDEDOR")); }
        }
        private ObjectSet<VENDEDOR> _vENDEDOR;
    
        public ObjectSet<CIDADE> CIDADE
        {
            get { return _cIDADE  ?? (_cIDADE = CreateObjectSet<CIDADE>("CIDADE")); }
        }
        private ObjectSet<CIDADE> _cIDADE;
    
        public ObjectSet<UNID_FEDERACAO> UNID_FEDERACAO
        {
            get { return _uNID_FEDERACAO  ?? (_uNID_FEDERACAO = CreateObjectSet<UNID_FEDERACAO>("UNID_FEDERACAO")); }
        }
        private ObjectSet<UNID_FEDERACAO> _uNID_FEDERACAO;
    
        public ObjectSet<FIC_TEC_PROD> FIC_TEC_PROD
        {
            get { return _fIC_TEC_PROD  ?? (_fIC_TEC_PROD = CreateObjectSet<FIC_TEC_PROD>("FIC_TEC_PROD")); }
        }
        private ObjectSet<FIC_TEC_PROD> _fIC_TEC_PROD;
    
        public ObjectSet<CRIA_CAMPO> CRIA_CAMPO
        {
            get { return _cRIA_CAMPO  ?? (_cRIA_CAMPO = CreateObjectSet<CRIA_CAMPO>("CRIA_CAMPO")); }
        }
        private ObjectSet<CRIA_CAMPO> _cRIA_CAMPO;
    
        public ObjectSet<SUP_VENDEDOR> SUP_VENDEDOR
        {
            get { return _sUP_VENDEDOR  ?? (_sUP_VENDEDOR = CreateObjectSet<SUP_VENDEDOR>("SUP_VENDEDOR")); }
        }
        private ObjectSet<SUP_VENDEDOR> _sUP_VENDEDOR;
    
        public ObjectSet<PRODUTO1> PRODUTO1
        {
            get { return _pRODUTO1  ?? (_pRODUTO1 = CreateObjectSet<PRODUTO1>("PRODUTO1")); }
        }
        private ObjectSet<PRODUTO1> _pRODUTO1;
    
        public ObjectSet<ENTIDADE> ENTIDADE
        {
            get { return _eNTIDADE  ?? (_eNTIDADE = CreateObjectSet<ENTIDADE>("ENTIDADE")); }
        }
        private ObjectSet<ENTIDADE> _eNTIDADE;
    
        public ObjectSet<ROTA_ENTREGA> ROTA_ENTREGA
        {
            get { return _rOTA_ENTREGA  ?? (_rOTA_ENTREGA = CreateObjectSet<ROTA_ENTREGA>("ROTA_ENTREGA")); }
        }
        private ObjectSet<ROTA_ENTREGA> _rOTA_ENTREGA;
    
        public ObjectSet<ROTA_ENTREGA_CID> ROTA_ENTREGA_CID
        {
            get { return _rOTA_ENTREGA_CID  ?? (_rOTA_ENTREGA_CID = CreateObjectSet<ROTA_ENTREGA_CID>("ROTA_ENTREGA_CID")); }
        }
        private ObjectSet<ROTA_ENTREGA_CID> _rOTA_ENTREGA_CID;
    
        public ObjectSet<ROTA_ENTREGA_CID_ENT> ROTA_ENTREGA_CID_ENT
        {
            get { return _rOTA_ENTREGA_CID_ENT  ?? (_rOTA_ENTREGA_CID_ENT = CreateObjectSet<ROTA_ENTREGA_CID_ENT>("ROTA_ENTREGA_CID_ENT")); }
        }
        private ObjectSet<ROTA_ENTREGA_CID_ENT> _rOTA_ENTREGA_CID_ENT;
    
        public ObjectSet<EQUIPAMENTO> EQUIPAMENTO
        {
            get { return _eQUIPAMENTO  ?? (_eQUIPAMENTO = CreateObjectSet<EQUIPAMENTO>("EQUIPAMENTO")); }
        }
        private ObjectSet<EQUIPAMENTO> _eQUIPAMENTO;
    
        public ObjectSet<PED_VENDA1> PED_VENDA1
        {
            get { return _pED_VENDA1  ?? (_pED_VENDA1 = CreateObjectSet<PED_VENDA1>("PED_VENDA1")); }
        }
        private ObjectSet<PED_VENDA1> _pED_VENDA1;
    
        public ObjectSet<LOG_NFE_REL> LOG_NFE_REL
        {
            get { return _lOG_NFE_REL  ?? (_lOG_NFE_REL = CreateObjectSet<LOG_NFE_REL>("LOG_NFE_REL")); }
        }
        private ObjectSet<LOG_NFE_REL> _lOG_NFE_REL;
    
        public ObjectSet<VW_LOG_NFE_REL> VW_LOG_NFE_REL
        {
            get { return _vW_LOG_NFE_REL  ?? (_vW_LOG_NFE_REL = CreateObjectSet<VW_LOG_NFE_REL>("VW_LOG_NFE_REL")); }
        }
        private ObjectSet<VW_LOG_NFE_REL> _vW_LOG_NFE_REL;
    
        public ObjectSet<STAT_ENT> STAT_ENT
        {
            get { return _sTAT_ENT  ?? (_sTAT_ENT = CreateObjectSet<STAT_ENT>("STAT_ENT")); }
        }
        private ObjectSet<STAT_ENT> _sTAT_ENT;
    
        public ObjectSet<VW_Dados_RRC> VW_Dados_RRC
        {
            get { return _vW_Dados_RRC  ?? (_vW_Dados_RRC = CreateObjectSet<VW_Dados_RRC>("VW_Dados_RRC")); }
        }
        private ObjectSet<VW_Dados_RRC> _vW_Dados_RRC;
    
        public ObjectSet<ENT_CATEG> ENT_CATEG
        {
            get { return _eNT_CATEG  ?? (_eNT_CATEG = CreateObjectSet<ENT_CATEG>("ENT_CATEG")); }
        }
        private ObjectSet<ENT_CATEG> _eNT_CATEG;
    
        public ObjectSet<ENTIDADE1> ENTIDADE1
        {
            get { return _eNTIDADE1  ?? (_eNTIDADE1 = CreateObjectSet<ENTIDADE1>("ENTIDADE1")); }
        }
        private ObjectSet<ENTIDADE1> _eNTIDADE1;
    
        public ObjectSet<PRODUTO> PRODUTO
        {
            get { return _pRODUTO  ?? (_pRODUTO = CreateObjectSet<PRODUTO>("PRODUTO")); }
        }
        private ObjectSet<PRODUTO> _pRODUTO;
    
        public ObjectSet<VEND_ENT> VEND_ENT
        {
            get { return _vEND_ENT  ?? (_vEND_ENT = CreateObjectSet<VEND_ENT>("VEND_ENT")); }
        }
        private ObjectSet<VEND_ENT> _vEND_ENT;
    
        public ObjectSet<VU_Vendedores> VU_Vendedores
        {
            get { return _vU_Vendedores  ?? (_vU_Vendedores = CreateObjectSet<VU_Vendedores>("VU_Vendedores")); }
        }
        private ObjectSet<VU_Vendedores> _vU_Vendedores;

        #endregion

        #region Function Imports
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        /// <param name="empresa">Nenhuma Documentação de Metadados disponível.</param>
        /// <param name="ctrlinvnum">Nenhuma Documentação de Metadados disponível.</param>
        /// <param name="contagem">Nenhuma Documentação de Metadados disponível.</param>
        /// <param name="prodinicial">Nenhuma Documentação de Metadados disponível.</param>
        /// <param name="prodfinal">Nenhuma Documentação de Metadados disponível.</param>
        /// <param name="usucod">Nenhuma Documentação de Metadados disponível.</param>
        public virtual int AnalisaContagemCtrlInv(string empresa, string ctrlinvnum, Nullable<short> contagem, string prodinicial, string prodfinal, string usucod)
        {
    
            ObjectParameter empresaParameter;
    
            if (empresa != null)
            {
                empresaParameter = new ObjectParameter("empresa", empresa);
            }
            else
            {
                empresaParameter = new ObjectParameter("empresa", typeof(string));
            }
    
            ObjectParameter ctrlinvnumParameter;
    
            if (ctrlinvnum != null)
            {
                ctrlinvnumParameter = new ObjectParameter("ctrlinvnum", ctrlinvnum);
            }
            else
            {
                ctrlinvnumParameter = new ObjectParameter("ctrlinvnum", typeof(string));
            }
    
            ObjectParameter contagemParameter;
    
            if (contagem.HasValue)
            {
                contagemParameter = new ObjectParameter("contagem", contagem);
            }
            else
            {
                contagemParameter = new ObjectParameter("contagem", typeof(short));
            }
    
            ObjectParameter prodinicialParameter;
    
            if (prodinicial != null)
            {
                prodinicialParameter = new ObjectParameter("prodinicial", prodinicial);
            }
            else
            {
                prodinicialParameter = new ObjectParameter("prodinicial", typeof(string));
            }
    
            ObjectParameter prodfinalParameter;
    
            if (prodfinal != null)
            {
                prodfinalParameter = new ObjectParameter("prodfinal", prodfinal);
            }
            else
            {
                prodfinalParameter = new ObjectParameter("prodfinal", typeof(string));
            }
    
            ObjectParameter usucodParameter;
    
            if (usucod != null)
            {
                usucodParameter = new ObjectParameter("usucod", usucod);
            }
            else
            {
                usucodParameter = new ObjectParameter("usucod", typeof(string));
            }
            return base.ExecuteFunction("AnalisaContagemCtrlInv", empresaParameter, ctrlinvnumParameter, contagemParameter, prodinicialParameter, prodfinalParameter, usucodParameter);
        }
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        /// <param name="empcod">Nenhuma Documentação de Metadados disponível.</param>
        /// <param name="ctrlinvnum">Nenhuma Documentação de Metadados disponível.</param>
        /// <param name="usucod">Nenhuma Documentação de Metadados disponível.</param>
        /// <param name="operacao">Nenhuma Documentação de Metadados disponível.</param>
        /// <param name="ajustaitem">Nenhuma Documentação de Metadados disponível.</param>
        public virtual int CtrlInvGeraMovEstq(string empcod, string ctrlinvnum, string usucod, string operacao, string ajustaitem)
        {
    
            ObjectParameter empcodParameter;
    
            if (empcod != null)
            {
                empcodParameter = new ObjectParameter("empcod", empcod);
            }
            else
            {
                empcodParameter = new ObjectParameter("empcod", typeof(string));
            }
    
            ObjectParameter ctrlinvnumParameter;
    
            if (ctrlinvnum != null)
            {
                ctrlinvnumParameter = new ObjectParameter("ctrlinvnum", ctrlinvnum);
            }
            else
            {
                ctrlinvnumParameter = new ObjectParameter("ctrlinvnum", typeof(string));
            }
    
            ObjectParameter usucodParameter;
    
            if (usucod != null)
            {
                usucodParameter = new ObjectParameter("usucod", usucod);
            }
            else
            {
                usucodParameter = new ObjectParameter("usucod", typeof(string));
            }
    
            ObjectParameter operacaoParameter;
    
            if (operacao != null)
            {
                operacaoParameter = new ObjectParameter("operacao", operacao);
            }
            else
            {
                operacaoParameter = new ObjectParameter("operacao", typeof(string));
            }
    
            ObjectParameter ajustaitemParameter;
    
            if (ajustaitem != null)
            {
                ajustaitemParameter = new ObjectParameter("ajustaitem", ajustaitem);
            }
            else
            {
                ajustaitemParameter = new ObjectParameter("ajustaitem", typeof(string));
            }
            return base.ExecuteFunction("CtrlInvGeraMovEstq", empcodParameter, ctrlinvnumParameter, usucodParameter, operacaoParameter, ajustaitemParameter);
        }
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        /// <param name="empresa">Nenhuma Documentação de Metadados disponível.</param>
        /// <param name="ctrlinvnum">Nenhuma Documentação de Metadados disponível.</param>
        public virtual int GeraAjustePrimeiraContagem(string empresa, string ctrlinvnum)
        {
    
            ObjectParameter empresaParameter;
    
            if (empresa != null)
            {
                empresaParameter = new ObjectParameter("empresa", empresa);
            }
            else
            {
                empresaParameter = new ObjectParameter("empresa", typeof(string));
            }
    
            ObjectParameter ctrlinvnumParameter;
    
            if (ctrlinvnum != null)
            {
                ctrlinvnumParameter = new ObjectParameter("ctrlinvnum", ctrlinvnum);
            }
            else
            {
                ctrlinvnumParameter = new ObjectParameter("ctrlinvnum", typeof(string));
            }
            return base.ExecuteFunction("GeraAjustePrimeiraContagem", empresaParameter, ctrlinvnumParameter);
        }
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        /// <param name="empCod">Nenhuma Documentação de Metadados disponível.</param>
        /// <param name="prodInic">Nenhuma Documentação de Metadados disponível.</param>
        /// <param name="prodFim">Nenhuma Documentação de Metadados disponível.</param>
        public virtual int UserRelConfTab(string empCod, string prodInic, string prodFim)
        {
    
            ObjectParameter empCodParameter;
    
            if (empCod != null)
            {
                empCodParameter = new ObjectParameter("EmpCod", empCod);
            }
            else
            {
                empCodParameter = new ObjectParameter("EmpCod", typeof(string));
            }
    
            ObjectParameter prodInicParameter;
    
            if (prodInic != null)
            {
                prodInicParameter = new ObjectParameter("ProdInic", prodInic);
            }
            else
            {
                prodInicParameter = new ObjectParameter("ProdInic", typeof(string));
            }
    
            ObjectParameter prodFimParameter;
    
            if (prodFim != null)
            {
                prodFimParameter = new ObjectParameter("ProdFim", prodFim);
            }
            else
            {
                prodFimParameter = new ObjectParameter("ProdFim", typeof(string));
            }
            return base.ExecuteFunction("UserRelConfTab", empCodParameter, prodInicParameter, prodFimParameter);
        }
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        /// <param name="empcod">Nenhuma Documentação de Metadados disponível.</param>
        /// <param name="ctrlinvnum">Nenhuma Documentação de Metadados disponível.</param>
        public virtual int DeleteCtrlinv(string empcod, string ctrlinvnum)
        {
    
            ObjectParameter empcodParameter;
    
            if (empcod != null)
            {
                empcodParameter = new ObjectParameter("empcod", empcod);
            }
            else
            {
                empcodParameter = new ObjectParameter("empcod", typeof(string));
            }
    
            ObjectParameter ctrlinvnumParameter;
    
            if (ctrlinvnum != null)
            {
                ctrlinvnumParameter = new ObjectParameter("ctrlinvnum", ctrlinvnum);
            }
            else
            {
                ctrlinvnumParameter = new ObjectParameter("ctrlinvnum", typeof(string));
            }
            return base.ExecuteFunction("DeleteCtrlinv", empcodParameter, ctrlinvnumParameter);
        }
    
        /// <summary>
        /// Nenhuma Documentação de Metadados disponível.
        /// </summary>
        /// <param name="cODIGO">Nenhuma Documentação de Metadados disponível.</param>
        /// <param name="tAMANHO">Nenhuma Documentação de Metadados disponível.</param>
        /// <param name="nUMERO">Nenhuma Documentação de Metadados disponível.</param>
        public virtual int CONCAT_ZERO_ESQUERDA(string cODIGO, Nullable<int> tAMANHO, ObjectParameter nUMERO)
        {
    
            ObjectParameter cODIGOParameter;
    
            if (cODIGO != null)
            {
                cODIGOParameter = new ObjectParameter("CODIGO", cODIGO);
            }
            else
            {
                cODIGOParameter = new ObjectParameter("CODIGO", typeof(string));
            }
    
            ObjectParameter tAMANHOParameter;
    
            if (tAMANHO.HasValue)
            {
                tAMANHOParameter = new ObjectParameter("TAMANHO", tAMANHO);
            }
            else
            {
                tAMANHOParameter = new ObjectParameter("TAMANHO", typeof(int));
            }
            return base.ExecuteFunction("CONCAT_ZERO_ESQUERDA", cODIGOParameter, tAMANHOParameter, nUMERO);
        }

        #endregion

    }
}

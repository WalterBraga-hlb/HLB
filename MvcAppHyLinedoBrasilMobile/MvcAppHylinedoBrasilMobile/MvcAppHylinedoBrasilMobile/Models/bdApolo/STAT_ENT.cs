//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHylinedoBrasilMobile.Models.bdApolo
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(ENTIDADE))]
    public partial class STAT_ENT: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public string StatEntCod
        {
            get { return _statEntCod; }
            set
            {
                if (_statEntCod != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'StatEntCod' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _statEntCod = value;
                    OnPropertyChanged("StatEntCod");
                }
            }
        }
        private string _statEntCod;
    
        [DataMember]
        public string StatEntDescr
        {
            get { return _statEntDescr; }
            set
            {
                if (_statEntDescr != value)
                {
                    _statEntDescr = value;
                    OnPropertyChanged("StatEntDescr");
                }
            }
        }
        private string _statEntDescr;
    
        [DataMember]
        public string StatEntDescrSist
        {
            get { return _statEntDescrSist; }
            set
            {
                if (_statEntDescrSist != value)
                {
                    _statEntDescrSist = value;
                    OnPropertyChanged("StatEntDescrSist");
                }
            }
        }
        private string _statEntDescrSist;
    
        [DataMember]
        public string StatEntVisualizaEntidade
        {
            get { return _statEntVisualizaEntidade; }
            set
            {
                if (_statEntVisualizaEntidade != value)
                {
                    _statEntVisualizaEntidade = value;
                    OnPropertyChanged("StatEntVisualizaEntidade");
                }
            }
        }
        private string _statEntVisualizaEntidade;
    
        [DataMember]
        public string StatEntPesJurObrigCNPJ
        {
            get { return _statEntPesJurObrigCNPJ; }
            set
            {
                if (_statEntPesJurObrigCNPJ != value)
                {
                    _statEntPesJurObrigCNPJ = value;
                    OnPropertyChanged("StatEntPesJurObrigCNPJ");
                }
            }
        }
        private string _statEntPesJurObrigCNPJ;
    
        [DataMember]
        public string StatEntPesJurPermRepCNPJ
        {
            get { return _statEntPesJurPermRepCNPJ; }
            set
            {
                if (_statEntPesJurPermRepCNPJ != value)
                {
                    _statEntPesJurPermRepCNPJ = value;
                    OnPropertyChanged("StatEntPesJurPermRepCNPJ");
                }
            }
        }
        private string _statEntPesJurPermRepCNPJ;
    
        [DataMember]
        public string StatEntPesJurObrigIE
        {
            get { return _statEntPesJurObrigIE; }
            set
            {
                if (_statEntPesJurObrigIE != value)
                {
                    _statEntPesJurObrigIE = value;
                    OnPropertyChanged("StatEntPesJurObrigIE");
                }
            }
        }
        private string _statEntPesJurObrigIE;
    
        [DataMember]
        public string StatEntPesJurPermRepIE
        {
            get { return _statEntPesJurPermRepIE; }
            set
            {
                if (_statEntPesJurPermRepIE != value)
                {
                    _statEntPesJurPermRepIE = value;
                    OnPropertyChanged("StatEntPesJurPermRepIE");
                }
            }
        }
        private string _statEntPesJurPermRepIE;
    
        [DataMember]
        public string StatEntPesFisObrigCPF
        {
            get { return _statEntPesFisObrigCPF; }
            set
            {
                if (_statEntPesFisObrigCPF != value)
                {
                    _statEntPesFisObrigCPF = value;
                    OnPropertyChanged("StatEntPesFisObrigCPF");
                }
            }
        }
        private string _statEntPesFisObrigCPF;
    
        [DataMember]
        public string StatEntPesFisPermRepCPF
        {
            get { return _statEntPesFisPermRepCPF; }
            set
            {
                if (_statEntPesFisPermRepCPF != value)
                {
                    _statEntPesFisPermRepCPF = value;
                    OnPropertyChanged("StatEntPesFisPermRepCPF");
                }
            }
        }
        private string _statEntPesFisPermRepCPF;
    
        [DataMember]
        public string StatEntPedCompra
        {
            get { return _statEntPedCompra; }
            set
            {
                if (_statEntPedCompra != value)
                {
                    _statEntPedCompra = value;
                    OnPropertyChanged("StatEntPedCompra");
                }
            }
        }
        private string _statEntPedCompra;
    
        [DataMember]
        public string StatEntMovEstq
        {
            get { return _statEntMovEstq; }
            set
            {
                if (_statEntMovEstq != value)
                {
                    _statEntMovEstq = value;
                    OnPropertyChanged("StatEntMovEstq");
                }
            }
        }
        private string _statEntMovEstq;
    
        [DataMember]
        public string StatEntOrcamento
        {
            get { return _statEntOrcamento; }
            set
            {
                if (_statEntOrcamento != value)
                {
                    _statEntOrcamento = value;
                    OnPropertyChanged("StatEntOrcamento");
                }
            }
        }
        private string _statEntOrcamento;
    
        [DataMember]
        public string StatEntPedVenda
        {
            get { return _statEntPedVenda; }
            set
            {
                if (_statEntPedVenda != value)
                {
                    _statEntPedVenda = value;
                    OnPropertyChanged("StatEntPedVenda");
                }
            }
        }
        private string _statEntPedVenda;
    
        [DataMember]
        public string StatEntOrdServ
        {
            get { return _statEntOrdServ; }
            set
            {
                if (_statEntOrdServ != value)
                {
                    _statEntOrdServ = value;
                    OnPropertyChanged("StatEntOrdServ");
                }
            }
        }
        private string _statEntOrdServ;
    
        [DataMember]
        public string StatEntFinanceiro
        {
            get { return _statEntFinanceiro; }
            set
            {
                if (_statEntFinanceiro != value)
                {
                    _statEntFinanceiro = value;
                    OnPropertyChanged("StatEntFinanceiro");
                }
            }
        }
        private string _statEntFinanceiro;
    
        [DataMember]
        public string StatEntContrato
        {
            get { return _statEntContrato; }
            set
            {
                if (_statEntContrato != value)
                {
                    _statEntContrato = value;
                    OnPropertyChanged("StatEntContrato");
                }
            }
        }
        private string _statEntContrato;
    
        [DataMember]
        public string StatEntMarketing
        {
            get { return _statEntMarketing; }
            set
            {
                if (_statEntMarketing != value)
                {
                    _statEntMarketing = value;
                    OnPropertyChanged("StatEntMarketing");
                }
            }
        }
        private string _statEntMarketing;
    
        [DataMember]
        public string StatEntFaturamento
        {
            get { return _statEntFaturamento; }
            set
            {
                if (_statEntFaturamento != value)
                {
                    _statEntFaturamento = value;
                    OnPropertyChanged("StatEntFaturamento");
                }
            }
        }
        private string _statEntFaturamento;
    
        [DataMember]
        public string STATENTPEDTUR
        {
            get { return _sTATENTPEDTUR; }
            set
            {
                if (_sTATENTPEDTUR != value)
                {
                    _sTATENTPEDTUR = value;
                    OnPropertyChanged("STATENTPEDTUR");
                }
            }
        }
        private string _sTATENTPEDTUR;
    
        [DataMember]
        public string StatEntProduto
        {
            get { return _statEntProduto; }
            set
            {
                if (_statEntProduto != value)
                {
                    _statEntProduto = value;
                    OnPropertyChanged("StatEntProduto");
                }
            }
        }
        private string _statEntProduto;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<ENTIDADE> ENTIDADE
        {
            get
            {
                if (_eNTIDADE == null)
                {
                    _eNTIDADE = new TrackableCollection<ENTIDADE>();
                    _eNTIDADE.CollectionChanged += FixupENTIDADE;
                }
                return _eNTIDADE;
            }
            set
            {
                if (!ReferenceEquals(_eNTIDADE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_eNTIDADE != null)
                    {
                        _eNTIDADE.CollectionChanged -= FixupENTIDADE;
                    }
                    _eNTIDADE = value;
                    if (_eNTIDADE != null)
                    {
                        _eNTIDADE.CollectionChanged += FixupENTIDADE;
                    }
                    OnNavigationPropertyChanged("ENTIDADE");
                }
            }
        }
        private TrackableCollection<ENTIDADE> _eNTIDADE;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            ENTIDADE.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupENTIDADE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ENTIDADE item in e.NewItems)
                {
                    item.STAT_ENT = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ENTIDADE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ENTIDADE item in e.OldItems)
                {
                    if (ReferenceEquals(item.STAT_ENT, this))
                    {
                        item.STAT_ENT = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ENTIDADE", item);
                    }
                }
            }
        }

        #endregion

    }
}

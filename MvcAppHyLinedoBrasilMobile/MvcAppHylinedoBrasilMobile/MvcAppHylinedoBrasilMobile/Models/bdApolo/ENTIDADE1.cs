//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHylinedoBrasilMobile.Models.bdApolo
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(CTRL_LOTE))]
    [KnownType(typeof(CTRL_LOTE_INV_LOC_ARM1))]
    [KnownType(typeof(EMPRESA_FILIAL))]
    [KnownType(typeof(ENT_CATEG))]
    [KnownType(typeof(ENTIDADE))]
    [KnownType(typeof(EQUIPAMENTO))]
    [KnownType(typeof(PED_VENDA1))]
    [KnownType(typeof(ROTA_ENTREGA_CID_ENT))]
    [KnownType(typeof(ITEM_CTRL_INV_LOC_ARM1))]
    [KnownType(typeof(UNID_FEDERACAO))]
    public partial class ENTIDADE1: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public string EntCod
        {
            get { return _entCod; }
            set
            {
                if (_entCod != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'EntCod' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    if (!IsDeserializing)
                    {
                        if (ENTIDADE != null && ENTIDADE.EntCod != value)
                        {
                            ENTIDADE = null;
                        }
                    }
                    _entCod = value;
                    OnPropertyChanged("EntCod");
                }
            }
        }
        private string _entCod;
    
        [DataMember]
        public string EntCnh
        {
            get { return _entCnh; }
            set
            {
                if (_entCnh != value)
                {
                    _entCnh = value;
                    OnPropertyChanged("EntCnh");
                }
            }
        }
        private string _entCnh;
    
        [DataMember]
        public string EntAgReguladoAnp
        {
            get { return _entAgReguladoAnp; }
            set
            {
                if (_entAgReguladoAnp != value)
                {
                    _entAgReguladoAnp = value;
                    OnPropertyChanged("EntAgReguladoAnp");
                }
            }
        }
        private string _entAgReguladoAnp;
    
        [DataMember]
        public string EntCodInstalacaoAnp
        {
            get { return _entCodInstalacaoAnp; }
            set
            {
                if (_entCodInstalacaoAnp != value)
                {
                    _entCodInstalacaoAnp = value;
                    OnPropertyChanged("EntCodInstalacaoAnp");
                }
            }
        }
        private string _entCodInstalacaoAnp;
    
        [DataMember]
        public string CondPagCodPag
        {
            get { return _condPagCodPag; }
            set
            {
                if (_condPagCodPag != value)
                {
                    _condPagCodPag = value;
                    OnPropertyChanged("CondPagCodPag");
                }
            }
        }
        private string _condPagCodPag;
    
        [DataMember]
        public string EntAplicDesc
        {
            get { return _entAplicDesc; }
            set
            {
                if (_entAplicDesc != value)
                {
                    _entAplicDesc = value;
                    OnPropertyChanged("EntAplicDesc");
                }
            }
        }
        private string _entAplicDesc;
    
        [DataMember]
        public string EntAplicAcresc
        {
            get { return _entAplicAcresc; }
            set
            {
                if (_entAplicAcresc != value)
                {
                    _entAplicAcresc = value;
                    OnPropertyChanged("EntAplicAcresc");
                }
            }
        }
        private string _entAplicAcresc;
    
        [DataMember]
        public string EntPermAcresFinancReservTur
        {
            get { return _entPermAcresFinancReservTur; }
            set
            {
                if (_entPermAcresFinancReservTur != value)
                {
                    _entPermAcresFinancReservTur = value;
                    OnPropertyChanged("EntPermAcresFinancReservTur");
                }
            }
        }
        private string _entPermAcresFinancReservTur;
    
        [DataMember]
        public string EntPermDescEspecReservTur
        {
            get { return _entPermDescEspecReservTur; }
            set
            {
                if (_entPermDescEspecReservTur != value)
                {
                    _entPermDescEspecReservTur = value;
                    OnPropertyChanged("EntPermDescEspecReservTur");
                }
            }
        }
        private string _entPermDescEspecReservTur;
    
        [DataMember]
        public string EntCodGrupo
        {
            get { return _entCodGrupo; }
            set
            {
                if (_entCodGrupo != value)
                {
                    ChangeTracker.RecordOriginalValue("EntCodGrupo", _entCodGrupo);
                    if (!IsDeserializing)
                    {
                        if (ENTIDADE2 != null && ENTIDADE2.EntCod != value)
                        {
                            ENTIDADE2 = null;
                        }
                    }
                    _entCodGrupo = value;
                    OnPropertyChanged("EntCodGrupo");
                }
            }
        }
        private string _entCodGrupo;
    
        [DataMember]
        public string EntNomeProd
        {
            get { return _entNomeProd; }
            set
            {
                if (_entNomeProd != value)
                {
                    _entNomeProd = value;
                    OnPropertyChanged("EntNomeProd");
                }
            }
        }
        private string _entNomeProd;
    
        [DataMember]
        public string EntNomeProdAlt
        {
            get { return _entNomeProdAlt; }
            set
            {
                if (_entNomeProdAlt != value)
                {
                    _entNomeProdAlt = value;
                    OnPropertyChanged("EntNomeProdAlt");
                }
            }
        }
        private string _entNomeProdAlt;
    
        [DataMember]
        public string EntCRM
        {
            get { return _entCRM; }
            set
            {
                if (_entCRM != value)
                {
                    _entCRM = value;
                    OnPropertyChanged("EntCRM");
                }
            }
        }
        private string _entCRM;
    
        [DataMember]
        public Nullable<short> ENTQTDDIASATRASO
        {
            get { return _eNTQTDDIASATRASO; }
            set
            {
                if (_eNTQTDDIASATRASO != value)
                {
                    _eNTQTDDIASATRASO = value;
                    OnPropertyChanged("ENTQTDDIASATRASO");
                }
            }
        }
        private Nullable<short> _eNTQTDDIASATRASO;
    
        [DataMember]
        public string EntLocColetaOMesmo
        {
            get { return _entLocColetaOMesmo; }
            set
            {
                if (_entLocColetaOMesmo != value)
                {
                    _entLocColetaOMesmo = value;
                    OnPropertyChanged("EntLocColetaOMesmo");
                }
            }
        }
        private string _entLocColetaOMesmo;
    
        [DataMember]
        public string EntPosGuia
        {
            get { return _entPosGuia; }
            set
            {
                if (_entPosGuia != value)
                {
                    _entPosGuia = value;
                    OnPropertyChanged("EntPosGuia");
                }
            }
        }
        private string _entPosGuia;
    
        [DataMember]
        public decimal EntPercCobReent
        {
            get { return _entPercCobReent; }
            set
            {
                if (_entPercCobReent != value)
                {
                    _entPercCobReent = value;
                    OnPropertyChanged("EntPercCobReent");
                }
            }
        }
        private decimal _entPercCobReent;
    
        [DataMember]
        public string EntTpDtEscalaCresc
        {
            get { return _entTpDtEscalaCresc; }
            set
            {
                if (_entTpDtEscalaCresc != value)
                {
                    _entTpDtEscalaCresc = value;
                    OnPropertyChanged("EntTpDtEscalaCresc");
                }
            }
        }
        private string _entTpDtEscalaCresc;
    
        [DataMember]
        public string EntTpPerEscalaCresc
        {
            get { return _entTpPerEscalaCresc; }
            set
            {
                if (_entTpPerEscalaCresc != value)
                {
                    _entTpPerEscalaCresc = value;
                    OnPropertyChanged("EntTpPerEscalaCresc");
                }
            }
        }
        private string _entTpPerEscalaCresc;
    
        [DataMember]
        public string EntEscalaCrescDedICMSST
        {
            get { return _entEscalaCrescDedICMSST; }
            set
            {
                if (_entEscalaCrescDedICMSST != value)
                {
                    _entEscalaCrescDedICMSST = value;
                    OnPropertyChanged("EntEscalaCrescDedICMSST");
                }
            }
        }
        private string _entEscalaCrescDedICMSST;
    
        [DataMember]
        public string EntEscalaCrescDedIPI
        {
            get { return _entEscalaCrescDedIPI; }
            set
            {
                if (_entEscalaCrescDedIPI != value)
                {
                    _entEscalaCrescDedIPI = value;
                    OnPropertyChanged("EntEscalaCrescDedIPI");
                }
            }
        }
        private string _entEscalaCrescDedIPI;
    
        [DataMember]
        public string EntEscalaCrescFxCod
        {
            get { return _entEscalaCrescFxCod; }
            set
            {
                if (_entEscalaCrescFxCod != value)
                {
                    _entEscalaCrescFxCod = value;
                    OnPropertyChanged("EntEscalaCrescFxCod");
                }
            }
        }
        private string _entEscalaCrescFxCod;
    
        [DataMember]
        public string EntVisMontCargaSeparada
        {
            get { return _entVisMontCargaSeparada; }
            set
            {
                if (_entVisMontCargaSeparada != value)
                {
                    _entVisMontCargaSeparada = value;
                    OnPropertyChanged("EntVisMontCargaSeparada");
                }
            }
        }
        private string _entVisMontCargaSeparada;
    
        [DataMember]
        public string EntVerificValLimiteCond
        {
            get { return _entVerificValLimiteCond; }
            set
            {
                if (_entVerificValLimiteCond != value)
                {
                    _entVerificValLimiteCond = value;
                    OnPropertyChanged("EntVerificValLimiteCond");
                }
            }
        }
        private string _entVerificValLimiteCond;
    
        [DataMember]
        public string EntNumBeneficio
        {
            get { return _entNumBeneficio; }
            set
            {
                if (_entNumBeneficio != value)
                {
                    _entNumBeneficio = value;
                    OnPropertyChanged("EntNumBeneficio");
                }
            }
        }
        private string _entNumBeneficio;
    
        [DataMember]
        public string EntVisualDadBancOnLine
        {
            get { return _entVisualDadBancOnLine; }
            set
            {
                if (_entVisualDadBancOnLine != value)
                {
                    _entVisualDadBancOnLine = value;
                    OnPropertyChanged("EntVisualDadBancOnLine");
                }
            }
        }
        private string _entVisualDadBancOnLine;
    
        [DataMember]
        public string EntIntObjVenda
        {
            get { return _entIntObjVenda; }
            set
            {
                if (_entIntObjVenda != value)
                {
                    _entIntObjVenda = value;
                    OnPropertyChanged("EntIntObjVenda");
                }
            }
        }
        private string _entIntObjVenda;
    
        [DataMember]
        public string EntIntComis
        {
            get { return _entIntComis; }
            set
            {
                if (_entIntComis != value)
                {
                    _entIntComis = value;
                    OnPropertyChanged("EntIntComis");
                }
            }
        }
        private string _entIntComis;
    
        [DataMember]
        public Nullable<decimal> EntLongitudeDecimal
        {
            get { return _entLongitudeDecimal; }
            set
            {
                if (_entLongitudeDecimal != value)
                {
                    _entLongitudeDecimal = value;
                    OnPropertyChanged("EntLongitudeDecimal");
                }
            }
        }
        private Nullable<decimal> _entLongitudeDecimal;
    
        [DataMember]
        public string EntLongitudePadrao
        {
            get { return _entLongitudePadrao; }
            set
            {
                if (_entLongitudePadrao != value)
                {
                    _entLongitudePadrao = value;
                    OnPropertyChanged("EntLongitudePadrao");
                }
            }
        }
        private string _entLongitudePadrao;
    
        [DataMember]
        public Nullable<decimal> EntLatitudeDecimal
        {
            get { return _entLatitudeDecimal; }
            set
            {
                if (_entLatitudeDecimal != value)
                {
                    _entLatitudeDecimal = value;
                    OnPropertyChanged("EntLatitudeDecimal");
                }
            }
        }
        private Nullable<decimal> _entLatitudeDecimal;
    
        [DataMember]
        public string EntLatitudePadrao
        {
            get { return _entLatitudePadrao; }
            set
            {
                if (_entLatitudePadrao != value)
                {
                    _entLatitudePadrao = value;
                    OnPropertyChanged("EntLatitudePadrao");
                }
            }
        }
        private string _entLatitudePadrao;
    
        [DataMember]
        public string EntDaeGnrePagar
        {
            get { return _entDaeGnrePagar; }
            set
            {
                if (_entDaeGnrePagar != value)
                {
                    _entDaeGnrePagar = value;
                    OnPropertyChanged("EntDaeGnrePagar");
                }
            }
        }
        private string _entDaeGnrePagar;
    
        [DataMember]
        public string EntNumContaDeposito
        {
            get { return _entNumContaDeposito; }
            set
            {
                if (_entNumContaDeposito != value)
                {
                    _entNumContaDeposito = value;
                    OnPropertyChanged("EntNumContaDeposito");
                }
            }
        }
        private string _entNumContaDeposito;
    
        [DataMember]
        public string EntNumANTT
        {
            get { return _entNumANTT; }
            set
            {
                if (_entNumANTT != value)
                {
                    _entNumANTT = value;
                    OnPropertyChanged("EntNumANTT");
                }
            }
        }
        private string _entNumANTT;
    
        [DataMember]
        public string EntCertificada
        {
            get { return _entCertificada; }
            set
            {
                if (_entCertificada != value)
                {
                    _entCertificada = value;
                    OnPropertyChanged("EntCertificada");
                }
            }
        }
        private string _entCertificada;
    
        [DataMember]
        public string EntVisPocket
        {
            get { return _entVisPocket; }
            set
            {
                if (_entVisPocket != value)
                {
                    _entVisPocket = value;
                    OnPropertyChanged("EntVisPocket");
                }
            }
        }
        private string _entVisPocket;
    
        [DataMember]
        public string EntPathRelatOrc
        {
            get { return _entPathRelatOrc; }
            set
            {
                if (_entPathRelatOrc != value)
                {
                    _entPathRelatOrc = value;
                    OnPropertyChanged("EntPathRelatOrc");
                }
            }
        }
        private string _entPathRelatOrc;
    
        [DataMember]
        public string EntPathRelatPed
        {
            get { return _entPathRelatPed; }
            set
            {
                if (_entPathRelatPed != value)
                {
                    _entPathRelatPed = value;
                    OnPropertyChanged("EntPathRelatPed");
                }
            }
        }
        private string _entPathRelatPed;
    
        [DataMember]
        public Nullable<decimal> EntPercCargTribMed
        {
            get { return _entPercCargTribMed; }
            set
            {
                if (_entPercCargTribMed != value)
                {
                    _entPercCargTribMed = value;
                    OnPropertyChanged("EntPercCargTribMed");
                }
            }
        }
        private Nullable<decimal> _entPercCargTribMed;
    
        [DataMember]
        public string AgNumBolMP
        {
            get { return _agNumBolMP; }
            set
            {
                if (_agNumBolMP != value)
                {
                    _agNumBolMP = value;
                    OnPropertyChanged("AgNumBolMP");
                }
            }
        }
        private string _agNumBolMP;
    
        [DataMember]
        public string BcoNumBolMP
        {
            get { return _bcoNumBolMP; }
            set
            {
                if (_bcoNumBolMP != value)
                {
                    _bcoNumBolMP = value;
                    OnPropertyChanged("BcoNumBolMP");
                }
            }
        }
        private string _bcoNumBolMP;
    
        [DataMember]
        public string EntCodAgenInteg
        {
            get { return _entCodAgenInteg; }
            set
            {
                if (_entCodAgenInteg != value)
                {
                    _entCodAgenInteg = value;
                    OnPropertyChanged("EntCodAgenInteg");
                }
            }
        }
        private string _entCodAgenInteg;
    
        [DataMember]
        public string EntUtilWTVB2B
        {
            get { return _entUtilWTVB2B; }
            set
            {
                if (_entUtilWTVB2B != value)
                {
                    _entUtilWTVB2B = value;
                    OnPropertyChanged("EntUtilWTVB2B");
                }
            }
        }
        private string _entUtilWTVB2B;
    
        [DataMember]
        public string EntGeraComisWTV
        {
            get { return _entGeraComisWTV; }
            set
            {
                if (_entGeraComisWTV != value)
                {
                    _entGeraComisWTV = value;
                    OnPropertyChanged("EntGeraComisWTV");
                }
            }
        }
        private string _entGeraComisWTV;
    
        [DataMember]
        public string EntDeclaracaoEntrg
        {
            get { return _entDeclaracaoEntrg; }
            set
            {
                if (_entDeclaracaoEntrg != value)
                {
                    _entDeclaracaoEntrg = value;
                    OnPropertyChanged("EntDeclaracaoEntrg");
                }
            }
        }
        private string _entDeclaracaoEntrg;
    
        [DataMember]
        public string ExcPisCofinsCod
        {
            get { return _excPisCofinsCod; }
            set
            {
                if (_excPisCofinsCod != value)
                {
                    _excPisCofinsCod = value;
                    OnPropertyChanged("ExcPisCofinsCod");
                }
            }
        }
        private string _excPisCofinsCod;
    
        [DataMember]
        public string EntCalcRetINSRF59405
        {
            get { return _entCalcRetINSRF59405; }
            set
            {
                if (_entCalcRetINSRF59405 != value)
                {
                    _entCalcRetINSRF59405 = value;
                    OnPropertyChanged("EntCalcRetINSRF59405");
                }
            }
        }
        private string _entCalcRetINSRF59405;
    
        [DataMember]
        public string EntPadDedPISCOFINSParc
        {
            get { return _entPadDedPISCOFINSParc; }
            set
            {
                if (_entPadDedPISCOFINSParc != value)
                {
                    _entPadDedPISCOFINSParc = value;
                    OnPropertyChanged("EntPadDedPISCOFINSParc");
                }
            }
        }
        private string _entPadDedPISCOFINSParc;
    
        [DataMember]
        public string EntMotDesonICMS
        {
            get { return _entMotDesonICMS; }
            set
            {
                if (_entMotDesonICMS != value)
                {
                    _entMotDesonICMS = value;
                    OnPropertyChanged("EntMotDesonICMS");
                }
            }
        }
        private string _entMotDesonICMS;
    
        [DataMember]
        public string ENTCONVENIO
        {
            get { return _eNTCONVENIO; }
            set
            {
                if (_eNTCONVENIO != value)
                {
                    _eNTCONVENIO = value;
                    OnPropertyChanged("ENTCONVENIO");
                }
            }
        }
        private string _eNTCONVENIO;
    
        [DataMember]
        public string EntFormGerDup
        {
            get { return _entFormGerDup; }
            set
            {
                if (_entFormGerDup != value)
                {
                    _entFormGerDup = value;
                    OnPropertyChanged("EntFormGerDup");
                }
            }
        }
        private string _entFormGerDup;
    
        [DataMember]
        public string EntFormFat
        {
            get { return _entFormFat; }
            set
            {
                if (_entFormFat != value)
                {
                    _entFormFat = value;
                    OnPropertyChanged("EntFormFat");
                }
            }
        }
        private string _entFormFat;
    
        [DataMember]
        public Nullable<decimal> EntMargErroLongLatGPS
        {
            get { return _entMargErroLongLatGPS; }
            set
            {
                if (_entMargErroLongLatGPS != value)
                {
                    _entMargErroLongLatGPS = value;
                    OnPropertyChanged("EntMargErroLongLatGPS");
                }
            }
        }
        private Nullable<decimal> _entMargErroLongLatGPS;
    
        [DataMember]
        public string USEREntCodBanc
        {
            get { return _uSEREntCodBanc; }
            set
            {
                if (_uSEREntCodBanc != value)
                {
                    _uSEREntCodBanc = value;
                    OnPropertyChanged("USEREntCodBanc");
                }
            }
        }
        private string _uSEREntCodBanc;
    
        [DataMember]
        public Nullable<decimal> USERBranca
        {
            get { return _uSERBranca; }
            set
            {
                if (_uSERBranca != value)
                {
                    _uSERBranca = value;
                    OnPropertyChanged("USERBranca");
                }
            }
        }
        private Nullable<decimal> _uSERBranca;
    
        [DataMember]
        public Nullable<decimal> USERVermelha
        {
            get { return _uSERVermelha; }
            set
            {
                if (_uSERVermelha != value)
                {
                    _uSERVermelha = value;
                    OnPropertyChanged("USERVermelha");
                }
            }
        }
        private Nullable<decimal> _uSERVermelha;
    
        [DataMember]
        public string USERTipoConta
        {
            get { return _uSERTipoConta; }
            set
            {
                if (_uSERTipoConta != value)
                {
                    _uSERTipoConta = value;
                    OnPropertyChanged("USERTipoConta");
                }
            }
        }
        private string _uSERTipoConta;
    
        [DataMember]
        public string USEREntCtps
        {
            get { return _uSEREntCtps; }
            set
            {
                if (_uSEREntCtps != value)
                {
                    _uSEREntCtps = value;
                    OnPropertyChanged("USEREntCtps");
                }
            }
        }
        private string _uSEREntCtps;
    
        [DataMember]
        public string USEREntPis
        {
            get { return _uSEREntPis; }
            set
            {
                if (_uSEREntPis != value)
                {
                    _uSEREntPis = value;
                    OnPropertyChanged("USEREntPis");
                }
            }
        }
        private string _uSEREntPis;
    
        [DataMember]
        public string USEREntInss
        {
            get { return _uSEREntInss; }
            set
            {
                if (_uSEREntInss != value)
                {
                    _uSEREntInss = value;
                    OnPropertyChanged("USEREntInss");
                }
            }
        }
        private string _uSEREntInss;
    
        [DataMember]
        public string USEREntStatus
        {
            get { return _uSEREntStatus; }
            set
            {
                if (_uSEREntStatus != value)
                {
                    _uSEREntStatus = value;
                    OnPropertyChanged("USEREntStatus");
                }
            }
        }
        private string _uSEREntStatus;
    
        [DataMember]
        public string USEREntTempo
        {
            get { return _uSEREntTempo; }
            set
            {
                if (_uSEREntTempo != value)
                {
                    _uSEREntTempo = value;
                    OnPropertyChanged("USEREntTempo");
                }
            }
        }
        private string _uSEREntTempo;
    
        [DataMember]
        public string USEREntFaturamento
        {
            get { return _uSEREntFaturamento; }
            set
            {
                if (_uSEREntFaturamento != value)
                {
                    _uSEREntFaturamento = value;
                    OnPropertyChanged("USEREntFaturamento");
                }
            }
        }
        private string _uSEREntFaturamento;
    
        [DataMember]
        public Nullable<decimal> USEREntQtdLimCred
        {
            get { return _uSEREntQtdLimCred; }
            set
            {
                if (_uSEREntQtdLimCred != value)
                {
                    _uSEREntQtdLimCred = value;
                    OnPropertyChanged("USEREntQtdLimCred");
                }
            }
        }
        private Nullable<decimal> _uSEREntQtdLimCred;
    
        [DataMember]
        public Nullable<System.DateTime> USEREntDataAtualLimCred
        {
            get { return _uSEREntDataAtualLimCred; }
            set
            {
                if (_uSEREntDataAtualLimCred != value)
                {
                    _uSEREntDataAtualLimCred = value;
                    OnPropertyChanged("USEREntDataAtualLimCred");
                }
            }
        }
        private Nullable<System.DateTime> _uSEREntDataAtualLimCred;
    
        [DataMember]
        public Nullable<decimal> USERMetaQtd
        {
            get { return _uSERMetaQtd; }
            set
            {
                if (_uSERMetaQtd != value)
                {
                    _uSERMetaQtd = value;
                    OnPropertyChanged("USERMetaQtd");
                }
            }
        }
        private Nullable<decimal> _uSERMetaQtd;
    
        [DataMember]
        public Nullable<decimal> USERMetaPzMedio
        {
            get { return _uSERMetaPzMedio; }
            set
            {
                if (_uSERMetaPzMedio != value)
                {
                    _uSERMetaPzMedio = value;
                    OnPropertyChanged("USERMetaPzMedio");
                }
            }
        }
        private Nullable<decimal> _uSERMetaPzMedio;
    
        [DataMember]
        public Nullable<decimal> USERMetaPrMedio
        {
            get { return _uSERMetaPrMedio; }
            set
            {
                if (_uSERMetaPrMedio != value)
                {
                    _uSERMetaPrMedio = value;
                    OnPropertyChanged("USERMetaPrMedio");
                }
            }
        }
        private Nullable<decimal> _uSERMetaPrMedio;
    
        [DataMember]
        public Nullable<decimal> USERMetaW36
        {
            get { return _uSERMetaW36; }
            set
            {
                if (_uSERMetaW36 != value)
                {
                    _uSERMetaW36 = value;
                    OnPropertyChanged("USERMetaW36");
                }
            }
        }
        private Nullable<decimal> _uSERMetaW36;
    
        [DataMember]
        public Nullable<decimal> USERMetaLsl
        {
            get { return _uSERMetaLsl; }
            set
            {
                if (_uSERMetaLsl != value)
                {
                    _uSERMetaLsl = value;
                    OnPropertyChanged("USERMetaLsl");
                }
            }
        }
        private Nullable<decimal> _uSERMetaLsl;
    
        [DataMember]
        public Nullable<decimal> USERMetaHB
        {
            get { return _uSERMetaHB; }
            set
            {
                if (_uSERMetaHB != value)
                {
                    _uSERMetaHB = value;
                    OnPropertyChanged("USERMetaHB");
                }
            }
        }
        private Nullable<decimal> _uSERMetaHB;
    
        [DataMember]
        public Nullable<System.DateTime> USERDataRecadast
        {
            get { return _uSERDataRecadast; }
            set
            {
                if (_uSERDataRecadast != value)
                {
                    _uSERDataRecadast = value;
                    OnPropertyChanged("USERDataRecadast");
                }
            }
        }
        private Nullable<System.DateTime> _uSERDataRecadast;
    
        [DataMember]
        public string USERStatusFinanc
        {
            get { return _uSERStatusFinanc; }
            set
            {
                if (_uSERStatusFinanc != value)
                {
                    _uSERStatusFinanc = value;
                    OnPropertyChanged("USERStatusFinanc");
                }
            }
        }
        private string _uSERStatusFinanc;
    
        [DataMember]
        public Nullable<short> USERGrupoEntidade
        {
            get { return _uSERGrupoEntidade; }
            set
            {
                if (_uSERGrupoEntidade != value)
                {
                    _uSERGrupoEntidade = value;
                    OnPropertyChanged("USERGrupoEntidade");
                }
            }
        }
        private Nullable<short> _uSERGrupoEntidade;
    
        [DataMember]
        public string USERTipoColabOvosBRasil
        {
            get { return _uSERTipoColabOvosBRasil; }
            set
            {
                if (_uSERTipoColabOvosBRasil != value)
                {
                    _uSERTipoColabOvosBRasil = value;
                    OnPropertyChanged("USERTipoColabOvosBRasil");
                }
            }
        }
        private string _uSERTipoColabOvosBRasil;
    
        [DataMember]
        public string USERCodIncFLIPEntrada
        {
            get { return _uSERCodIncFLIPEntrada; }
            set
            {
                if (_uSERCodIncFLIPEntrada != value)
                {
                    _uSERCodIncFLIPEntrada = value;
                    OnPropertyChanged("USERCodIncFLIPEntrada");
                }
            }
        }
        private string _uSERCodIncFLIPEntrada;
    
        [DataMember]
        public string USERFLIPCodigo
        {
            get { return _uSERFLIPCodigo; }
            set
            {
                if (_uSERFLIPCodigo != value)
                {
                    _uSERFLIPCodigo = value;
                    OnPropertyChanged("USERFLIPCodigo");
                }
            }
        }
        private string _uSERFLIPCodigo;
    
        [DataMember]
        public string USERParticipaPesquisaComercial
        {
            get { return _uSERParticipaPesquisaComercial; }
            set
            {
                if (_uSERParticipaPesquisaComercial != value)
                {
                    _uSERParticipaPesquisaComercial = value;
                    OnPropertyChanged("USERParticipaPesquisaComercial");
                }
            }
        }
        private string _uSERParticipaPesquisaComercial;
    
        [DataMember]
        public Nullable<int> EnderSeq
        {
            get { return _enderSeq; }
            set
            {
                if (_enderSeq != value)
                {
                    _enderSeq = value;
                    OnPropertyChanged("EnderSeq");
                }
            }
        }
        private Nullable<int> _enderSeq;
    
        [DataMember]
        public Nullable<decimal> USERPrecoVenda
        {
            get { return _uSERPrecoVenda; }
            set
            {
                if (_uSERPrecoVenda != value)
                {
                    _uSERPrecoVenda = value;
                    OnPropertyChanged("USERPrecoVenda");
                }
            }
        }
        private Nullable<decimal> _uSERPrecoVenda;
    
        [DataMember]
        public string USERIdiomaCultura
        {
            get { return _uSERIdiomaCultura; }
            set
            {
                if (_uSERIdiomaCultura != value)
                {
                    _uSERIdiomaCultura = value;
                    OnPropertyChanged("USERIdiomaCultura");
                }
            }
        }
        private string _uSERIdiomaCultura;
    
        [DataMember]
        public string USERStatusFinancLTZ
        {
            get { return _uSERStatusFinancLTZ; }
            set
            {
                if (_uSERStatusFinancLTZ != value)
                {
                    _uSERStatusFinancLTZ = value;
                    OnPropertyChanged("USERStatusFinancLTZ");
                }
            }
        }
        private string _uSERStatusFinancLTZ;
    
        [DataMember]
        public string USERStatusFinancHN
        {
            get { return _uSERStatusFinancHN; }
            set
            {
                if (_uSERStatusFinancHN != value)
                {
                    _uSERStatusFinancHN = value;
                    OnPropertyChanged("USERStatusFinancHN");
                }
            }
        }
        private string _uSERStatusFinancHN;
    
        [DataMember]
        public string USERCTeCFOP
        {
            get { return _uSERCTeCFOP; }
            set
            {
                if (_uSERCTeCFOP != value)
                {
                    _uSERCTeCFOP = value;
                    OnPropertyChanged("USERCTeCFOP");
                }
            }
        }
        private string _uSERCTeCFOP;
    
        [DataMember]
        public string USERCTeConta
        {
            get { return _uSERCTeConta; }
            set
            {
                if (_uSERCTeConta != value)
                {
                    _uSERCTeConta = value;
                    OnPropertyChanged("USERCTeConta");
                }
            }
        }
        private string _uSERCTeConta;
    
        [DataMember]
        public string USERCTeRateio
        {
            get { return _uSERCTeRateio; }
            set
            {
                if (_uSERCTeRateio != value)
                {
                    _uSERCTeRateio = value;
                    OnPropertyChanged("USERCTeRateio");
                }
            }
        }
        private string _uSERCTeRateio;
    
        [DataMember]
        public string USERCodigoEstabelecimento
        {
            get { return _uSERCodigoEstabelecimento; }
            set
            {
                if (_uSERCodigoEstabelecimento != value)
                {
                    _uSERCodigoEstabelecimento = value;
                    OnPropertyChanged("USERCodigoEstabelecimento");
                }
            }
        }
        private string _uSERCodigoEstabelecimento;
    
        [DataMember]
        public string USERTipoLancCTE
        {
            get { return _uSERTipoLancCTE; }
            set
            {
                if (_uSERTipoLancCTE != value)
                {
                    _uSERTipoLancCTE = value;
                    OnPropertyChanged("USERTipoLancCTE");
                }
            }
        }
        private string _uSERTipoLancCTE;
    
        [DataMember]
        public Nullable<int> EntQtdDiasVencBoletoMP
        {
            get { return _entQtdDiasVencBoletoMP; }
            set
            {
                if (_entQtdDiasVencBoletoMP != value)
                {
                    _entQtdDiasVencBoletoMP = value;
                    OnPropertyChanged("EntQtdDiasVencBoletoMP");
                }
            }
        }
        private Nullable<int> _entQtdDiasVencBoletoMP;
    
        [DataMember]
        public string ENTNOMEFANT
        {
            get { return _eNTNOMEFANT; }
            set
            {
                if (_eNTNOMEFANT != value)
                {
                    _eNTNOMEFANT = value;
                    OnPropertyChanged("ENTNOMEFANT");
                }
            }
        }
        private string _eNTNOMEFANT;
    
        [DataMember]
        public string ENTENDER
        {
            get { return _eNTENDER; }
            set
            {
                if (_eNTENDER != value)
                {
                    _eNTENDER = value;
                    OnPropertyChanged("ENTENDER");
                }
            }
        }
        private string _eNTENDER;
    
        [DataMember]
        public string EntBoletoAgrupado
        {
            get { return _entBoletoAgrupado; }
            set
            {
                if (_entBoletoAgrupado != value)
                {
                    _entBoletoAgrupado = value;
                    OnPropertyChanged("EntBoletoAgrupado");
                }
            }
        }
        private string _entBoletoAgrupado;
    
        [DataMember]
        public string ENTTIPOIDFISCALSAP
        {
            get { return _eNTTIPOIDFISCALSAP; }
            set
            {
                if (_eNTTIPOIDFISCALSAP != value)
                {
                    _eNTTIPOIDFISCALSAP = value;
                    OnPropertyChanged("ENTTIPOIDFISCALSAP");
                }
            }
        }
        private string _eNTTIPOIDFISCALSAP;
    
        [DataMember]
        public string ENTNUMIDFISCALSAP
        {
            get { return _eNTNUMIDFISCALSAP; }
            set
            {
                if (_eNTNUMIDFISCALSAP != value)
                {
                    _eNTNUMIDFISCALSAP = value;
                    OnPropertyChanged("ENTNUMIDFISCALSAP");
                }
            }
        }
        private string _eNTNUMIDFISCALSAP;
    
        [DataMember]
        public string EntTipoInteg
        {
            get { return _entTipoInteg; }
            set
            {
                if (_entTipoInteg != value)
                {
                    _entTipoInteg = value;
                    OnPropertyChanged("EntTipoInteg");
                }
            }
        }
        private string _entTipoInteg;
    
        [DataMember]
        public string INDECONCODEMIS
        {
            get { return _iNDECONCODEMIS; }
            set
            {
                if (_iNDECONCODEMIS != value)
                {
                    _iNDECONCODEMIS = value;
                    OnPropertyChanged("INDECONCODEMIS");
                }
            }
        }
        private string _iNDECONCODEMIS;
    
        [DataMember]
        public Nullable<decimal> EntTaxaFrt
        {
            get { return _entTaxaFrt; }
            set
            {
                if (_entTaxaFrt != value)
                {
                    _entTaxaFrt = value;
                    OnPropertyChanged("EntTaxaFrt");
                }
            }
        }
        private Nullable<decimal> _entTaxaFrt;
    
        [DataMember]
        public string EntUtilFrtNatOp
        {
            get { return _entUtilFrtNatOp; }
            set
            {
                if (_entUtilFrtNatOp != value)
                {
                    _entUtilFrtNatOp = value;
                    OnPropertyChanged("EntUtilFrtNatOp");
                }
            }
        }
        private string _entUtilFrtNatOp;
    
        [DataMember]
        public string EntDesconsidValMinINSS
        {
            get { return _entDesconsidValMinINSS; }
            set
            {
                if (_entDesconsidValMinINSS != value)
                {
                    _entDesconsidValMinINSS = value;
                    OnPropertyChanged("EntDesconsidValMinINSS");
                }
            }
        }
        private string _entDesconsidValMinINSS;
    
        [DataMember]
        public Nullable<System.DateTime> EntDtUltInvTerc
        {
            get { return _entDtUltInvTerc; }
            set
            {
                if (_entDtUltInvTerc != value)
                {
                    _entDtUltInvTerc = value;
                    OnPropertyChanged("EntDtUltInvTerc");
                }
            }
        }
        private Nullable<System.DateTime> _entDtUltInvTerc;
    
        [DataMember]
        public string EntIncluiIcmsPrecoCusto
        {
            get { return _entIncluiIcmsPrecoCusto; }
            set
            {
                if (_entIncluiIcmsPrecoCusto != value)
                {
                    _entIncluiIcmsPrecoCusto = value;
                    OnPropertyChanged("EntIncluiIcmsPrecoCusto");
                }
            }
        }
        private string _entIncluiIcmsPrecoCusto;
    
        [DataMember]
        public Nullable<System.DateTime> EntDtUltAtualiz
        {
            get { return _entDtUltAtualiz; }
            set
            {
                if (_entDtUltAtualiz != value)
                {
                    _entDtUltAtualiz = value;
                    OnPropertyChanged("EntDtUltAtualiz");
                }
            }
        }
        private Nullable<System.DateTime> _entDtUltAtualiz;
    
        [DataMember]
        public string EntObrigEmbAtendPv
        {
            get { return _entObrigEmbAtendPv; }
            set
            {
                if (_entObrigEmbAtendPv != value)
                {
                    _entObrigEmbAtendPv = value;
                    OnPropertyChanged("EntObrigEmbAtendPv");
                }
            }
        }
        private string _entObrigEmbAtendPv;
    
        [DataMember]
        public string EntEnvDtCompNFSe
        {
            get { return _entEnvDtCompNFSe; }
            set
            {
                if (_entEnvDtCompNFSe != value)
                {
                    _entEnvDtCompNFSe = value;
                    OnPropertyChanged("EntEnvDtCompNFSe");
                }
            }
        }
        private string _entEnvDtCompNFSe;
    
        [DataMember]
        public string EntDedIcmsBasePisCofins
        {
            get { return _entDedIcmsBasePisCofins; }
            set
            {
                if (_entDedIcmsBasePisCofins != value)
                {
                    _entDedIcmsBasePisCofins = value;
                    OnPropertyChanged("EntDedIcmsBasePisCofins");
                }
            }
        }
        private string _entDedIcmsBasePisCofins;
    
        [DataMember]
        public string EntDedIssBasePisCofins
        {
            get { return _entDedIssBasePisCofins; }
            set
            {
                if (_entDedIssBasePisCofins != value)
                {
                    _entDedIssBasePisCofins = value;
                    OnPropertyChanged("EntDedIssBasePisCofins");
                }
            }
        }
        private string _entDedIssBasePisCofins;
    
        [DataMember]
        public string EntDedFreteBaseIpi
        {
            get { return _entDedFreteBaseIpi; }
            set
            {
                if (_entDedFreteBaseIpi != value)
                {
                    _entDedFreteBaseIpi = value;
                    OnPropertyChanged("EntDedFreteBaseIpi");
                }
            }
        }
        private string _entDedFreteBaseIpi;
    
        [DataMember]
        public string EntDedSeguroBaseIpi
        {
            get { return _entDedSeguroBaseIpi; }
            set
            {
                if (_entDedSeguroBaseIpi != value)
                {
                    _entDedSeguroBaseIpi = value;
                    OnPropertyChanged("EntDedSeguroBaseIpi");
                }
            }
        }
        private string _entDedSeguroBaseIpi;
    
        [DataMember]
        public string EntDedEmbalagemBaseIpi
        {
            get { return _entDedEmbalagemBaseIpi; }
            set
            {
                if (_entDedEmbalagemBaseIpi != value)
                {
                    _entDedEmbalagemBaseIpi = value;
                    OnPropertyChanged("EntDedEmbalagemBaseIpi");
                }
            }
        }
        private string _entDedEmbalagemBaseIpi;
    
        [DataMember]
        public string EntDedOutrasDespBaseIpi
        {
            get { return _entDedOutrasDespBaseIpi; }
            set
            {
                if (_entDedOutrasDespBaseIpi != value)
                {
                    _entDedOutrasDespBaseIpi = value;
                    OnPropertyChanged("EntDedOutrasDespBaseIpi");
                }
            }
        }
        private string _entDedOutrasDespBaseIpi;
    
        [DataMember]
        public string USERParticipaProgTranspWEB
        {
            get { return _uSERParticipaProgTranspWEB; }
            set
            {
                if (_uSERParticipaProgTranspWEB != value)
                {
                    _uSERParticipaProgTranspWEB = value;
                    OnPropertyChanged("USERParticipaProgTranspWEB");
                }
            }
        }
        private string _uSERParticipaProgTranspWEB;
    
        [DataMember]
        public string USERPlacaVeiculo
        {
            get { return _uSERPlacaVeiculo; }
            set
            {
                if (_uSERPlacaVeiculo != value)
                {
                    _uSERPlacaVeiculo = value;
                    OnPropertyChanged("USERPlacaVeiculo");
                }
            }
        }
        private string _uSERPlacaVeiculo;
    
        [DataMember]
        public string USEREmpresaControlaTransp
        {
            get { return _uSEREmpresaControlaTransp; }
            set
            {
                if (_uSEREmpresaControlaTransp != value)
                {
                    _uSEREmpresaControlaTransp = value;
                    OnPropertyChanged("USEREmpresaControlaTransp");
                }
            }
        }
        private string _uSEREmpresaControlaTransp;
    
        [DataMember]
        public Nullable<decimal> USERCTeAliqICMS
        {
            get { return _uSERCTeAliqICMS; }
            set
            {
                if (_uSERCTeAliqICMS != value)
                {
                    _uSERCTeAliqICMS = value;
                    OnPropertyChanged("USERCTeAliqICMS");
                }
            }
        }
        private Nullable<decimal> _uSERCTeAliqICMS;
    
        [DataMember]
        public string EntSigla1
        {
            get { return _entSigla1; }
            set
            {
                if (_entSigla1 != value)
                {
                    _entSigla1 = value;
                    OnPropertyChanged("EntSigla1");
                }
            }
        }
        private string _entSigla1;
    
        [DataMember]
        public string EntSigla2
        {
            get { return _entSigla2; }
            set
            {
                if (_entSigla2 != value)
                {
                    _entSigla2 = value;
                    OnPropertyChanged("EntSigla2");
                }
            }
        }
        private string _entSigla2;
    
        [DataMember]
        public string EntRetINSSIndSimp
        {
            get { return _entRetINSSIndSimp; }
            set
            {
                if (_entRetINSSIndSimp != value)
                {
                    _entRetINSSIndSimp = value;
                    OnPropertyChanged("EntRetINSSIndSimp");
                }
            }
        }
        private string _entRetINSSIndSimp;
    
        [DataMember]
        public Nullable<System.DateTime> EntDtSitCadFed
        {
            get { return _entDtSitCadFed; }
            set
            {
                if (_entDtSitCadFed != value)
                {
                    _entDtSitCadFed = value;
                    OnPropertyChanged("EntDtSitCadFed");
                }
            }
        }
        private Nullable<System.DateTime> _entDtSitCadFed;
    
        [DataMember]
        public Nullable<int> CaracImovelEntId
        {
            get { return _caracImovelEntId; }
            set
            {
                if (_caracImovelEntId != value)
                {
                    _caracImovelEntId = value;
                    OnPropertyChanged("CaracImovelEntId");
                }
            }
        }
        private Nullable<int> _caracImovelEntId;
    
        [DataMember]
        public Nullable<decimal> ENTPERCIRRFRED
        {
            get { return _eNTPERCIRRFRED; }
            set
            {
                if (_eNTPERCIRRFRED != value)
                {
                    _eNTPERCIRRFRED = value;
                    OnPropertyChanged("ENTPERCIRRFRED");
                }
            }
        }
        private Nullable<decimal> _eNTPERCIRRFRED;
    
        [DataMember]
        public string EntUsuWebCod
        {
            get { return _entUsuWebCod; }
            set
            {
                if (_entUsuWebCod != value)
                {
                    _entUsuWebCod = value;
                    OnPropertyChanged("EntUsuWebCod");
                }
            }
        }
        private string _entUsuWebCod;
    
        [DataMember]
        public System.Guid RowGuid
        {
            get { return _rowGuid; }
            set
            {
                if (_rowGuid != value)
                {
                    _rowGuid = value;
                    OnPropertyChanged("RowGuid");
                }
            }
        }
        private System.Guid _rowGuid;
    
        [DataMember]
        public string EntContatoDadosAdic
        {
            get { return _entContatoDadosAdic; }
            set
            {
                if (_entContatoDadosAdic != value)
                {
                    _entContatoDadosAdic = value;
                    OnPropertyChanged("EntContatoDadosAdic");
                }
            }
        }
        private string _entContatoDadosAdic;
    
        [DataMember]
        public string EntHorarioDadosAdic
        {
            get { return _entHorarioDadosAdic; }
            set
            {
                if (_entHorarioDadosAdic != value)
                {
                    _entHorarioDadosAdic = value;
                    OnPropertyChanged("EntHorarioDadosAdic");
                }
            }
        }
        private string _entHorarioDadosAdic;
    
        [DataMember]
        public string USERNumRegistro
        {
            get { return _uSERNumRegistro; }
            set
            {
                if (_uSERNumRegistro != value)
                {
                    _uSERNumRegistro = value;
                    OnPropertyChanged("USERNumRegistro");
                }
            }
        }
        private string _uSERNumRegistro;
    
        [DataMember]
        public string USERNumProtocolo
        {
            get { return _uSERNumProtocolo; }
            set
            {
                if (_uSERNumProtocolo != value)
                {
                    _uSERNumProtocolo = value;
                    OnPropertyChanged("USERNumProtocolo");
                }
            }
        }
        private string _uSERNumProtocolo;
    
        [DataMember]
        public string EntGeraNFComisRecTur
        {
            get { return _entGeraNFComisRecTur; }
            set
            {
                if (_entGeraNFComisRecTur != value)
                {
                    _entGeraNFComisRecTur = value;
                    OnPropertyChanged("EntGeraNFComisRecTur");
                }
            }
        }
        private string _entGeraNFComisRecTur;
    
        [DataMember]
        public Nullable<System.DateTime> EntCertCrimFed
        {
            get { return _entCertCrimFed; }
            set
            {
                if (_entCertCrimFed != value)
                {
                    _entCertCrimFed = value;
                    OnPropertyChanged("EntCertCrimFed");
                }
            }
        }
        private Nullable<System.DateTime> _entCertCrimFed;
    
        [DataMember]
        public Nullable<System.DateTime> EntCertCrimEst
        {
            get { return _entCertCrimEst; }
            set
            {
                if (_entCertCrimEst != value)
                {
                    _entCertCrimEst = value;
                    OnPropertyChanged("EntCertCrimEst");
                }
            }
        }
        private Nullable<System.DateTime> _entCertCrimEst;
    
        [DataMember]
        public Nullable<System.DateTime> EntCertDebTrab
        {
            get { return _entCertDebTrab; }
            set
            {
                if (_entCertDebTrab != value)
                {
                    _entCertDebTrab = value;
                    OnPropertyChanged("EntCertDebTrab");
                }
            }
        }
        private Nullable<System.DateTime> _entCertDebTrab;
    
        [DataMember]
        public string EntSistema
        {
            get { return _entSistema; }
            set
            {
                if (_entSistema != value)
                {
                    _entSistema = value;
                    OnPropertyChanged("EntSistema");
                }
            }
        }
        private string _entSistema;
    
        [DataMember]
        public string EntDescr
        {
            get { return _entDescr; }
            set
            {
                if (_entDescr != value)
                {
                    _entDescr = value;
                    OnPropertyChanged("EntDescr");
                }
            }
        }
        private string _entDescr;
    
        [DataMember]
        public string USERStatusFinancPPA
        {
            get { return _uSERStatusFinancPPA; }
            set
            {
                if (_uSERStatusFinancPPA != value)
                {
                    _uSERStatusFinancPPA = value;
                    OnPropertyChanged("USERStatusFinancPPA");
                }
            }
        }
        private string _uSERStatusFinancPPA;
    
        [DataMember]
        public Nullable<System.DateTime> USERNumRegistroValidade
        {
            get { return _uSERNumRegistroValidade; }
            set
            {
                if (_uSERNumRegistroValidade != value)
                {
                    _uSERNumRegistroValidade = value;
                    OnPropertyChanged("USERNumRegistroValidade");
                }
            }
        }
        private Nullable<System.DateTime> _uSERNumRegistroValidade;
    
        [DataMember]
        public string EntPartUfRegimeSubTrib
        {
            get { return _entPartUfRegimeSubTrib; }
            set
            {
                if (_entPartUfRegimeSubTrib != value)
                {
                    _entPartUfRegimeSubTrib = value;
                    OnPropertyChanged("EntPartUfRegimeSubTrib");
                }
            }
        }
        private string _entPartUfRegimeSubTrib;
    
        [DataMember]
        public string EntUtModVendas
        {
            get { return _entUtModVendas; }
            set
            {
                if (_entUtModVendas != value)
                {
                    _entUtModVendas = value;
                    OnPropertyChanged("EntUtModVendas");
                }
            }
        }
        private string _entUtModVendas;
    
        [DataMember]
        public string EntUtModCompras
        {
            get { return _entUtModCompras; }
            set
            {
                if (_entUtModCompras != value)
                {
                    _entUtModCompras = value;
                    OnPropertyChanged("EntUtModCompras");
                }
            }
        }
        private string _entUtModCompras;
    
        [DataMember]
        public string EntMotTransp
        {
            get { return _entMotTransp; }
            set
            {
                if (_entMotTransp != value)
                {
                    _entMotTransp = value;
                    OnPropertyChanged("EntMotTransp");
                }
            }
        }
        private string _entMotTransp;
    
        [DataMember]
        public Nullable<decimal> EntFMargemPad
        {
            get { return _entFMargemPad; }
            set
            {
                if (_entFMargemPad != value)
                {
                    _entFMargemPad = value;
                    OnPropertyChanged("EntFMargemPad");
                }
            }
        }
        private Nullable<decimal> _entFMargemPad;
    
        [DataMember]
        public string ENTNOMECTEMDFE
        {
            get { return _eNTNOMECTEMDFE; }
            set
            {
                if (_eNTNOMECTEMDFE != value)
                {
                    _eNTNOMECTEMDFE = value;
                    OnPropertyChanged("ENTNOMECTEMDFE");
                }
            }
        }
        private string _eNTNOMECTEMDFE;
    
        [DataMember]
        public string ENTCPFCTEMDFE
        {
            get { return _eNTCPFCTEMDFE; }
            set
            {
                if (_eNTCPFCTEMDFE != value)
                {
                    _eNTCPFCTEMDFE = value;
                    OnPropertyChanged("ENTCPFCTEMDFE");
                }
            }
        }
        private string _eNTCPFCTEMDFE;
    
        [DataMember]
        public Nullable<decimal> ENTVALMINFAT
        {
            get { return _eNTVALMINFAT; }
            set
            {
                if (_eNTVALMINFAT != value)
                {
                    _eNTVALMINFAT = value;
                    OnPropertyChanged("ENTVALMINFAT");
                }
            }
        }
        private Nullable<decimal> _eNTVALMINFAT;
    
        [DataMember]
        public string USERRNTRC
        {
            get { return _uSERRNTRC; }
            set
            {
                if (_uSERRNTRC != value)
                {
                    _uSERRNTRC = value;
                    OnPropertyChanged("USERRNTRC");
                }
            }
        }
        private string _uSERRNTRC;
    
        [DataMember]
        public Nullable<short> USERIDTarget
        {
            get { return _uSERIDTarget; }
            set
            {
                if (_uSERIDTarget != value)
                {
                    _uSERIDTarget = value;
                    OnPropertyChanged("USERIDTarget");
                }
            }
        }
        private Nullable<short> _uSERIDTarget;
    
        [DataMember]
        public string USEREndGoogleMaps
        {
            get { return _uSEREndGoogleMaps; }
            set
            {
                if (_uSEREndGoogleMaps != value)
                {
                    _uSEREndGoogleMaps = value;
                    OnPropertyChanged("USEREndGoogleMaps");
                }
            }
        }
        private string _uSEREndGoogleMaps;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<CTRL_LOTE> CTRL_LOTE
        {
            get
            {
                if (_cTRL_LOTE == null)
                {
                    _cTRL_LOTE = new TrackableCollection<CTRL_LOTE>();
                    _cTRL_LOTE.CollectionChanged += FixupCTRL_LOTE;
                }
                return _cTRL_LOTE;
            }
            set
            {
                if (!ReferenceEquals(_cTRL_LOTE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cTRL_LOTE != null)
                    {
                        _cTRL_LOTE.CollectionChanged -= FixupCTRL_LOTE;
                    }
                    _cTRL_LOTE = value;
                    if (_cTRL_LOTE != null)
                    {
                        _cTRL_LOTE.CollectionChanged += FixupCTRL_LOTE;
                    }
                    OnNavigationPropertyChanged("CTRL_LOTE");
                }
            }
        }
        private TrackableCollection<CTRL_LOTE> _cTRL_LOTE;
    
        [DataMember]
        public TrackableCollection<CTRL_LOTE_INV_LOC_ARM1> CTRL_LOTE_INV_LOC_ARM1
        {
            get
            {
                if (_cTRL_LOTE_INV_LOC_ARM1 == null)
                {
                    _cTRL_LOTE_INV_LOC_ARM1 = new TrackableCollection<CTRL_LOTE_INV_LOC_ARM1>();
                    _cTRL_LOTE_INV_LOC_ARM1.CollectionChanged += FixupCTRL_LOTE_INV_LOC_ARM1;
                }
                return _cTRL_LOTE_INV_LOC_ARM1;
            }
            set
            {
                if (!ReferenceEquals(_cTRL_LOTE_INV_LOC_ARM1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cTRL_LOTE_INV_LOC_ARM1 != null)
                    {
                        _cTRL_LOTE_INV_LOC_ARM1.CollectionChanged -= FixupCTRL_LOTE_INV_LOC_ARM1;
                    }
                    _cTRL_LOTE_INV_LOC_ARM1 = value;
                    if (_cTRL_LOTE_INV_LOC_ARM1 != null)
                    {
                        _cTRL_LOTE_INV_LOC_ARM1.CollectionChanged += FixupCTRL_LOTE_INV_LOC_ARM1;
                    }
                    OnNavigationPropertyChanged("CTRL_LOTE_INV_LOC_ARM1");
                }
            }
        }
        private TrackableCollection<CTRL_LOTE_INV_LOC_ARM1> _cTRL_LOTE_INV_LOC_ARM1;
    
        [DataMember]
        public TrackableCollection<EMPRESA_FILIAL> EMPRESA_FILIAL
        {
            get
            {
                if (_eMPRESA_FILIAL == null)
                {
                    _eMPRESA_FILIAL = new TrackableCollection<EMPRESA_FILIAL>();
                    _eMPRESA_FILIAL.CollectionChanged += FixupEMPRESA_FILIAL;
                }
                return _eMPRESA_FILIAL;
            }
            set
            {
                if (!ReferenceEquals(_eMPRESA_FILIAL, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_eMPRESA_FILIAL != null)
                    {
                        _eMPRESA_FILIAL.CollectionChanged -= FixupEMPRESA_FILIAL;
                    }
                    _eMPRESA_FILIAL = value;
                    if (_eMPRESA_FILIAL != null)
                    {
                        _eMPRESA_FILIAL.CollectionChanged += FixupEMPRESA_FILIAL;
                    }
                    OnNavigationPropertyChanged("EMPRESA_FILIAL");
                }
            }
        }
        private TrackableCollection<EMPRESA_FILIAL> _eMPRESA_FILIAL;
    
        [DataMember]
        public TrackableCollection<ENT_CATEG> ENT_CATEG
        {
            get
            {
                if (_eNT_CATEG == null)
                {
                    _eNT_CATEG = new TrackableCollection<ENT_CATEG>();
                    _eNT_CATEG.CollectionChanged += FixupENT_CATEG;
                }
                return _eNT_CATEG;
            }
            set
            {
                if (!ReferenceEquals(_eNT_CATEG, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_eNT_CATEG != null)
                    {
                        _eNT_CATEG.CollectionChanged -= FixupENT_CATEG;
                        // This is the principal end in an association that performs cascade deletes.
                        // Remove the cascade delete event handler for any entities in the current collection.
                        foreach (ENT_CATEG item in _eNT_CATEG)
                        {
                            ChangeTracker.ObjectStateChanging -= item.HandleCascadeDelete;
                        }
                    }
                    _eNT_CATEG = value;
                    if (_eNT_CATEG != null)
                    {
                        _eNT_CATEG.CollectionChanged += FixupENT_CATEG;
                        // This is the principal end in an association that performs cascade deletes.
                        // Add the cascade delete event handler for any entities that are already in the new collection.
                        foreach (ENT_CATEG item in _eNT_CATEG)
                        {
                            ChangeTracker.ObjectStateChanging += item.HandleCascadeDelete;
                        }
                    }
                    OnNavigationPropertyChanged("ENT_CATEG");
                }
            }
        }
        private TrackableCollection<ENT_CATEG> _eNT_CATEG;
    
        [DataMember]
        public ENTIDADE ENTIDADE
        {
            get { return _eNTIDADE; }
            set
            {
                if (!ReferenceEquals(_eNTIDADE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added && value != null)
                    {
                        // This the dependent end of an identifying relationship, so the principal end cannot be changed if it is already set,
                        // otherwise it can only be set to an entity with a primary key that is the same value as the dependent's foreign key.
                        if (EntCod != value.EntCod)
                        {
                            throw new InvalidOperationException("The principal end of an identifying relationship can only be changed when the dependent end is in the Added state.");
                        }
                    }
                    var previousValue = _eNTIDADE;
                    _eNTIDADE = value;
                    FixupENTIDADE(previousValue);
                    OnNavigationPropertyChanged("ENTIDADE");
                }
            }
        }
        private ENTIDADE _eNTIDADE;
    
        [DataMember]
        public ENTIDADE ENTIDADE2
        {
            get { return _eNTIDADE2; }
            set
            {
                if (!ReferenceEquals(_eNTIDADE2, value))
                {
                    var previousValue = _eNTIDADE2;
                    _eNTIDADE2 = value;
                    FixupENTIDADE2(previousValue);
                    OnNavigationPropertyChanged("ENTIDADE2");
                }
            }
        }
        private ENTIDADE _eNTIDADE2;
    
        [DataMember]
        public TrackableCollection<EQUIPAMENTO> EQUIPAMENTO
        {
            get
            {
                if (_eQUIPAMENTO == null)
                {
                    _eQUIPAMENTO = new TrackableCollection<EQUIPAMENTO>();
                    _eQUIPAMENTO.CollectionChanged += FixupEQUIPAMENTO;
                }
                return _eQUIPAMENTO;
            }
            set
            {
                if (!ReferenceEquals(_eQUIPAMENTO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_eQUIPAMENTO != null)
                    {
                        _eQUIPAMENTO.CollectionChanged -= FixupEQUIPAMENTO;
                    }
                    _eQUIPAMENTO = value;
                    if (_eQUIPAMENTO != null)
                    {
                        _eQUIPAMENTO.CollectionChanged += FixupEQUIPAMENTO;
                    }
                    OnNavigationPropertyChanged("EQUIPAMENTO");
                }
            }
        }
        private TrackableCollection<EQUIPAMENTO> _eQUIPAMENTO;
    
        [DataMember]
        public TrackableCollection<PED_VENDA1> PED_VENDA1
        {
            get
            {
                if (_pED_VENDA1 == null)
                {
                    _pED_VENDA1 = new TrackableCollection<PED_VENDA1>();
                    _pED_VENDA1.CollectionChanged += FixupPED_VENDA1;
                }
                return _pED_VENDA1;
            }
            set
            {
                if (!ReferenceEquals(_pED_VENDA1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pED_VENDA1 != null)
                    {
                        _pED_VENDA1.CollectionChanged -= FixupPED_VENDA1;
                    }
                    _pED_VENDA1 = value;
                    if (_pED_VENDA1 != null)
                    {
                        _pED_VENDA1.CollectionChanged += FixupPED_VENDA1;
                    }
                    OnNavigationPropertyChanged("PED_VENDA1");
                }
            }
        }
        private TrackableCollection<PED_VENDA1> _pED_VENDA1;
    
        [DataMember]
        public TrackableCollection<PED_VENDA1> PED_VENDA11
        {
            get
            {
                if (_pED_VENDA11 == null)
                {
                    _pED_VENDA11 = new TrackableCollection<PED_VENDA1>();
                    _pED_VENDA11.CollectionChanged += FixupPED_VENDA11;
                }
                return _pED_VENDA11;
            }
            set
            {
                if (!ReferenceEquals(_pED_VENDA11, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pED_VENDA11 != null)
                    {
                        _pED_VENDA11.CollectionChanged -= FixupPED_VENDA11;
                    }
                    _pED_VENDA11 = value;
                    if (_pED_VENDA11 != null)
                    {
                        _pED_VENDA11.CollectionChanged += FixupPED_VENDA11;
                    }
                    OnNavigationPropertyChanged("PED_VENDA11");
                }
            }
        }
        private TrackableCollection<PED_VENDA1> _pED_VENDA11;
    
        [DataMember]
        public TrackableCollection<ROTA_ENTREGA_CID_ENT> ROTA_ENTREGA_CID_ENT
        {
            get
            {
                if (_rOTA_ENTREGA_CID_ENT == null)
                {
                    _rOTA_ENTREGA_CID_ENT = new TrackableCollection<ROTA_ENTREGA_CID_ENT>();
                    _rOTA_ENTREGA_CID_ENT.CollectionChanged += FixupROTA_ENTREGA_CID_ENT;
                }
                return _rOTA_ENTREGA_CID_ENT;
            }
            set
            {
                if (!ReferenceEquals(_rOTA_ENTREGA_CID_ENT, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rOTA_ENTREGA_CID_ENT != null)
                    {
                        _rOTA_ENTREGA_CID_ENT.CollectionChanged -= FixupROTA_ENTREGA_CID_ENT;
                    }
                    _rOTA_ENTREGA_CID_ENT = value;
                    if (_rOTA_ENTREGA_CID_ENT != null)
                    {
                        _rOTA_ENTREGA_CID_ENT.CollectionChanged += FixupROTA_ENTREGA_CID_ENT;
                    }
                    OnNavigationPropertyChanged("ROTA_ENTREGA_CID_ENT");
                }
            }
        }
        private TrackableCollection<ROTA_ENTREGA_CID_ENT> _rOTA_ENTREGA_CID_ENT;
    
        [DataMember]
        public TrackableCollection<ITEM_CTRL_INV_LOC_ARM1> ITEM_CTRL_INV_LOC_ARM1
        {
            get
            {
                if (_iTEM_CTRL_INV_LOC_ARM1 == null)
                {
                    _iTEM_CTRL_INV_LOC_ARM1 = new TrackableCollection<ITEM_CTRL_INV_LOC_ARM1>();
                    _iTEM_CTRL_INV_LOC_ARM1.CollectionChanged += FixupITEM_CTRL_INV_LOC_ARM1;
                }
                return _iTEM_CTRL_INV_LOC_ARM1;
            }
            set
            {
                if (!ReferenceEquals(_iTEM_CTRL_INV_LOC_ARM1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_iTEM_CTRL_INV_LOC_ARM1 != null)
                    {
                        _iTEM_CTRL_INV_LOC_ARM1.CollectionChanged -= FixupITEM_CTRL_INV_LOC_ARM1;
                    }
                    _iTEM_CTRL_INV_LOC_ARM1 = value;
                    if (_iTEM_CTRL_INV_LOC_ARM1 != null)
                    {
                        _iTEM_CTRL_INV_LOC_ARM1.CollectionChanged += FixupITEM_CTRL_INV_LOC_ARM1;
                    }
                    OnNavigationPropertyChanged("ITEM_CTRL_INV_LOC_ARM1");
                }
            }
        }
        private TrackableCollection<ITEM_CTRL_INV_LOC_ARM1> _iTEM_CTRL_INV_LOC_ARM1;
    
        [DataMember]
        public TrackableCollection<UNID_FEDERACAO> UNID_FEDERACAO
        {
            get
            {
                if (_uNID_FEDERACAO == null)
                {
                    _uNID_FEDERACAO = new TrackableCollection<UNID_FEDERACAO>();
                    _uNID_FEDERACAO.CollectionChanged += FixupUNID_FEDERACAO;
                }
                return _uNID_FEDERACAO;
            }
            set
            {
                if (!ReferenceEquals(_uNID_FEDERACAO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_uNID_FEDERACAO != null)
                    {
                        _uNID_FEDERACAO.CollectionChanged -= FixupUNID_FEDERACAO;
                    }
                    _uNID_FEDERACAO = value;
                    if (_uNID_FEDERACAO != null)
                    {
                        _uNID_FEDERACAO.CollectionChanged += FixupUNID_FEDERACAO;
                    }
                    OnNavigationPropertyChanged("UNID_FEDERACAO");
                }
            }
        }
        private TrackableCollection<UNID_FEDERACAO> _uNID_FEDERACAO;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        // This entity type is the dependent end in at least one association that performs cascade deletes.
        // This event handler will process notifications that occur when the principal end is deleted.
        internal void HandleCascadeDelete(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                this.MarkAsDeleted();
            }
        }
    
        protected virtual void ClearNavigationProperties()
        {
            CTRL_LOTE.Clear();
            CTRL_LOTE_INV_LOC_ARM1.Clear();
            EMPRESA_FILIAL.Clear();
            ENT_CATEG.Clear();
            ENTIDADE = null;
            ENTIDADE2 = null;
            EQUIPAMENTO.Clear();
            PED_VENDA1.Clear();
            PED_VENDA11.Clear();
            ROTA_ENTREGA_CID_ENT.Clear();
            ITEM_CTRL_INV_LOC_ARM1.Clear();
            UNID_FEDERACAO.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupENTIDADE(ENTIDADE previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && ReferenceEquals(previousValue.ENTIDADE11, this))
            {
                previousValue.ENTIDADE11 = null;
            }
    
            if (ENTIDADE != null)
            {
                ENTIDADE.ENTIDADE11 = this;
                EntCod = ENTIDADE.EntCod;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ENTIDADE")
                    && (ChangeTracker.OriginalValues["ENTIDADE"] == ENTIDADE))
                {
                    ChangeTracker.OriginalValues.Remove("ENTIDADE");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ENTIDADE", previousValue);
                }
                if (ENTIDADE != null && !ENTIDADE.ChangeTracker.ChangeTrackingEnabled)
                {
                    ENTIDADE.StartTracking();
                }
            }
        }
    
        private void FixupENTIDADE2(ENTIDADE previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ENTIDADE12.Contains(this))
            {
                previousValue.ENTIDADE12.Remove(this);
            }
    
            if (ENTIDADE2 != null)
            {
                if (!ENTIDADE2.ENTIDADE12.Contains(this))
                {
                    ENTIDADE2.ENTIDADE12.Add(this);
                }
    
                EntCodGrupo = ENTIDADE2.EntCod;
            }
            else if (!skipKeys)
            {
                EntCodGrupo = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ENTIDADE2")
                    && (ChangeTracker.OriginalValues["ENTIDADE2"] == ENTIDADE2))
                {
                    ChangeTracker.OriginalValues.Remove("ENTIDADE2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ENTIDADE2", previousValue);
                }
                if (ENTIDADE2 != null && !ENTIDADE2.ChangeTracker.ChangeTrackingEnabled)
                {
                    ENTIDADE2.StartTracking();
                }
            }
        }
    
        private void FixupCTRL_LOTE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CTRL_LOTE item in e.NewItems)
                {
                    item.ENTIDADE1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CTRL_LOTE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CTRL_LOTE item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE1, this))
                    {
                        item.ENTIDADE1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CTRL_LOTE", item);
                    }
                }
            }
        }
    
        private void FixupCTRL_LOTE_INV_LOC_ARM1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CTRL_LOTE_INV_LOC_ARM1 item in e.NewItems)
                {
                    item.ENTIDADE1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CTRL_LOTE_INV_LOC_ARM1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CTRL_LOTE_INV_LOC_ARM1 item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE1, this))
                    {
                        item.ENTIDADE1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CTRL_LOTE_INV_LOC_ARM1", item);
                    }
                }
            }
        }
    
        private void FixupEMPRESA_FILIAL(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (EMPRESA_FILIAL item in e.NewItems)
                {
                    item.ENTIDADE1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("EMPRESA_FILIAL", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EMPRESA_FILIAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE1, this))
                    {
                        item.ENTIDADE1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("EMPRESA_FILIAL", item);
                    }
                }
            }
        }
    
        private void FixupENT_CATEG(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ENT_CATEG item in e.NewItems)
                {
                    item.ENTIDADE1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ENT_CATEG", item);
                    }
                    // This is the principal end in an association that performs cascade deletes.
                    // Update the event listener to refer to the new dependent.
                    ChangeTracker.ObjectStateChanging += item.HandleCascadeDelete;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ENT_CATEG item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE1, this))
                    {
                        item.ENTIDADE1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ENT_CATEG", item);
                        // Delete the dependent end of this identifying association. If the current state is Added,
                        // allow the relationship to be changed without causing the dependent to be deleted.
                        if (item.ChangeTracker.State != ObjectState.Added)
                        {
                            item.MarkAsDeleted();
                        }
                    }
                    // This is the principal end in an association that performs cascade deletes.
                    // Remove the previous dependent from the event listener.
                    ChangeTracker.ObjectStateChanging -= item.HandleCascadeDelete;
                }
            }
        }
    
        private void FixupEQUIPAMENTO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (EQUIPAMENTO item in e.NewItems)
                {
                    item.ENTIDADE11 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("EQUIPAMENTO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EQUIPAMENTO item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE11, this))
                    {
                        item.ENTIDADE11 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("EQUIPAMENTO", item);
                    }
                }
            }
        }
    
        private void FixupPED_VENDA1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PED_VENDA1 item in e.NewItems)
                {
                    item.ENTIDADE11 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PED_VENDA1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PED_VENDA1 item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE11, this))
                    {
                        item.ENTIDADE11 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PED_VENDA1", item);
                    }
                }
            }
        }
    
        private void FixupPED_VENDA11(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PED_VENDA1 item in e.NewItems)
                {
                    item.ENTIDADE12 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PED_VENDA11", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PED_VENDA1 item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE12, this))
                    {
                        item.ENTIDADE12 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PED_VENDA11", item);
                    }
                }
            }
        }
    
        private void FixupROTA_ENTREGA_CID_ENT(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ROTA_ENTREGA_CID_ENT item in e.NewItems)
                {
                    item.ENTIDADE1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ROTA_ENTREGA_CID_ENT", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ROTA_ENTREGA_CID_ENT item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE1, this))
                    {
                        item.ENTIDADE1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ROTA_ENTREGA_CID_ENT", item);
                    }
                }
            }
        }
    
        private void FixupITEM_CTRL_INV_LOC_ARM1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ITEM_CTRL_INV_LOC_ARM1 item in e.NewItems)
                {
                    item.ENTIDADE1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ITEM_CTRL_INV_LOC_ARM1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ITEM_CTRL_INV_LOC_ARM1 item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE1, this))
                    {
                        item.ENTIDADE1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ITEM_CTRL_INV_LOC_ARM1", item);
                    }
                }
            }
        }
    
        private void FixupUNID_FEDERACAO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (UNID_FEDERACAO item in e.NewItems)
                {
                    item.ENTIDADE1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("UNID_FEDERACAO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UNID_FEDERACAO item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE1, this))
                    {
                        item.ENTIDADE1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("UNID_FEDERACAO", item);
                    }
                }
            }
        }

        #endregion

    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHylinedoBrasilMobile.Models.bdApolo
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(CIDADE))]
    [KnownType(typeof(EQUIPAMENTO))]
    [KnownType(typeof(PED_VENDA1))]
    [KnownType(typeof(ENTIDADE1))]
    public partial class UNID_FEDERACAO: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public string PaisSigla
        {
            get { return _paisSigla; }
            set
            {
                if (_paisSigla != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'PaisSigla' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _paisSigla = value;
                    OnPropertyChanged("PaisSigla");
                }
            }
        }
        private string _paisSigla;
    
        [DataMember]
        public string UfSigla
        {
            get { return _ufSigla; }
            set
            {
                if (_ufSigla != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'UfSigla' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _ufSigla = value;
                    OnPropertyChanged("UfSigla");
                }
            }
        }
        private string _ufSigla;
    
        [DataMember]
        public string UfNome
        {
            get { return _ufNome; }
            set
            {
                if (_ufNome != value)
                {
                    _ufNome = value;
                    OnPropertyChanged("UfNome");
                }
            }
        }
        private string _ufNome;
    
        [DataMember]
        public string UfRegimeSubTrib
        {
            get { return _ufRegimeSubTrib; }
            set
            {
                if (_ufRegimeSubTrib != value)
                {
                    _ufRegimeSubTrib = value;
                    OnPropertyChanged("UfRegimeSubTrib");
                }
            }
        }
        private string _ufRegimeSubTrib;
    
        [DataMember]
        public string UfRegGeog
        {
            get { return _ufRegGeog; }
            set
            {
                if (_ufRegGeog != value)
                {
                    _ufRegGeog = value;
                    OnPropertyChanged("UfRegGeog");
                }
            }
        }
        private string _ufRegGeog;
    
        [DataMember]
        public string UfRegFisc
        {
            get { return _ufRegFisc; }
            set
            {
                if (_ufRegFisc != value)
                {
                    _ufRegFisc = value;
                    OnPropertyChanged("UfRegFisc");
                }
            }
        }
        private string _ufRegFisc;
    
        [DataMember]
        public Nullable<decimal> UfPercIcmsInterno
        {
            get { return _ufPercIcmsInterno; }
            set
            {
                if (_ufPercIcmsInterno != value)
                {
                    _ufPercIcmsInterno = value;
                    OnPropertyChanged("UfPercIcmsInterno");
                }
            }
        }
        private Nullable<decimal> _ufPercIcmsInterno;
    
        [DataMember]
        public Nullable<decimal> UfPercMargLucro
        {
            get { return _ufPercMargLucro; }
            set
            {
                if (_ufPercMargLucro != value)
                {
                    _ufPercMargLucro = value;
                    OnPropertyChanged("UfPercMargLucro");
                }
            }
        }
        private Nullable<decimal> _ufPercMargLucro;
    
        [DataMember]
        public string UfMascInscEst
        {
            get { return _ufMascInscEst; }
            set
            {
                if (_ufMascInscEst != value)
                {
                    _ufMascInscEst = value;
                    OnPropertyChanged("UfMascInscEst");
                }
            }
        }
        private string _ufMascInscEst;
    
        [DataMember]
        public string UfMascInscAgrop
        {
            get { return _ufMascInscAgrop; }
            set
            {
                if (_ufMascInscAgrop != value)
                {
                    _ufMascInscAgrop = value;
                    OnPropertyChanged("UfMascInscAgrop");
                }
            }
        }
        private string _ufMascInscAgrop;
    
        [DataMember]
        public string UfNatur
        {
            get { return _ufNatur; }
            set
            {
                if (_ufNatur != value)
                {
                    _ufNatur = value;
                    OnPropertyChanged("UfNatur");
                }
            }
        }
        private string _ufNatur;
    
        [DataMember]
        public string UfCepCapDe1
        {
            get { return _ufCepCapDe1; }
            set
            {
                if (_ufCepCapDe1 != value)
                {
                    _ufCepCapDe1 = value;
                    OnPropertyChanged("UfCepCapDe1");
                }
            }
        }
        private string _ufCepCapDe1;
    
        [DataMember]
        public string UfCepCapAte1
        {
            get { return _ufCepCapAte1; }
            set
            {
                if (_ufCepCapAte1 != value)
                {
                    _ufCepCapAte1 = value;
                    OnPropertyChanged("UfCepCapAte1");
                }
            }
        }
        private string _ufCepCapAte1;
    
        [DataMember]
        public string UfCepCapDe2
        {
            get { return _ufCepCapDe2; }
            set
            {
                if (_ufCepCapDe2 != value)
                {
                    _ufCepCapDe2 = value;
                    OnPropertyChanged("UfCepCapDe2");
                }
            }
        }
        private string _ufCepCapDe2;
    
        [DataMember]
        public string UfCepCapAte2
        {
            get { return _ufCepCapAte2; }
            set
            {
                if (_ufCepCapAte2 != value)
                {
                    _ufCepCapAte2 = value;
                    OnPropertyChanged("UfCepCapAte2");
                }
            }
        }
        private string _ufCepCapAte2;
    
        [DataMember]
        public string UfCepCapDe3
        {
            get { return _ufCepCapDe3; }
            set
            {
                if (_ufCepCapDe3 != value)
                {
                    _ufCepCapDe3 = value;
                    OnPropertyChanged("UfCepCapDe3");
                }
            }
        }
        private string _ufCepCapDe3;
    
        [DataMember]
        public string UfCepCapAte3
        {
            get { return _ufCepCapAte3; }
            set
            {
                if (_ufCepCapAte3 != value)
                {
                    _ufCepCapAte3 = value;
                    OnPropertyChanged("UfCepCapAte3");
                }
            }
        }
        private string _ufCepCapAte3;
    
        [DataMember]
        public string UfCepCapDe4
        {
            get { return _ufCepCapDe4; }
            set
            {
                if (_ufCepCapDe4 != value)
                {
                    _ufCepCapDe4 = value;
                    OnPropertyChanged("UfCepCapDe4");
                }
            }
        }
        private string _ufCepCapDe4;
    
        [DataMember]
        public string UfCepCapAte4
        {
            get { return _ufCepCapAte4; }
            set
            {
                if (_ufCepCapAte4 != value)
                {
                    _ufCepCapAte4 = value;
                    OnPropertyChanged("UfCepCapAte4");
                }
            }
        }
        private string _ufCepCapAte4;
    
        [DataMember]
        public string UfCepCapDe5
        {
            get { return _ufCepCapDe5; }
            set
            {
                if (_ufCepCapDe5 != value)
                {
                    _ufCepCapDe5 = value;
                    OnPropertyChanged("UfCepCapDe5");
                }
            }
        }
        private string _ufCepCapDe5;
    
        [DataMember]
        public string UfCepCapAte5
        {
            get { return _ufCepCapAte5; }
            set
            {
                if (_ufCepCapAte5 != value)
                {
                    _ufCepCapAte5 = value;
                    OnPropertyChanged("UfCepCapAte5");
                }
            }
        }
        private string _ufCepCapAte5;
    
        [DataMember]
        public string FxaCod
        {
            get { return _fxaCod; }
            set
            {
                if (_fxaCod != value)
                {
                    _fxaCod = value;
                    OnPropertyChanged("FxaCod");
                }
            }
        }
        private string _fxaCod;
    
        [DataMember]
        public string UFEntCodIcms
        {
            get { return _uFEntCodIcms; }
            set
            {
                if (_uFEntCodIcms != value)
                {
                    ChangeTracker.RecordOriginalValue("UFEntCodIcms", _uFEntCodIcms);
                    if (!IsDeserializing)
                    {
                        if (ENTIDADE1 != null && ENTIDADE1.EntCod != value)
                        {
                            ENTIDADE1 = null;
                        }
                    }
                    _uFEntCodIcms = value;
                    OnPropertyChanged("UFEntCodIcms");
                }
            }
        }
        private string _uFEntCodIcms;
    
        [DataMember]
        public string UfDescValIcms
        {
            get { return _ufDescValIcms; }
            set
            {
                if (_ufDescValIcms != value)
                {
                    _ufDescValIcms = value;
                    OnPropertyChanged("UfDescValIcms");
                }
            }
        }
        private string _ufDescValIcms;
    
        [DataMember]
        public Nullable<decimal> USERUFValFreteMedio
        {
            get { return _uSERUFValFreteMedio; }
            set
            {
                if (_uSERUFValFreteMedio != value)
                {
                    _uSERUFValFreteMedio = value;
                    OnPropertyChanged("USERUFValFreteMedio");
                }
            }
        }
        private Nullable<decimal> _uSERUFValFreteMedio;
    
        [DataMember]
        public string UfPathRelGuiaRecIcms
        {
            get { return _ufPathRelGuiaRecIcms; }
            set
            {
                if (_ufPathRelGuiaRecIcms != value)
                {
                    _ufPathRelGuiaRecIcms = value;
                    OnPropertyChanged("UfPathRelGuiaRecIcms");
                }
            }
        }
        private string _ufPathRelGuiaRecIcms;
    
        [DataMember]
        public string UfPathRelGuiaRecIcmsST
        {
            get { return _ufPathRelGuiaRecIcmsST; }
            set
            {
                if (_ufPathRelGuiaRecIcmsST != value)
                {
                    _ufPathRelGuiaRecIcmsST = value;
                    OnPropertyChanged("UfPathRelGuiaRecIcmsST");
                }
            }
        }
        private string _ufPathRelGuiaRecIcmsST;
    
        [DataMember]
        public string UfAderenteSimples
        {
            get { return _ufAderenteSimples; }
            set
            {
                if (_ufAderenteSimples != value)
                {
                    _ufAderenteSimples = value;
                    OnPropertyChanged("UfAderenteSimples");
                }
            }
        }
        private string _ufAderenteSimples;
    
        [DataMember]
        public string UfCodEstGia
        {
            get { return _ufCodEstGia; }
            set
            {
                if (_ufCodEstGia != value)
                {
                    _ufCodEstGia = value;
                    OnPropertyChanged("UfCodEstGia");
                }
            }
        }
        private string _ufCodEstGia;
    
        [DataMember]
        public string UfPossuiRatComplFreteSt
        {
            get { return _ufPossuiRatComplFreteSt; }
            set
            {
                if (_ufPossuiRatComplFreteSt != value)
                {
                    _ufPossuiRatComplFreteSt = value;
                    OnPropertyChanged("UfPossuiRatComplFreteSt");
                }
            }
        }
        private string _ufPossuiRatComplFreteSt;
    
        [DataMember]
        public Nullable<decimal> UfValTxGNRE
        {
            get { return _ufValTxGNRE; }
            set
            {
                if (_ufValTxGNRE != value)
                {
                    _ufValTxGNRE = value;
                    OnPropertyChanged("UfValTxGNRE");
                }
            }
        }
        private Nullable<decimal> _ufValTxGNRE;
    
        [DataMember]
        public string UfCalcFECPST
        {
            get { return _ufCalcFECPST; }
            set
            {
                if (_ufCalcFECPST != value)
                {
                    _ufCalcFECPST = value;
                    OnPropertyChanged("UfCalcFECPST");
                }
            }
        }
        private string _ufCalcFECPST;
    
        [DataMember]
        public string UfCalcFECPDifAliq
        {
            get { return _ufCalcFECPDifAliq; }
            set
            {
                if (_ufCalcFECPDifAliq != value)
                {
                    _ufCalcFECPDifAliq = value;
                    OnPropertyChanged("UfCalcFECPDifAliq");
                }
            }
        }
        private string _ufCalcFECPDifAliq;
    
        [DataMember]
        public string UfCalcFECPIcms
        {
            get { return _ufCalcFECPIcms; }
            set
            {
                if (_ufCalcFECPIcms != value)
                {
                    _ufCalcFECPIcms = value;
                    OnPropertyChanged("UfCalcFECPIcms");
                }
            }
        }
        private string _ufCalcFECPIcms;
    
        [DataMember]
        public string UfDesmNFST
        {
            get { return _ufDesmNFST; }
            set
            {
                if (_ufDesmNFST != value)
                {
                    _ufDesmNFST = value;
                    OnPropertyChanged("UfDesmNFST");
                }
            }
        }
        private string _ufDesmNFST;
    
        [DataMember]
        public string UfUrlConsultSitContrib
        {
            get { return _ufUrlConsultSitContrib; }
            set
            {
                if (_ufUrlConsultSitContrib != value)
                {
                    _ufUrlConsultSitContrib = value;
                    OnPropertyChanged("UfUrlConsultSitContrib");
                }
            }
        }
        private string _ufUrlConsultSitContrib;
    
        [DataMember]
        public string UfUtilIcmsDestCalcST
        {
            get { return _ufUtilIcmsDestCalcST; }
            set
            {
                if (_ufUtilIcmsDestCalcST != value)
                {
                    _ufUtilIcmsDestCalcST = value;
                    OnPropertyChanged("UfUtilIcmsDestCalcST");
                }
            }
        }
        private string _ufUtilIcmsDestCalcST;
    
        [DataMember]
        public string UfUrlConsultProtocNfe
        {
            get { return _ufUrlConsultProtocNfe; }
            set
            {
                if (_ufUrlConsultProtocNfe != value)
                {
                    _ufUrlConsultProtocNfe = value;
                    OnPropertyChanged("UfUrlConsultProtocNfe");
                }
            }
        }
        private string _ufUrlConsultProtocNfe;
    
        [DataMember]
        public Nullable<int> UfPrazoHrCancNFe
        {
            get { return _ufPrazoHrCancNFe; }
            set
            {
                if (_ufPrazoHrCancNFe != value)
                {
                    _ufPrazoHrCancNFe = value;
                    OnPropertyChanged("UfPrazoHrCancNFe");
                }
            }
        }
        private Nullable<int> _ufPrazoHrCancNFe;
    
        [DataMember]
        public string UfAgrupaCte
        {
            get { return _ufAgrupaCte; }
            set
            {
                if (_ufAgrupaCte != value)
                {
                    _ufAgrupaCte = value;
                    OnPropertyChanged("UfAgrupaCte");
                }
            }
        }
        private string _ufAgrupaCte;
    
        [DataMember]
        public string UfUrlRecpEventManifDest
        {
            get { return _ufUrlRecpEventManifDest; }
            set
            {
                if (_ufUrlRecpEventManifDest != value)
                {
                    _ufUrlRecpEventManifDest = value;
                    OnPropertyChanged("UfUrlRecpEventManifDest");
                }
            }
        }
        private string _ufUrlRecpEventManifDest;
    
        [DataMember]
        public string UfUrlNFeConsultDest
        {
            get { return _ufUrlNFeConsultDest; }
            set
            {
                if (_ufUrlNFeConsultDest != value)
                {
                    _ufUrlNFeConsultDest = value;
                    OnPropertyChanged("UfUrlNFeConsultDest");
                }
            }
        }
        private string _ufUrlNFeConsultDest;
    
        [DataMember]
        public string UfUrlNFeDownloadNFe
        {
            get { return _ufUrlNFeDownloadNFe; }
            set
            {
                if (_ufUrlNFeDownloadNFe != value)
                {
                    _ufUrlNFeDownloadNFe = value;
                    OnPropertyChanged("UfUrlNFeDownloadNFe");
                }
            }
        }
        private string _ufUrlNFeDownloadNFe;
    
        [DataMember]
        public string UfCteGerMsfe
        {
            get { return _ufCteGerMsfe; }
            set
            {
                if (_ufCteGerMsfe != value)
                {
                    _ufCteGerMsfe = value;
                    OnPropertyChanged("UfCteGerMsfe");
                }
            }
        }
        private string _ufCteGerMsfe;
    
        [DataMember]
        public string EmpCod
        {
            get { return _empCod; }
            set
            {
                if (_empCod != value)
                {
                    _empCod = value;
                    OnPropertyChanged("EmpCod");
                }
            }
        }
        private string _empCod;
    
        [DataMember]
        public string TabFrtCod
        {
            get { return _tabFrtCod; }
            set
            {
                if (_tabFrtCod != value)
                {
                    _tabFrtCod = value;
                    OnPropertyChanged("TabFrtCod");
                }
            }
        }
        private string _tabFrtCod;
    
        [DataMember]
        public string UfUtilAliqInterCalcICMS
        {
            get { return _ufUtilAliqInterCalcICMS; }
            set
            {
                if (_ufUtilAliqInterCalcICMS != value)
                {
                    _ufUtilAliqInterCalcICMS = value;
                    OnPropertyChanged("UfUtilAliqInterCalcICMS");
                }
            }
        }
        private string _ufUtilAliqInterCalcICMS;
    
        [DataMember]
        public string UfDestICMSSTNFSaida
        {
            get { return _ufDestICMSSTNFSaida; }
            set
            {
                if (_ufDestICMSSTNFSaida != value)
                {
                    _ufDestICMSSTNFSaida = value;
                    OnPropertyChanged("UfDestICMSSTNFSaida");
                }
            }
        }
        private string _ufDestICMSSTNFSaida;
    
        [DataMember]
        public Nullable<decimal> UfLongitudeDecimal
        {
            get { return _ufLongitudeDecimal; }
            set
            {
                if (_ufLongitudeDecimal != value)
                {
                    _ufLongitudeDecimal = value;
                    OnPropertyChanged("UfLongitudeDecimal");
                }
            }
        }
        private Nullable<decimal> _ufLongitudeDecimal;
    
        [DataMember]
        public string UfLongitudePadrao
        {
            get { return _ufLongitudePadrao; }
            set
            {
                if (_ufLongitudePadrao != value)
                {
                    _ufLongitudePadrao = value;
                    OnPropertyChanged("UfLongitudePadrao");
                }
            }
        }
        private string _ufLongitudePadrao;
    
        [DataMember]
        public Nullable<decimal> UfLatitudeDecimal
        {
            get { return _ufLatitudeDecimal; }
            set
            {
                if (_ufLatitudeDecimal != value)
                {
                    _ufLatitudeDecimal = value;
                    OnPropertyChanged("UfLatitudeDecimal");
                }
            }
        }
        private Nullable<decimal> _ufLatitudeDecimal;
    
        [DataMember]
        public string UfLatitudePadrao
        {
            get { return _ufLatitudePadrao; }
            set
            {
                if (_ufLatitudePadrao != value)
                {
                    _ufLatitudePadrao = value;
                    OnPropertyChanged("UfLatitudePadrao");
                }
            }
        }
        private string _ufLatitudePadrao;
    
        [DataMember]
        public string UfVerConsultSitContrib
        {
            get { return _ufVerConsultSitContrib; }
            set
            {
                if (_ufVerConsultSitContrib != value)
                {
                    _ufVerConsultSitContrib = value;
                    OnPropertyChanged("UfVerConsultSitContrib");
                }
            }
        }
        private string _ufVerConsultSitContrib;
    
        [DataMember]
        public string UfConsidDescBaseCalcICMSST
        {
            get { return _ufConsidDescBaseCalcICMSST; }
            set
            {
                if (_ufConsidDescBaseCalcICMSST != value)
                {
                    _ufConsidDescBaseCalcICMSST = value;
                    OnPropertyChanged("UfConsidDescBaseCalcICMSST");
                }
            }
        }
        private string _ufConsidDescBaseCalcICMSST;
    
        [DataMember]
        public string UfCalcDesonICMSPorDentro
        {
            get { return _ufCalcDesonICMSPorDentro; }
            set
            {
                if (_ufCalcDesonICMSPorDentro != value)
                {
                    _ufCalcDesonICMSPorDentro = value;
                    OnPropertyChanged("UfCalcDesonICMSPorDentro");
                }
            }
        }
        private string _ufCalcDesonICMSPorDentro;
    
        [DataMember]
        public string UfCalcDifICMSPorDentro
        {
            get { return _ufCalcDifICMSPorDentro; }
            set
            {
                if (_ufCalcDifICMSPorDentro != value)
                {
                    _ufCalcDifICMSPorDentro = value;
                    OnPropertyChanged("UfCalcDifICMSPorDentro");
                }
            }
        }
        private string _ufCalcDifICMSPorDentro;
    
        [DataMember]
        public string UFURLCTEEVENTO
        {
            get { return _uFURLCTEEVENTO; }
            set
            {
                if (_uFURLCTEEVENTO != value)
                {
                    _uFURLCTEEVENTO = value;
                    OnPropertyChanged("UFURLCTEEVENTO");
                }
            }
        }
        private string _uFURLCTEEVENTO;
    
        [DataMember]
        public string UFCALCDIFALIQ
        {
            get { return _uFCALCDIFALIQ; }
            set
            {
                if (_uFCALCDIFALIQ != value)
                {
                    _uFCALCDIFALIQ = value;
                    OnPropertyChanged("UFCALCDIFALIQ");
                }
            }
        }
        private string _uFCALCDIFALIQ;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<CIDADE> CIDADE
        {
            get
            {
                if (_cIDADE == null)
                {
                    _cIDADE = new TrackableCollection<CIDADE>();
                    _cIDADE.CollectionChanged += FixupCIDADE;
                }
                return _cIDADE;
            }
            set
            {
                if (!ReferenceEquals(_cIDADE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cIDADE != null)
                    {
                        _cIDADE.CollectionChanged -= FixupCIDADE;
                    }
                    _cIDADE = value;
                    if (_cIDADE != null)
                    {
                        _cIDADE.CollectionChanged += FixupCIDADE;
                    }
                    OnNavigationPropertyChanged("CIDADE");
                }
            }
        }
        private TrackableCollection<CIDADE> _cIDADE;
    
        [DataMember]
        public TrackableCollection<EQUIPAMENTO> EQUIPAMENTO
        {
            get
            {
                if (_eQUIPAMENTO == null)
                {
                    _eQUIPAMENTO = new TrackableCollection<EQUIPAMENTO>();
                    _eQUIPAMENTO.CollectionChanged += FixupEQUIPAMENTO;
                }
                return _eQUIPAMENTO;
            }
            set
            {
                if (!ReferenceEquals(_eQUIPAMENTO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_eQUIPAMENTO != null)
                    {
                        _eQUIPAMENTO.CollectionChanged -= FixupEQUIPAMENTO;
                    }
                    _eQUIPAMENTO = value;
                    if (_eQUIPAMENTO != null)
                    {
                        _eQUIPAMENTO.CollectionChanged += FixupEQUIPAMENTO;
                    }
                    OnNavigationPropertyChanged("EQUIPAMENTO");
                }
            }
        }
        private TrackableCollection<EQUIPAMENTO> _eQUIPAMENTO;
    
        [DataMember]
        public TrackableCollection<PED_VENDA1> PED_VENDA1
        {
            get
            {
                if (_pED_VENDA1 == null)
                {
                    _pED_VENDA1 = new TrackableCollection<PED_VENDA1>();
                    _pED_VENDA1.CollectionChanged += FixupPED_VENDA1;
                }
                return _pED_VENDA1;
            }
            set
            {
                if (!ReferenceEquals(_pED_VENDA1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pED_VENDA1 != null)
                    {
                        _pED_VENDA1.CollectionChanged -= FixupPED_VENDA1;
                    }
                    _pED_VENDA1 = value;
                    if (_pED_VENDA1 != null)
                    {
                        _pED_VENDA1.CollectionChanged += FixupPED_VENDA1;
                    }
                    OnNavigationPropertyChanged("PED_VENDA1");
                }
            }
        }
        private TrackableCollection<PED_VENDA1> _pED_VENDA1;
    
        [DataMember]
        public TrackableCollection<PED_VENDA1> PED_VENDA11
        {
            get
            {
                if (_pED_VENDA11 == null)
                {
                    _pED_VENDA11 = new TrackableCollection<PED_VENDA1>();
                    _pED_VENDA11.CollectionChanged += FixupPED_VENDA11;
                }
                return _pED_VENDA11;
            }
            set
            {
                if (!ReferenceEquals(_pED_VENDA11, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pED_VENDA11 != null)
                    {
                        _pED_VENDA11.CollectionChanged -= FixupPED_VENDA11;
                    }
                    _pED_VENDA11 = value;
                    if (_pED_VENDA11 != null)
                    {
                        _pED_VENDA11.CollectionChanged += FixupPED_VENDA11;
                    }
                    OnNavigationPropertyChanged("PED_VENDA11");
                }
            }
        }
        private TrackableCollection<PED_VENDA1> _pED_VENDA11;
    
        [DataMember]
        public ENTIDADE1 ENTIDADE1
        {
            get { return _eNTIDADE1; }
            set
            {
                if (!ReferenceEquals(_eNTIDADE1, value))
                {
                    var previousValue = _eNTIDADE1;
                    _eNTIDADE1 = value;
                    FixupENTIDADE1(previousValue);
                    OnNavigationPropertyChanged("ENTIDADE1");
                }
            }
        }
        private ENTIDADE1 _eNTIDADE1;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            CIDADE.Clear();
            EQUIPAMENTO.Clear();
            PED_VENDA1.Clear();
            PED_VENDA11.Clear();
            ENTIDADE1 = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupENTIDADE1(ENTIDADE1 previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.UNID_FEDERACAO.Contains(this))
            {
                previousValue.UNID_FEDERACAO.Remove(this);
            }
    
            if (ENTIDADE1 != null)
            {
                if (!ENTIDADE1.UNID_FEDERACAO.Contains(this))
                {
                    ENTIDADE1.UNID_FEDERACAO.Add(this);
                }
    
                UFEntCodIcms = ENTIDADE1.EntCod;
            }
            else if (!skipKeys)
            {
                UFEntCodIcms = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ENTIDADE1")
                    && (ChangeTracker.OriginalValues["ENTIDADE1"] == ENTIDADE1))
                {
                    ChangeTracker.OriginalValues.Remove("ENTIDADE1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ENTIDADE1", previousValue);
                }
                if (ENTIDADE1 != null && !ENTIDADE1.ChangeTracker.ChangeTrackingEnabled)
                {
                    ENTIDADE1.StartTracking();
                }
            }
        }
    
        private void FixupCIDADE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CIDADE item in e.NewItems)
                {
                    item.UNID_FEDERACAO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CIDADE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CIDADE item in e.OldItems)
                {
                    if (ReferenceEquals(item.UNID_FEDERACAO, this))
                    {
                        item.UNID_FEDERACAO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CIDADE", item);
                    }
                }
            }
        }
    
        private void FixupEQUIPAMENTO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (EQUIPAMENTO item in e.NewItems)
                {
                    item.UNID_FEDERACAO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("EQUIPAMENTO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EQUIPAMENTO item in e.OldItems)
                {
                    if (ReferenceEquals(item.UNID_FEDERACAO, this))
                    {
                        item.UNID_FEDERACAO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("EQUIPAMENTO", item);
                    }
                }
            }
        }
    
        private void FixupPED_VENDA1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PED_VENDA1 item in e.NewItems)
                {
                    item.UNID_FEDERACAO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PED_VENDA1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PED_VENDA1 item in e.OldItems)
                {
                    if (ReferenceEquals(item.UNID_FEDERACAO, this))
                    {
                        item.UNID_FEDERACAO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PED_VENDA1", item);
                    }
                }
            }
        }
    
        private void FixupPED_VENDA11(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PED_VENDA1 item in e.NewItems)
                {
                    item.UNID_FEDERACAO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PED_VENDA11", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PED_VENDA1 item in e.OldItems)
                {
                    if (ReferenceEquals(item.UNID_FEDERACAO1, this))
                    {
                        item.UNID_FEDERACAO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PED_VENDA11", item);
                    }
                }
            }
        }

        #endregion

    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHylinedoBrasilMobile.Models
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Item_Transf_Ovos_Linha))]
    public partial class Transf_Ovos_Linha: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _iD = value;
                    OnPropertyChanged("ID");
                }
            }
        }
        private int _iD;
    
        [DataMember]
        public string Usuario
        {
            get { return _usuario; }
            set
            {
                if (_usuario != value)
                {
                    _usuario = value;
                    OnPropertyChanged("Usuario");
                }
            }
        }
        private string _usuario;
    
        [DataMember]
        public System.DateTime DataTransf
        {
            get { return _dataTransf; }
            set
            {
                if (_dataTransf != value)
                {
                    _dataTransf = value;
                    OnPropertyChanged("DataTransf");
                }
            }
        }
        private System.DateTime _dataTransf;
    
        [DataMember]
        public string Incubatorio
        {
            get { return _incubatorio; }
            set
            {
                if (_incubatorio != value)
                {
                    _incubatorio = value;
                    OnPropertyChanged("Incubatorio");
                }
            }
        }
        private string _incubatorio;
    
        [DataMember]
        public string Motivo
        {
            get { return _motivo; }
            set
            {
                if (_motivo != value)
                {
                    _motivo = value;
                    OnPropertyChanged("Motivo");
                }
            }
        }
        private string _motivo;
    
        [DataMember]
        public string EmpresaOrigem
        {
            get { return _empresaOrigem; }
            set
            {
                if (_empresaOrigem != value)
                {
                    _empresaOrigem = value;
                    OnPropertyChanged("EmpresaOrigem");
                }
            }
        }
        private string _empresaOrigem;
    
        [DataMember]
        public string EmpresaDestino
        {
            get { return _empresaDestino; }
            set
            {
                if (_empresaDestino != value)
                {
                    _empresaDestino = value;
                    OnPropertyChanged("EmpresaDestino");
                }
            }
        }
        private string _empresaDestino;
    
        [DataMember]
        public string OrderNoCHIC
        {
            get { return _orderNoCHIC; }
            set
            {
                if (_orderNoCHIC != value)
                {
                    _orderNoCHIC = value;
                    OnPropertyChanged("OrderNoCHIC");
                }
            }
        }
        private string _orderNoCHIC;
    
        [DataMember]
        public string OrderNoCHICDestino
        {
            get { return _orderNoCHICDestino; }
            set
            {
                if (_orderNoCHICDestino != value)
                {
                    _orderNoCHICDestino = value;
                    OnPropertyChanged("OrderNoCHICDestino");
                }
            }
        }
        private string _orderNoCHICDestino;
    
        [DataMember]
        public string IncubatorioDestino
        {
            get { return _incubatorioDestino; }
            set
            {
                if (_incubatorioDestino != value)
                {
                    _incubatorioDestino = value;
                    OnPropertyChanged("IncubatorioDestino");
                }
            }
        }
        private string _incubatorioDestino;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<Item_Transf_Ovos_Linha> Item_Transf_Ovos_Linha
        {
            get
            {
                if (_item_Transf_Ovos_Linha == null)
                {
                    _item_Transf_Ovos_Linha = new TrackableCollection<Item_Transf_Ovos_Linha>();
                    _item_Transf_Ovos_Linha.CollectionChanged += FixupItem_Transf_Ovos_Linha;
                }
                return _item_Transf_Ovos_Linha;
            }
            set
            {
                if (!ReferenceEquals(_item_Transf_Ovos_Linha, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_item_Transf_Ovos_Linha != null)
                    {
                        _item_Transf_Ovos_Linha.CollectionChanged -= FixupItem_Transf_Ovos_Linha;
                    }
                    _item_Transf_Ovos_Linha = value;
                    if (_item_Transf_Ovos_Linha != null)
                    {
                        _item_Transf_Ovos_Linha.CollectionChanged += FixupItem_Transf_Ovos_Linha;
                    }
                    OnNavigationPropertyChanged("Item_Transf_Ovos_Linha");
                }
            }
        }
        private TrackableCollection<Item_Transf_Ovos_Linha> _item_Transf_Ovos_Linha;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Item_Transf_Ovos_Linha.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupItem_Transf_Ovos_Linha(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Item_Transf_Ovos_Linha item in e.NewItems)
                {
                    item.Transf_Ovos_Linha = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Item_Transf_Ovos_Linha", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Item_Transf_Ovos_Linha item in e.OldItems)
                {
                    if (ReferenceEquals(item.Transf_Ovos_Linha, this))
                    {
                        item.Transf_Ovos_Linha = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Item_Transf_Ovos_Linha", item);
                    }
                }
            }
        }

        #endregion

    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHylinedoBrasilMobile.Models
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Servicos_Pedido_Venda))]
    [KnownType(typeof(Vacinas_Primaria_Pedido_Venda))]
    public partial class Pedido_Venda: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _iD = value;
                    OnPropertyChanged("ID");
                }
            }
        }
        private int _iD;
    
        [DataMember]
        public string CodigoCliente
        {
            get { return _codigoCliente; }
            set
            {
                if (_codigoCliente != value)
                {
                    _codigoCliente = value;
                    OnPropertyChanged("CodigoCliente");
                }
            }
        }
        private string _codigoCliente;
    
        [DataMember]
        public System.DateTime DataPedido
        {
            get { return _dataPedido; }
            set
            {
                if (_dataPedido != value)
                {
                    _dataPedido = value;
                    OnPropertyChanged("DataPedido");
                }
            }
        }
        private System.DateTime _dataPedido;
    
        [DataMember]
        public string Usuario
        {
            get { return _usuario; }
            set
            {
                if (_usuario != value)
                {
                    _usuario = value;
                    OnPropertyChanged("Usuario");
                }
            }
        }
        private string _usuario;
    
        [DataMember]
        public System.DateTime DataHora
        {
            get { return _dataHora; }
            set
            {
                if (_dataHora != value)
                {
                    _dataHora = value;
                    OnPropertyChanged("DataHora");
                }
            }
        }
        private System.DateTime _dataHora;
    
        [DataMember]
        public int OvosBrasil
        {
            get { return _ovosBrasil; }
            set
            {
                if (_ovosBrasil != value)
                {
                    _ovosBrasil = value;
                    OnPropertyChanged("OvosBrasil");
                }
            }
        }
        private int _ovosBrasil;
    
        [DataMember]
        public string CondicaoPagamento
        {
            get { return _condicaoPagamento; }
            set
            {
                if (_condicaoPagamento != value)
                {
                    _condicaoPagamento = value;
                    OnPropertyChanged("CondicaoPagamento");
                }
            }
        }
        private string _condicaoPagamento;
    
        [DataMember]
        public string Observacoes
        {
            get { return _observacoes; }
            set
            {
                if (_observacoes != value)
                {
                    _observacoes = value;
                    OnPropertyChanged("Observacoes");
                }
            }
        }
        private string _observacoes;
    
        [DataMember]
        public string Vendedor
        {
            get { return _vendedor; }
            set
            {
                if (_vendedor != value)
                {
                    _vendedor = value;
                    OnPropertyChanged("Vendedor");
                }
            }
        }
        private string _vendedor;
    
        [DataMember]
        public string Status
        {
            get { return _status; }
            set
            {
                if (_status != value)
                {
                    _status = value;
                    OnPropertyChanged("Status");
                }
            }
        }
        private string _status;
    
        [DataMember]
        public string Empresa
        {
            get { return _empresa; }
            set
            {
                if (_empresa != value)
                {
                    _empresa = value;
                    OnPropertyChanged("Empresa");
                }
            }
        }
        private string _empresa;
    
        [DataMember]
        public string NomeCliente
        {
            get { return _nomeCliente; }
            set
            {
                if (_nomeCliente != value)
                {
                    _nomeCliente = value;
                    OnPropertyChanged("NomeCliente");
                }
            }
        }
        private string _nomeCliente;
    
        [DataMember]
        public string EnviadoVia
        {
            get { return _enviadoVia; }
            set
            {
                if (_enviadoVia != value)
                {
                    _enviadoVia = value;
                    OnPropertyChanged("EnviadoVia");
                }
            }
        }
        private string _enviadoVia;
    
        [DataMember]
        public string AeroportoOrigem
        {
            get { return _aeroportoOrigem; }
            set
            {
                if (_aeroportoOrigem != value)
                {
                    _aeroportoOrigem = value;
                    OnPropertyChanged("AeroportoOrigem");
                }
            }
        }
        private string _aeroportoOrigem;
    
        [DataMember]
        public string AeroportoDestino
        {
            get { return _aeroportoDestino; }
            set
            {
                if (_aeroportoDestino != value)
                {
                    _aeroportoDestino = value;
                    OnPropertyChanged("AeroportoDestino");
                }
            }
        }
        private string _aeroportoDestino;
    
        [DataMember]
        public Nullable<decimal> ValorDocumentacao
        {
            get { return _valorDocumentacao; }
            set
            {
                if (_valorDocumentacao != value)
                {
                    _valorDocumentacao = value;
                    OnPropertyChanged("ValorDocumentacao");
                }
            }
        }
        private Nullable<decimal> _valorDocumentacao;
    
        [DataMember]
        public Nullable<decimal> ValorFrete
        {
            get { return _valorFrete; }
            set
            {
                if (_valorFrete != value)
                {
                    _valorFrete = value;
                    OnPropertyChanged("ValorFrete");
                }
            }
        }
        private Nullable<decimal> _valorFrete;
    
        [DataMember]
        public Nullable<int> NumCaixas
        {
            get { return _numCaixas; }
            set
            {
                if (_numCaixas != value)
                {
                    _numCaixas = value;
                    OnPropertyChanged("NumCaixas");
                }
            }
        }
        private Nullable<int> _numCaixas;
    
        [DataMember]
        public Nullable<System.DateTime> DataEnvio
        {
            get { return _dataEnvio; }
            set
            {
                if (_dataEnvio != value)
                {
                    _dataEnvio = value;
                    OnPropertyChanged("DataEnvio");
                }
            }
        }
        private Nullable<System.DateTime> _dataEnvio;
    
        [DataMember]
        public Nullable<System.DateTime> DataSaidaIncubatorio
        {
            get { return _dataSaidaIncubatorio; }
            set
            {
                if (_dataSaidaIncubatorio != value)
                {
                    _dataSaidaIncubatorio = value;
                    OnPropertyChanged("DataSaidaIncubatorio");
                }
            }
        }
        private Nullable<System.DateTime> _dataSaidaIncubatorio;
    
        [DataMember]
        public string TipoPedido
        {
            get { return _tipoPedido; }
            set
            {
                if (_tipoPedido != value)
                {
                    _tipoPedido = value;
                    OnPropertyChanged("TipoPedido");
                }
            }
        }
        private string _tipoPedido;
    
        [DataMember]
        public Nullable<int> NumPaletes
        {
            get { return _numPaletes; }
            set
            {
                if (_numPaletes != value)
                {
                    _numPaletes = value;
                    OnPropertyChanged("NumPaletes");
                }
            }
        }
        private Nullable<int> _numPaletes;
    
        [DataMember]
        public string NumFatura
        {
            get { return _numFatura; }
            set
            {
                if (_numFatura != value)
                {
                    _numFatura = value;
                    OnPropertyChanged("NumFatura");
                }
            }
        }
        private string _numFatura;
    
        [DataMember]
        public string NumeroVoo
        {
            get { return _numeroVoo; }
            set
            {
                if (_numeroVoo != value)
                {
                    _numeroVoo = value;
                    OnPropertyChanged("NumeroVoo");
                }
            }
        }
        private string _numeroVoo;
    
        [DataMember]
        public string CiaAerea
        {
            get { return _ciaAerea; }
            set
            {
                if (_ciaAerea != value)
                {
                    _ciaAerea = value;
                    OnPropertyChanged("CiaAerea");
                }
            }
        }
        private string _ciaAerea;
    
        [DataMember]
        public string NCM
        {
            get { return _nCM; }
            set
            {
                if (_nCM != value)
                {
                    _nCM = value;
                    OnPropertyChanged("NCM");
                }
            }
        }
        private string _nCM;
    
        [DataMember]
        public string AWB
        {
            get { return _aWB; }
            set
            {
                if (_aWB != value)
                {
                    _aWB = value;
                    OnPropertyChanged("AWB");
                }
            }
        }
        private string _aWB;
    
        [DataMember]
        public Nullable<int> EnderEntSeq
        {
            get { return _enderEntSeq; }
            set
            {
                if (_enderEntSeq != value)
                {
                    _enderEntSeq = value;
                    OnPropertyChanged("EnderEntSeq");
                }
            }
        }
        private Nullable<int> _enderEntSeq;
    
        [DataMember]
        public Nullable<System.DateTime> DataColetaNascimento
        {
            get { return _dataColetaNascimento; }
            set
            {
                if (_dataColetaNascimento != value)
                {
                    _dataColetaNascimento = value;
                    OnPropertyChanged("DataColetaNascimento");
                }
            }
        }
        private Nullable<System.DateTime> _dataColetaNascimento;
    
        [DataMember]
        public string Placa
        {
            get { return _placa; }
            set
            {
                if (_placa != value)
                {
                    _placa = value;
                    OnPropertyChanged("Placa");
                }
            }
        }
        private string _placa;
    
        [DataMember]
        public string Lacre
        {
            get { return _lacre; }
            set
            {
                if (_lacre != value)
                {
                    _lacre = value;
                    OnPropertyChanged("Lacre");
                }
            }
        }
        private string _lacre;
    
        [DataMember]
        public string Motorista
        {
            get { return _motorista; }
            set
            {
                if (_motorista != value)
                {
                    _motorista = value;
                    OnPropertyChanged("Motorista");
                }
            }
        }
        private string _motorista;
    
        [DataMember]
        public string RGMotorista
        {
            get { return _rGMotorista; }
            set
            {
                if (_rGMotorista != value)
                {
                    _rGMotorista = value;
                    OnPropertyChanged("RGMotorista");
                }
            }
        }
        private string _rGMotorista;
    
        [DataMember]
        public string Veterinario
        {
            get { return _veterinario; }
            set
            {
                if (_veterinario != value)
                {
                    _veterinario = value;
                    OnPropertyChanged("Veterinario");
                }
            }
        }
        private string _veterinario;
    
        [DataMember]
        public Nullable<decimal> ValorTotalPintinho
        {
            get { return _valorTotalPintinho; }
            set
            {
                if (_valorTotalPintinho != value)
                {
                    _valorTotalPintinho = value;
                    OnPropertyChanged("ValorTotalPintinho");
                }
            }
        }
        private Nullable<decimal> _valorTotalPintinho;
    
        [DataMember]
        public string Projecao
        {
            get { return _projecao; }
            set
            {
                if (_projecao != value)
                {
                    _projecao = value;
                    OnPropertyChanged("Projecao");
                }
            }
        }
        private string _projecao;
    
        [DataMember]
        public string PedidoPS
        {
            get { return _pedidoPS; }
            set
            {
                if (_pedidoPS != value)
                {
                    _pedidoPS = value;
                    OnPropertyChanged("PedidoPS");
                }
            }
        }
        private string _pedidoPS;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<Servicos_Pedido_Venda> Servicos_Pedido_Venda
        {
            get
            {
                if (_servicos_Pedido_Venda == null)
                {
                    _servicos_Pedido_Venda = new TrackableCollection<Servicos_Pedido_Venda>();
                    _servicos_Pedido_Venda.CollectionChanged += FixupServicos_Pedido_Venda;
                }
                return _servicos_Pedido_Venda;
            }
            set
            {
                if (!ReferenceEquals(_servicos_Pedido_Venda, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_servicos_Pedido_Venda != null)
                    {
                        _servicos_Pedido_Venda.CollectionChanged -= FixupServicos_Pedido_Venda;
                    }
                    _servicos_Pedido_Venda = value;
                    if (_servicos_Pedido_Venda != null)
                    {
                        _servicos_Pedido_Venda.CollectionChanged += FixupServicos_Pedido_Venda;
                    }
                    OnNavigationPropertyChanged("Servicos_Pedido_Venda");
                }
            }
        }
        private TrackableCollection<Servicos_Pedido_Venda> _servicos_Pedido_Venda;
    
        [DataMember]
        public TrackableCollection<Vacinas_Primaria_Pedido_Venda> Vacinas_Primaria_Pedido_Venda
        {
            get
            {
                if (_vacinas_Primaria_Pedido_Venda == null)
                {
                    _vacinas_Primaria_Pedido_Venda = new TrackableCollection<Vacinas_Primaria_Pedido_Venda>();
                    _vacinas_Primaria_Pedido_Venda.CollectionChanged += FixupVacinas_Primaria_Pedido_Venda;
                }
                return _vacinas_Primaria_Pedido_Venda;
            }
            set
            {
                if (!ReferenceEquals(_vacinas_Primaria_Pedido_Venda, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_vacinas_Primaria_Pedido_Venda != null)
                    {
                        _vacinas_Primaria_Pedido_Venda.CollectionChanged -= FixupVacinas_Primaria_Pedido_Venda;
                    }
                    _vacinas_Primaria_Pedido_Venda = value;
                    if (_vacinas_Primaria_Pedido_Venda != null)
                    {
                        _vacinas_Primaria_Pedido_Venda.CollectionChanged += FixupVacinas_Primaria_Pedido_Venda;
                    }
                    OnNavigationPropertyChanged("Vacinas_Primaria_Pedido_Venda");
                }
            }
        }
        private TrackableCollection<Vacinas_Primaria_Pedido_Venda> _vacinas_Primaria_Pedido_Venda;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Servicos_Pedido_Venda.Clear();
            Vacinas_Primaria_Pedido_Venda.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupServicos_Pedido_Venda(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Servicos_Pedido_Venda item in e.NewItems)
                {
                    item.Pedido_Venda = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Servicos_Pedido_Venda", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Servicos_Pedido_Venda item in e.OldItems)
                {
                    if (ReferenceEquals(item.Pedido_Venda, this))
                    {
                        item.Pedido_Venda = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Servicos_Pedido_Venda", item);
                    }
                }
            }
        }
    
        private void FixupVacinas_Primaria_Pedido_Venda(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Vacinas_Primaria_Pedido_Venda item in e.NewItems)
                {
                    item.Pedido_Venda = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Vacinas_Primaria_Pedido_Venda", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Vacinas_Primaria_Pedido_Venda item in e.OldItems)
                {
                    if (ReferenceEquals(item.Pedido_Venda, this))
                    {
                        item.Pedido_Venda = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Vacinas_Primaria_Pedido_Venda", item);
                    }
                }
            }
        }

        #endregion

    }
}

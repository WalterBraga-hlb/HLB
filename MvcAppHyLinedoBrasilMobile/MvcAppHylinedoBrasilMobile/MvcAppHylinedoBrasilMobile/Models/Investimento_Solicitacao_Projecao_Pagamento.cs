//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHylinedoBrasilMobile.Models
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Investimento_Solicitacao))]
    public partial class Investimento_Solicitacao_Projecao_Pagamento: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _iD = value;
                    OnPropertyChanged("ID");
                }
            }
        }
        private int _iD;
    
        [DataMember]
        public int IDInvestimentoSolicitacao
        {
            get { return _iDInvestimentoSolicitacao; }
            set
            {
                if (_iDInvestimentoSolicitacao != value)
                {
                    ChangeTracker.RecordOriginalValue("IDInvestimentoSolicitacao", _iDInvestimentoSolicitacao);
                    if (!IsDeserializing)
                    {
                        if (Investimento_Solicitacao != null && Investimento_Solicitacao.ID != value)
                        {
                            Investimento_Solicitacao = null;
                        }
                    }
                    _iDInvestimentoSolicitacao = value;
                    OnPropertyChanged("IDInvestimentoSolicitacao");
                }
            }
        }
        private int _iDInvestimentoSolicitacao;
    
        [DataMember]
        public int AnoMes
        {
            get { return _anoMes; }
            set
            {
                if (_anoMes != value)
                {
                    _anoMes = value;
                    OnPropertyChanged("AnoMes");
                }
            }
        }
        private int _anoMes;
    
        [DataMember]
        public decimal Valor
        {
            get { return _valor; }
            set
            {
                if (_valor != value)
                {
                    _valor = value;
                    OnPropertyChanged("Valor");
                }
            }
        }
        private decimal _valor;
    
        [DataMember]
        public string OrigemPagamento
        {
            get { return _origemPagamento; }
            set
            {
                if (_origemPagamento != value)
                {
                    _origemPagamento = value;
                    OnPropertyChanged("OrigemPagamento");
                }
            }
        }
        private string _origemPagamento;
    
        [DataMember]
        public string EmpresaOrigemApolo
        {
            get { return _empresaOrigemApolo; }
            set
            {
                if (_empresaOrigemApolo != value)
                {
                    _empresaOrigemApolo = value;
                    OnPropertyChanged("EmpresaOrigemApolo");
                }
            }
        }
        private string _empresaOrigemApolo;
    
        [DataMember]
        public string NumeroOrigemApolo
        {
            get { return _numeroOrigemApolo; }
            set
            {
                if (_numeroOrigemApolo != value)
                {
                    _numeroOrigemApolo = value;
                    OnPropertyChanged("NumeroOrigemApolo");
                }
            }
        }
        private string _numeroOrigemApolo;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public Investimento_Solicitacao Investimento_Solicitacao
        {
            get { return _investimento_Solicitacao; }
            set
            {
                if (!ReferenceEquals(_investimento_Solicitacao, value))
                {
                    var previousValue = _investimento_Solicitacao;
                    _investimento_Solicitacao = value;
                    FixupInvestimento_Solicitacao(previousValue);
                    OnNavigationPropertyChanged("Investimento_Solicitacao");
                }
            }
        }
        private Investimento_Solicitacao _investimento_Solicitacao;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Investimento_Solicitacao = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupInvestimento_Solicitacao(Investimento_Solicitacao previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Investimento_Solicitacao_Projecao_Pagamento.Contains(this))
            {
                previousValue.Investimento_Solicitacao_Projecao_Pagamento.Remove(this);
            }
    
            if (Investimento_Solicitacao != null)
            {
                if (!Investimento_Solicitacao.Investimento_Solicitacao_Projecao_Pagamento.Contains(this))
                {
                    Investimento_Solicitacao.Investimento_Solicitacao_Projecao_Pagamento.Add(this);
                }
    
                IDInvestimentoSolicitacao = Investimento_Solicitacao.ID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Investimento_Solicitacao")
                    && (ChangeTracker.OriginalValues["Investimento_Solicitacao"] == Investimento_Solicitacao))
                {
                    ChangeTracker.OriginalValues.Remove("Investimento_Solicitacao");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Investimento_Solicitacao", previousValue);
                }
                if (Investimento_Solicitacao != null && !Investimento_Solicitacao.ChangeTracker.ChangeTrackingEnabled)
                {
                    Investimento_Solicitacao.StartTracking();
                }
            }
        }

        #endregion

    }
}

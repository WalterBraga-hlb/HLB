//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHylinedoBrasilMobile.Models
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Investimento))]
    [KnownType(typeof(Investimento_Solicitacao_Projecao_Pagamento))]
    [KnownType(typeof(Investimento_Solicitacao_Item))]
    public partial class Investimento_Solicitacao: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _iD = value;
                    OnPropertyChanged("ID");
                }
            }
        }
        private int _iD;
    
        [DataMember]
        public int IDInvestimento
        {
            get { return _iDInvestimento; }
            set
            {
                if (_iDInvestimento != value)
                {
                    ChangeTracker.RecordOriginalValue("IDInvestimento", _iDInvestimento);
                    if (!IsDeserializing)
                    {
                        if (Investimento != null && Investimento.ID != value)
                        {
                            Investimento = null;
                        }
                    }
                    _iDInvestimento = value;
                    OnPropertyChanged("IDInvestimento");
                }
            }
        }
        private int _iDInvestimento;
    
        [DataMember]
        public string NomeProjeto
        {
            get { return _nomeProjeto; }
            set
            {
                if (_nomeProjeto != value)
                {
                    _nomeProjeto = value;
                    OnPropertyChanged("NomeProjeto");
                }
            }
        }
        private string _nomeProjeto;
    
        [DataMember]
        public decimal ValorProjeto
        {
            get { return _valorProjeto; }
            set
            {
                if (_valorProjeto != value)
                {
                    _valorProjeto = value;
                    OnPropertyChanged("ValorProjeto");
                }
            }
        }
        private decimal _valorProjeto;
    
        [DataMember]
        public System.DateTime DataInicio
        {
            get { return _dataInicio; }
            set
            {
                if (_dataInicio != value)
                {
                    _dataInicio = value;
                    OnPropertyChanged("DataInicio");
                }
            }
        }
        private System.DateTime _dataInicio;
    
        [DataMember]
        public System.DateTime DataTermino
        {
            get { return _dataTermino; }
            set
            {
                if (_dataTermino != value)
                {
                    _dataTermino = value;
                    OnPropertyChanged("DataTermino");
                }
            }
        }
        private System.DateTime _dataTermino;
    
        [DataMember]
        public string Motivo
        {
            get { return _motivo; }
            set
            {
                if (_motivo != value)
                {
                    _motivo = value;
                    OnPropertyChanged("Motivo");
                }
            }
        }
        private string _motivo;
    
        [DataMember]
        public string TipoProjeto
        {
            get { return _tipoProjeto; }
            set
            {
                if (_tipoProjeto != value)
                {
                    _tipoProjeto = value;
                    OnPropertyChanged("TipoProjeto");
                }
            }
        }
        private string _tipoProjeto;
    
        [DataMember]
        public System.DateTime InicioFuncionamento
        {
            get { return _inicioFuncionamento; }
            set
            {
                if (_inicioFuncionamento != value)
                {
                    _inicioFuncionamento = value;
                    OnPropertyChanged("InicioFuncionamento");
                }
            }
        }
        private System.DateTime _inicioFuncionamento;
    
        [DataMember]
        public string MotivoInicio
        {
            get { return _motivoInicio; }
            set
            {
                if (_motivoInicio != value)
                {
                    _motivoInicio = value;
                    OnPropertyChanged("MotivoInicio");
                }
            }
        }
        private string _motivoInicio;
    
        [DataMember]
        public string Descricao
        {
            get { return _descricao; }
            set
            {
                if (_descricao != value)
                {
                    _descricao = value;
                    OnPropertyChanged("Descricao");
                }
            }
        }
        private string _descricao;
    
        [DataMember]
        public string Justificativa
        {
            get { return _justificativa; }
            set
            {
                if (_justificativa != value)
                {
                    _justificativa = value;
                    OnPropertyChanged("Justificativa");
                }
            }
        }
        private string _justificativa;
    
        [DataMember]
        public string Alternativas
        {
            get { return _alternativas; }
            set
            {
                if (_alternativas != value)
                {
                    _alternativas = value;
                    OnPropertyChanged("Alternativas");
                }
            }
        }
        private string _alternativas;
    
        [DataMember]
        public string RiscosFatores
        {
            get { return _riscosFatores; }
            set
            {
                if (_riscosFatores != value)
                {
                    _riscosFatores = value;
                    OnPropertyChanged("RiscosFatores");
                }
            }
        }
        private string _riscosFatores;
    
        [DataMember]
        public string Status
        {
            get { return _status; }
            set
            {
                if (_status != value)
                {
                    _status = value;
                    OnPropertyChanged("Status");
                }
            }
        }
        private string _status;
    
        [DataMember]
        public string EmpCod
        {
            get { return _empCod; }
            set
            {
                if (_empCod != value)
                {
                    _empCod = value;
                    OnPropertyChanged("EmpCod");
                }
            }
        }
        private string _empCod;
    
        [DataMember]
        public string ReqCompNum
        {
            get { return _reqCompNum; }
            set
            {
                if (_reqCompNum != value)
                {
                    _reqCompNum = value;
                    OnPropertyChanged("ReqCompNum");
                }
            }
        }
        private string _reqCompNum;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public Investimento Investimento
        {
            get { return _investimento; }
            set
            {
                if (!ReferenceEquals(_investimento, value))
                {
                    var previousValue = _investimento;
                    _investimento = value;
                    FixupInvestimento(previousValue);
                    OnNavigationPropertyChanged("Investimento");
                }
            }
        }
        private Investimento _investimento;
    
        [DataMember]
        public TrackableCollection<Investimento_Solicitacao_Projecao_Pagamento> Investimento_Solicitacao_Projecao_Pagamento
        {
            get
            {
                if (_investimento_Solicitacao_Projecao_Pagamento == null)
                {
                    _investimento_Solicitacao_Projecao_Pagamento = new TrackableCollection<Investimento_Solicitacao_Projecao_Pagamento>();
                    _investimento_Solicitacao_Projecao_Pagamento.CollectionChanged += FixupInvestimento_Solicitacao_Projecao_Pagamento;
                }
                return _investimento_Solicitacao_Projecao_Pagamento;
            }
            set
            {
                if (!ReferenceEquals(_investimento_Solicitacao_Projecao_Pagamento, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_investimento_Solicitacao_Projecao_Pagamento != null)
                    {
                        _investimento_Solicitacao_Projecao_Pagamento.CollectionChanged -= FixupInvestimento_Solicitacao_Projecao_Pagamento;
                    }
                    _investimento_Solicitacao_Projecao_Pagamento = value;
                    if (_investimento_Solicitacao_Projecao_Pagamento != null)
                    {
                        _investimento_Solicitacao_Projecao_Pagamento.CollectionChanged += FixupInvestimento_Solicitacao_Projecao_Pagamento;
                    }
                    OnNavigationPropertyChanged("Investimento_Solicitacao_Projecao_Pagamento");
                }
            }
        }
        private TrackableCollection<Investimento_Solicitacao_Projecao_Pagamento> _investimento_Solicitacao_Projecao_Pagamento;
    
        [DataMember]
        public TrackableCollection<Investimento_Solicitacao_Item> Investimento_Solicitacao_Item
        {
            get
            {
                if (_investimento_Solicitacao_Item == null)
                {
                    _investimento_Solicitacao_Item = new TrackableCollection<Investimento_Solicitacao_Item>();
                    _investimento_Solicitacao_Item.CollectionChanged += FixupInvestimento_Solicitacao_Item;
                }
                return _investimento_Solicitacao_Item;
            }
            set
            {
                if (!ReferenceEquals(_investimento_Solicitacao_Item, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_investimento_Solicitacao_Item != null)
                    {
                        _investimento_Solicitacao_Item.CollectionChanged -= FixupInvestimento_Solicitacao_Item;
                    }
                    _investimento_Solicitacao_Item = value;
                    if (_investimento_Solicitacao_Item != null)
                    {
                        _investimento_Solicitacao_Item.CollectionChanged += FixupInvestimento_Solicitacao_Item;
                    }
                    OnNavigationPropertyChanged("Investimento_Solicitacao_Item");
                }
            }
        }
        private TrackableCollection<Investimento_Solicitacao_Item> _investimento_Solicitacao_Item;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Investimento = null;
            Investimento_Solicitacao_Projecao_Pagamento.Clear();
            Investimento_Solicitacao_Item.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupInvestimento(Investimento previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Investimento_Solicitacao.Contains(this))
            {
                previousValue.Investimento_Solicitacao.Remove(this);
            }
    
            if (Investimento != null)
            {
                if (!Investimento.Investimento_Solicitacao.Contains(this))
                {
                    Investimento.Investimento_Solicitacao.Add(this);
                }
    
                IDInvestimento = Investimento.ID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Investimento")
                    && (ChangeTracker.OriginalValues["Investimento"] == Investimento))
                {
                    ChangeTracker.OriginalValues.Remove("Investimento");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Investimento", previousValue);
                }
                if (Investimento != null && !Investimento.ChangeTracker.ChangeTrackingEnabled)
                {
                    Investimento.StartTracking();
                }
            }
        }
    
        private void FixupInvestimento_Solicitacao_Projecao_Pagamento(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Investimento_Solicitacao_Projecao_Pagamento item in e.NewItems)
                {
                    item.Investimento_Solicitacao = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Investimento_Solicitacao_Projecao_Pagamento", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Investimento_Solicitacao_Projecao_Pagamento item in e.OldItems)
                {
                    if (ReferenceEquals(item.Investimento_Solicitacao, this))
                    {
                        item.Investimento_Solicitacao = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Investimento_Solicitacao_Projecao_Pagamento", item);
                    }
                }
            }
        }
    
        private void FixupInvestimento_Solicitacao_Item(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Investimento_Solicitacao_Item item in e.NewItems)
                {
                    item.Investimento_Solicitacao = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Investimento_Solicitacao_Item", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Investimento_Solicitacao_Item item in e.OldItems)
                {
                    if (ReferenceEquals(item.Investimento_Solicitacao, this))
                    {
                        item.Investimento_Solicitacao = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Investimento_Solicitacao_Item", item);
                    }
                }
            }
        }

        #endregion

    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHylinedoBrasilMobile.Models
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Auditoria_Visita_Requisito))]
    public partial class Auditoria_Requisito: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _iD = value;
                    OnPropertyChanged("ID");
                }
            }
        }
        private int _iD;
    
        [DataMember]
        public string Grupo
        {
            get { return _grupo; }
            set
            {
                if (_grupo != value)
                {
                    _grupo = value;
                    OnPropertyChanged("Grupo");
                }
            }
        }
        private string _grupo;
    
        [DataMember]
        public string Codigo
        {
            get { return _codigo; }
            set
            {
                if (_codigo != value)
                {
                    _codigo = value;
                    OnPropertyChanged("Codigo");
                }
            }
        }
        private string _codigo;
    
        [DataMember]
        public string Descricao
        {
            get { return _descricao; }
            set
            {
                if (_descricao != value)
                {
                    _descricao = value;
                    OnPropertyChanged("Descricao");
                }
            }
        }
        private string _descricao;
    
        [DataMember]
        public string TipoUnidade
        {
            get { return _tipoUnidade; }
            set
            {
                if (_tipoUnidade != value)
                {
                    _tipoUnidade = value;
                    OnPropertyChanged("TipoUnidade");
                }
            }
        }
        private string _tipoUnidade;
    
        [DataMember]
        public string Usuario
        {
            get { return _usuario; }
            set
            {
                if (_usuario != value)
                {
                    _usuario = value;
                    OnPropertyChanged("Usuario");
                }
            }
        }
        private string _usuario;
    
        [DataMember]
        public System.DateTime DataHoraCadastro
        {
            get { return _dataHoraCadastro; }
            set
            {
                if (_dataHoraCadastro != value)
                {
                    _dataHoraCadastro = value;
                    OnPropertyChanged("DataHoraCadastro");
                }
            }
        }
        private System.DateTime _dataHoraCadastro;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<Auditoria_Visita_Requisito> Auditoria_Visita_Requisito
        {
            get
            {
                if (_auditoria_Visita_Requisito == null)
                {
                    _auditoria_Visita_Requisito = new TrackableCollection<Auditoria_Visita_Requisito>();
                    _auditoria_Visita_Requisito.CollectionChanged += FixupAuditoria_Visita_Requisito;
                }
                return _auditoria_Visita_Requisito;
            }
            set
            {
                if (!ReferenceEquals(_auditoria_Visita_Requisito, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_auditoria_Visita_Requisito != null)
                    {
                        _auditoria_Visita_Requisito.CollectionChanged -= FixupAuditoria_Visita_Requisito;
                    }
                    _auditoria_Visita_Requisito = value;
                    if (_auditoria_Visita_Requisito != null)
                    {
                        _auditoria_Visita_Requisito.CollectionChanged += FixupAuditoria_Visita_Requisito;
                    }
                    OnNavigationPropertyChanged("Auditoria_Visita_Requisito");
                }
            }
        }
        private TrackableCollection<Auditoria_Visita_Requisito> _auditoria_Visita_Requisito;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Auditoria_Visita_Requisito.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupAuditoria_Visita_Requisito(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Auditoria_Visita_Requisito item in e.NewItems)
                {
                    item.Auditoria_Requisito = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Auditoria_Visita_Requisito", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Auditoria_Visita_Requisito item in e.OldItems)
                {
                    if (ReferenceEquals(item.Auditoria_Requisito, this))
                    {
                        item.Auditoria_Requisito = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Auditoria_Visita_Requisito", item);
                    }
                }
            }
        }

        #endregion

    }
}

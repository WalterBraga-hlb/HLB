//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace MvcAppHylinedoBrasilMobile.Models {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("FLIPDataSetMobile")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class FLIPDataSetMobile : global::System.Data.DataSet {
        
        private FLOCKSMobileDataTable tableFLOCKSMobile;
        
        private FLOCK_DATAMobileDataTable tableFLOCK_DATAMobile;
        
        private FLOCKSFarmsDataTable tableFLOCKSFarms;
        
        private HATCHERY_CODESDataTable tableHATCHERY_CODES;
        
        private DATA_FECH_LANCDataTable tableDATA_FECH_LANC;
        
        private global::System.Data.DataRelation relationFLOCK_DATA_FK;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public FLIPDataSetMobile() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected FLIPDataSetMobile(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["FLOCKSMobile"] != null)) {
                    base.Tables.Add(new FLOCKSMobileDataTable(ds.Tables["FLOCKSMobile"]));
                }
                if ((ds.Tables["FLOCK_DATAMobile"] != null)) {
                    base.Tables.Add(new FLOCK_DATAMobileDataTable(ds.Tables["FLOCK_DATAMobile"]));
                }
                if ((ds.Tables["FLOCKSFarms"] != null)) {
                    base.Tables.Add(new FLOCKSFarmsDataTable(ds.Tables["FLOCKSFarms"]));
                }
                if ((ds.Tables["HATCHERY_CODES"] != null)) {
                    base.Tables.Add(new HATCHERY_CODESDataTable(ds.Tables["HATCHERY_CODES"]));
                }
                if ((ds.Tables["DATA_FECH_LANC"] != null)) {
                    base.Tables.Add(new DATA_FECH_LANCDataTable(ds.Tables["DATA_FECH_LANC"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FLOCKSMobileDataTable FLOCKSMobile {
            get {
                return this.tableFLOCKSMobile;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FLOCK_DATAMobileDataTable FLOCK_DATAMobile {
            get {
                return this.tableFLOCK_DATAMobile;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FLOCKSFarmsDataTable FLOCKSFarms {
            get {
                return this.tableFLOCKSFarms;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HATCHERY_CODESDataTable HATCHERY_CODES {
            get {
                return this.tableHATCHERY_CODES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DATA_FECH_LANCDataTable DATA_FECH_LANC {
            get {
                return this.tableDATA_FECH_LANC;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            FLIPDataSetMobile cln = ((FLIPDataSetMobile)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["FLOCKSMobile"] != null)) {
                    base.Tables.Add(new FLOCKSMobileDataTable(ds.Tables["FLOCKSMobile"]));
                }
                if ((ds.Tables["FLOCK_DATAMobile"] != null)) {
                    base.Tables.Add(new FLOCK_DATAMobileDataTable(ds.Tables["FLOCK_DATAMobile"]));
                }
                if ((ds.Tables["FLOCKSFarms"] != null)) {
                    base.Tables.Add(new FLOCKSFarmsDataTable(ds.Tables["FLOCKSFarms"]));
                }
                if ((ds.Tables["HATCHERY_CODES"] != null)) {
                    base.Tables.Add(new HATCHERY_CODESDataTable(ds.Tables["HATCHERY_CODES"]));
                }
                if ((ds.Tables["DATA_FECH_LANC"] != null)) {
                    base.Tables.Add(new DATA_FECH_LANCDataTable(ds.Tables["DATA_FECH_LANC"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableFLOCKSMobile = ((FLOCKSMobileDataTable)(base.Tables["FLOCKSMobile"]));
            if ((initTable == true)) {
                if ((this.tableFLOCKSMobile != null)) {
                    this.tableFLOCKSMobile.InitVars();
                }
            }
            this.tableFLOCK_DATAMobile = ((FLOCK_DATAMobileDataTable)(base.Tables["FLOCK_DATAMobile"]));
            if ((initTable == true)) {
                if ((this.tableFLOCK_DATAMobile != null)) {
                    this.tableFLOCK_DATAMobile.InitVars();
                }
            }
            this.tableFLOCKSFarms = ((FLOCKSFarmsDataTable)(base.Tables["FLOCKSFarms"]));
            if ((initTable == true)) {
                if ((this.tableFLOCKSFarms != null)) {
                    this.tableFLOCKSFarms.InitVars();
                }
            }
            this.tableHATCHERY_CODES = ((HATCHERY_CODESDataTable)(base.Tables["HATCHERY_CODES"]));
            if ((initTable == true)) {
                if ((this.tableHATCHERY_CODES != null)) {
                    this.tableHATCHERY_CODES.InitVars();
                }
            }
            this.tableDATA_FECH_LANC = ((DATA_FECH_LANCDataTable)(base.Tables["DATA_FECH_LANC"]));
            if ((initTable == true)) {
                if ((this.tableDATA_FECH_LANC != null)) {
                    this.tableDATA_FECH_LANC.InitVars();
                }
            }
            this.relationFLOCK_DATA_FK = this.Relations["FLOCK_DATA_FK"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "FLIPDataSetMobile";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/FLIPDataSetMobile.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableFLOCKSMobile = new FLOCKSMobileDataTable();
            base.Tables.Add(this.tableFLOCKSMobile);
            this.tableFLOCK_DATAMobile = new FLOCK_DATAMobileDataTable();
            base.Tables.Add(this.tableFLOCK_DATAMobile);
            this.tableFLOCKSFarms = new FLOCKSFarmsDataTable();
            base.Tables.Add(this.tableFLOCKSFarms);
            this.tableHATCHERY_CODES = new HATCHERY_CODESDataTable();
            base.Tables.Add(this.tableHATCHERY_CODES);
            this.tableDATA_FECH_LANC = new DATA_FECH_LANCDataTable();
            base.Tables.Add(this.tableDATA_FECH_LANC);
            this.relationFLOCK_DATA_FK = new global::System.Data.DataRelation("FLOCK_DATA_FK", new global::System.Data.DataColumn[] {
                        this.tableFLOCKSMobile.COMPANYColumn,
                        this.tableFLOCKSMobile.REGIONColumn,
                        this.tableFLOCKSMobile.LOCATIONColumn,
                        this.tableFLOCKSMobile.FARM_IDColumn,
                        this.tableFLOCKSMobile.FLOCK_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableFLOCK_DATAMobile.COMPANYColumn,
                        this.tableFLOCK_DATAMobile.REGIONColumn,
                        this.tableFLOCK_DATAMobile.LOCATIONColumn,
                        this.tableFLOCK_DATAMobile.FARM_IDColumn,
                        this.tableFLOCK_DATAMobile.FLOCK_IDColumn}, false);
            this.Relations.Add(this.relationFLOCK_DATA_FK);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeFLOCKSMobile() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeFLOCK_DATAMobile() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeFLOCKSFarms() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeHATCHERY_CODES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeDATA_FECH_LANC() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            FLIPDataSetMobile ds = new FLIPDataSetMobile();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void FLOCKSMobileRowChangeEventHandler(object sender, FLOCKSMobileRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void FLOCK_DATAMobileRowChangeEventHandler(object sender, FLOCK_DATAMobileRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void FLOCKSFarmsRowChangeEventHandler(object sender, FLOCKSFarmsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void HATCHERY_CODESRowChangeEventHandler(object sender, HATCHERY_CODESRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void DATA_FECH_LANCRowChangeEventHandler(object sender, DATA_FECH_LANCRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FLOCKSMobileDataTable : global::System.Data.TypedTableBase<FLOCKSMobileRow> {
            
            private global::System.Data.DataColumn columnCOMPANY;
            
            private global::System.Data.DataColumn columnREGION;
            
            private global::System.Data.DataColumn columnLOCATION;
            
            private global::System.Data.DataColumn columnFARM_ID;
            
            private global::System.Data.DataColumn columnACTIVE;
            
            private global::System.Data.DataColumn columnFLOCK_ID;
            
            private global::System.Data.DataColumn columnPULLET_ID;
            
            private global::System.Data.DataColumn columnVARIETY;
            
            private global::System.Data.DataColumn columnGEN;
            
            private global::System.Data.DataColumn columnHATCH_DATE;
            
            private global::System.Data.DataColumn columnMOVE_DATE;
            
            private global::System.Data.DataColumn columnSELL_DATE;
            
            private global::System.Data.DataColumn columnHENS_HATCHED;
            
            private global::System.Data.DataColumn columnHENS_MOVED;
            
            private global::System.Data.DataColumn columnHENS_SOLD;
            
            private global::System.Data.DataColumn columnMALES_HATCHED;
            
            private global::System.Data.DataColumn columnMALES_MOVED;
            
            private global::System.Data.DataColumn columnMALES_SOLD;
            
            private global::System.Data.DataColumn columnPULLET_HEN_FC;
            
            private global::System.Data.DataColumn columnFLOCK_KEY;
            
            private global::System.Data.DataColumn columnTEXT_1;
            
            private global::System.Data.DataColumn columnNUM_1;
            
            private global::System.Data.DataColumn columnDATE_1;
            
            private global::System.Data.DataColumn columnTEXT_2;
            
            private global::System.Data.DataColumn columnNUM_2;
            
            private global::System.Data.DataColumn columnDATE_2;
            
            private global::System.Data.DataColumn columnFARM_KEY;
            
            private global::System.Data.DataColumn columnTEXT_3;
            
            private global::System.Data.DataColumn columnNUM_3;
            
            private global::System.Data.DataColumn columnTEXT_4;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FLOCKSMobileDataTable() {
                this.TableName = "FLOCKSMobile";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal FLOCKSMobileDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected FLOCKSMobileDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COMPANYColumn {
                get {
                    return this.columnCOMPANY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REGIONColumn {
                get {
                    return this.columnREGION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LOCATIONColumn {
                get {
                    return this.columnLOCATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FARM_IDColumn {
                get {
                    return this.columnFARM_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACTIVEColumn {
                get {
                    return this.columnACTIVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FLOCK_IDColumn {
                get {
                    return this.columnFLOCK_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PULLET_IDColumn {
                get {
                    return this.columnPULLET_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn VARIETYColumn {
                get {
                    return this.columnVARIETY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GENColumn {
                get {
                    return this.columnGEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HATCH_DATEColumn {
                get {
                    return this.columnHATCH_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MOVE_DATEColumn {
                get {
                    return this.columnMOVE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SELL_DATEColumn {
                get {
                    return this.columnSELL_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HENS_HATCHEDColumn {
                get {
                    return this.columnHENS_HATCHED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HENS_MOVEDColumn {
                get {
                    return this.columnHENS_MOVED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HENS_SOLDColumn {
                get {
                    return this.columnHENS_SOLD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MALES_HATCHEDColumn {
                get {
                    return this.columnMALES_HATCHED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MALES_MOVEDColumn {
                get {
                    return this.columnMALES_MOVED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MALES_SOLDColumn {
                get {
                    return this.columnMALES_SOLD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PULLET_HEN_FCColumn {
                get {
                    return this.columnPULLET_HEN_FC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FLOCK_KEYColumn {
                get {
                    return this.columnFLOCK_KEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TEXT_1Column {
                get {
                    return this.columnTEXT_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NUM_1Column {
                get {
                    return this.columnNUM_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATE_1Column {
                get {
                    return this.columnDATE_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TEXT_2Column {
                get {
                    return this.columnTEXT_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NUM_2Column {
                get {
                    return this.columnNUM_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATE_2Column {
                get {
                    return this.columnDATE_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FARM_KEYColumn {
                get {
                    return this.columnFARM_KEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TEXT_3Column {
                get {
                    return this.columnTEXT_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NUM_3Column {
                get {
                    return this.columnNUM_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TEXT_4Column {
                get {
                    return this.columnTEXT_4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FLOCKSMobileRow this[int index] {
                get {
                    return ((FLOCKSMobileRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FLOCKSMobileRowChangeEventHandler FLOCKSMobileRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FLOCKSMobileRowChangeEventHandler FLOCKSMobileRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FLOCKSMobileRowChangeEventHandler FLOCKSMobileRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FLOCKSMobileRowChangeEventHandler FLOCKSMobileRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddFLOCKSMobileRow(FLOCKSMobileRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FLOCKSMobileRow AddFLOCKSMobileRow(
                        string COMPANY, 
                        string REGION, 
                        string LOCATION, 
                        string FARM_ID, 
                        decimal ACTIVE, 
                        string FLOCK_ID, 
                        string PULLET_ID, 
                        string VARIETY, 
                        decimal GEN, 
                        System.DateTime HATCH_DATE, 
                        System.DateTime MOVE_DATE, 
                        System.DateTime SELL_DATE, 
                        decimal HENS_HATCHED, 
                        decimal HENS_MOVED, 
                        decimal HENS_SOLD, 
                        decimal MALES_HATCHED, 
                        decimal MALES_MOVED, 
                        decimal MALES_SOLD, 
                        decimal PULLET_HEN_FC, 
                        string FLOCK_KEY, 
                        string TEXT_1, 
                        decimal NUM_1, 
                        System.DateTime DATE_1, 
                        string TEXT_2, 
                        decimal NUM_2, 
                        System.DateTime DATE_2, 
                        string FARM_KEY, 
                        string TEXT_3, 
                        decimal NUM_3, 
                        string TEXT_4) {
                FLOCKSMobileRow rowFLOCKSMobileRow = ((FLOCKSMobileRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        COMPANY,
                        REGION,
                        LOCATION,
                        FARM_ID,
                        ACTIVE,
                        FLOCK_ID,
                        PULLET_ID,
                        VARIETY,
                        GEN,
                        HATCH_DATE,
                        MOVE_DATE,
                        SELL_DATE,
                        HENS_HATCHED,
                        HENS_MOVED,
                        HENS_SOLD,
                        MALES_HATCHED,
                        MALES_MOVED,
                        MALES_SOLD,
                        PULLET_HEN_FC,
                        FLOCK_KEY,
                        TEXT_1,
                        NUM_1,
                        DATE_1,
                        TEXT_2,
                        NUM_2,
                        DATE_2,
                        FARM_KEY,
                        TEXT_3,
                        NUM_3,
                        TEXT_4};
                rowFLOCKSMobileRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFLOCKSMobileRow);
                return rowFLOCKSMobileRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FLOCKSMobileRow FindByCOMPANYREGIONLOCATIONFARM_IDFLOCK_ID(string COMPANY, string REGION, string LOCATION, string FARM_ID, string FLOCK_ID) {
                return ((FLOCKSMobileRow)(this.Rows.Find(new object[] {
                            COMPANY,
                            REGION,
                            LOCATION,
                            FARM_ID,
                            FLOCK_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FLOCKSMobileDataTable cln = ((FLOCKSMobileDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FLOCKSMobileDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnCOMPANY = base.Columns["COMPANY"];
                this.columnREGION = base.Columns["REGION"];
                this.columnLOCATION = base.Columns["LOCATION"];
                this.columnFARM_ID = base.Columns["FARM_ID"];
                this.columnACTIVE = base.Columns["ACTIVE"];
                this.columnFLOCK_ID = base.Columns["FLOCK_ID"];
                this.columnPULLET_ID = base.Columns["PULLET_ID"];
                this.columnVARIETY = base.Columns["VARIETY"];
                this.columnGEN = base.Columns["GEN"];
                this.columnHATCH_DATE = base.Columns["HATCH_DATE"];
                this.columnMOVE_DATE = base.Columns["MOVE_DATE"];
                this.columnSELL_DATE = base.Columns["SELL_DATE"];
                this.columnHENS_HATCHED = base.Columns["HENS_HATCHED"];
                this.columnHENS_MOVED = base.Columns["HENS_MOVED"];
                this.columnHENS_SOLD = base.Columns["HENS_SOLD"];
                this.columnMALES_HATCHED = base.Columns["MALES_HATCHED"];
                this.columnMALES_MOVED = base.Columns["MALES_MOVED"];
                this.columnMALES_SOLD = base.Columns["MALES_SOLD"];
                this.columnPULLET_HEN_FC = base.Columns["PULLET_HEN_FC"];
                this.columnFLOCK_KEY = base.Columns["FLOCK_KEY"];
                this.columnTEXT_1 = base.Columns["TEXT_1"];
                this.columnNUM_1 = base.Columns["NUM_1"];
                this.columnDATE_1 = base.Columns["DATE_1"];
                this.columnTEXT_2 = base.Columns["TEXT_2"];
                this.columnNUM_2 = base.Columns["NUM_2"];
                this.columnDATE_2 = base.Columns["DATE_2"];
                this.columnFARM_KEY = base.Columns["FARM_KEY"];
                this.columnTEXT_3 = base.Columns["TEXT_3"];
                this.columnNUM_3 = base.Columns["NUM_3"];
                this.columnTEXT_4 = base.Columns["TEXT_4"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnCOMPANY = new global::System.Data.DataColumn("COMPANY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY);
                this.columnREGION = new global::System.Data.DataColumn("REGION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREGION);
                this.columnLOCATION = new global::System.Data.DataColumn("LOCATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION);
                this.columnFARM_ID = new global::System.Data.DataColumn("FARM_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFARM_ID);
                this.columnACTIVE = new global::System.Data.DataColumn("ACTIVE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACTIVE);
                this.columnFLOCK_ID = new global::System.Data.DataColumn("FLOCK_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLOCK_ID);
                this.columnPULLET_ID = new global::System.Data.DataColumn("PULLET_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPULLET_ID);
                this.columnVARIETY = new global::System.Data.DataColumn("VARIETY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVARIETY);
                this.columnGEN = new global::System.Data.DataColumn("GEN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGEN);
                this.columnHATCH_DATE = new global::System.Data.DataColumn("HATCH_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHATCH_DATE);
                this.columnMOVE_DATE = new global::System.Data.DataColumn("MOVE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOVE_DATE);
                this.columnSELL_DATE = new global::System.Data.DataColumn("SELL_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSELL_DATE);
                this.columnHENS_HATCHED = new global::System.Data.DataColumn("HENS_HATCHED", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHENS_HATCHED);
                this.columnHENS_MOVED = new global::System.Data.DataColumn("HENS_MOVED", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHENS_MOVED);
                this.columnHENS_SOLD = new global::System.Data.DataColumn("HENS_SOLD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHENS_SOLD);
                this.columnMALES_HATCHED = new global::System.Data.DataColumn("MALES_HATCHED", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMALES_HATCHED);
                this.columnMALES_MOVED = new global::System.Data.DataColumn("MALES_MOVED", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMALES_MOVED);
                this.columnMALES_SOLD = new global::System.Data.DataColumn("MALES_SOLD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMALES_SOLD);
                this.columnPULLET_HEN_FC = new global::System.Data.DataColumn("PULLET_HEN_FC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPULLET_HEN_FC);
                this.columnFLOCK_KEY = new global::System.Data.DataColumn("FLOCK_KEY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLOCK_KEY);
                this.columnTEXT_1 = new global::System.Data.DataColumn("TEXT_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEXT_1);
                this.columnNUM_1 = new global::System.Data.DataColumn("NUM_1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_1);
                this.columnDATE_1 = new global::System.Data.DataColumn("DATE_1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_1);
                this.columnTEXT_2 = new global::System.Data.DataColumn("TEXT_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEXT_2);
                this.columnNUM_2 = new global::System.Data.DataColumn("NUM_2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_2);
                this.columnDATE_2 = new global::System.Data.DataColumn("DATE_2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_2);
                this.columnFARM_KEY = new global::System.Data.DataColumn("FARM_KEY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFARM_KEY);
                this.columnTEXT_3 = new global::System.Data.DataColumn("TEXT_3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEXT_3);
                this.columnNUM_3 = new global::System.Data.DataColumn("NUM_3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_3);
                this.columnTEXT_4 = new global::System.Data.DataColumn("TEXT_4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEXT_4);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCOMPANY,
                                this.columnREGION,
                                this.columnLOCATION,
                                this.columnFARM_ID,
                                this.columnFLOCK_ID}, true));
                this.columnCOMPANY.AllowDBNull = false;
                this.columnCOMPANY.MaxLength = 4;
                this.columnREGION.AllowDBNull = false;
                this.columnREGION.MaxLength = 2;
                this.columnLOCATION.AllowDBNull = false;
                this.columnLOCATION.MaxLength = 2;
                this.columnFARM_ID.AllowDBNull = false;
                this.columnFARM_ID.MaxLength = 5;
                this.columnACTIVE.AllowDBNull = false;
                this.columnFLOCK_ID.AllowDBNull = false;
                this.columnFLOCK_ID.MaxLength = 20;
                this.columnPULLET_ID.MaxLength = 20;
                this.columnVARIETY.MaxLength = 10;
                this.columnFLOCK_KEY.MaxLength = 33;
                this.columnTEXT_1.MaxLength = 20;
                this.columnTEXT_2.MaxLength = 20;
                this.columnFARM_KEY.MaxLength = 13;
                this.columnTEXT_3.MaxLength = 200;
                this.columnTEXT_4.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FLOCKSMobileRow NewFLOCKSMobileRow() {
                return ((FLOCKSMobileRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FLOCKSMobileRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FLOCKSMobileRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FLOCKSMobileRowChanged != null)) {
                    this.FLOCKSMobileRowChanged(this, new FLOCKSMobileRowChangeEvent(((FLOCKSMobileRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FLOCKSMobileRowChanging != null)) {
                    this.FLOCKSMobileRowChanging(this, new FLOCKSMobileRowChangeEvent(((FLOCKSMobileRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FLOCKSMobileRowDeleted != null)) {
                    this.FLOCKSMobileRowDeleted(this, new FLOCKSMobileRowChangeEvent(((FLOCKSMobileRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FLOCKSMobileRowDeleting != null)) {
                    this.FLOCKSMobileRowDeleting(this, new FLOCKSMobileRowChangeEvent(((FLOCKSMobileRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveFLOCKSMobileRow(FLOCKSMobileRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FLIPDataSetMobile ds = new FLIPDataSetMobile();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FLOCKSMobileDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FLOCK_DATAMobileDataTable : global::System.Data.TypedTableBase<FLOCK_DATAMobileRow> {
            
            private global::System.Data.DataColumn columnCOMPANY;
            
            private global::System.Data.DataColumn columnREGION;
            
            private global::System.Data.DataColumn columnLOCATION;
            
            private global::System.Data.DataColumn columnFARM_ID;
            
            private global::System.Data.DataColumn columnFLOCK_ID;
            
            private global::System.Data.DataColumn columnACTIVE;
            
            private global::System.Data.DataColumn columnTRX_DATE;
            
            private global::System.Data.DataColumn columnAGE;
            
            private global::System.Data.DataColumn columnHEN_MORT;
            
            private global::System.Data.DataColumn columnHEN_WT;
            
            private global::System.Data.DataColumn columnMALE_MORT;
            
            private global::System.Data.DataColumn columnHEN_FEED_DEL;
            
            private global::System.Data.DataColumn columnTOTAL_EGGS_PROD;
            
            private global::System.Data.DataColumn columnEGG_WT;
            
            private global::System.Data.DataColumn columnFLOCK_KEY;
            
            private global::System.Data.DataColumn columnDATE_1;
            
            private global::System.Data.DataColumn columnDATE_2;
            
            private global::System.Data.DataColumn columnTEXT_1;
            
            private global::System.Data.DataColumn columnTEXT_2;
            
            private global::System.Data.DataColumn columnNUM_1;
            
            private global::System.Data.DataColumn columnNUM_2;
            
            private global::System.Data.DataColumn columnNUM_3;
            
            private global::System.Data.DataColumn columnNUM_4;
            
            private global::System.Data.DataColumn columnNUM_5;
            
            private global::System.Data.DataColumn columnNUM_6;
            
            private global::System.Data.DataColumn columnNUM_7;
            
            private global::System.Data.DataColumn columnNUM_8;
            
            private global::System.Data.DataColumn columnNUM_9;
            
            private global::System.Data.DataColumn columnNUM_10;
            
            private global::System.Data.DataColumn columnNUM_11;
            
            private global::System.Data.DataColumn columnNUM_12;
            
            private global::System.Data.DataColumn columnNUM_13;
            
            private global::System.Data.DataColumn columnTEXT_3;
            
            private global::System.Data.DataColumn columnNUM_14;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FLOCK_DATAMobileDataTable() {
                this.TableName = "FLOCK_DATAMobile";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal FLOCK_DATAMobileDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected FLOCK_DATAMobileDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COMPANYColumn {
                get {
                    return this.columnCOMPANY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REGIONColumn {
                get {
                    return this.columnREGION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LOCATIONColumn {
                get {
                    return this.columnLOCATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FARM_IDColumn {
                get {
                    return this.columnFARM_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FLOCK_IDColumn {
                get {
                    return this.columnFLOCK_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACTIVEColumn {
                get {
                    return this.columnACTIVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TRX_DATEColumn {
                get {
                    return this.columnTRX_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AGEColumn {
                get {
                    return this.columnAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HEN_MORTColumn {
                get {
                    return this.columnHEN_MORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HEN_WTColumn {
                get {
                    return this.columnHEN_WT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MALE_MORTColumn {
                get {
                    return this.columnMALE_MORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HEN_FEED_DELColumn {
                get {
                    return this.columnHEN_FEED_DEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOTAL_EGGS_PRODColumn {
                get {
                    return this.columnTOTAL_EGGS_PROD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EGG_WTColumn {
                get {
                    return this.columnEGG_WT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FLOCK_KEYColumn {
                get {
                    return this.columnFLOCK_KEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATE_1Column {
                get {
                    return this.columnDATE_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATE_2Column {
                get {
                    return this.columnDATE_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TEXT_1Column {
                get {
                    return this.columnTEXT_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TEXT_2Column {
                get {
                    return this.columnTEXT_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NUM_1Column {
                get {
                    return this.columnNUM_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NUM_2Column {
                get {
                    return this.columnNUM_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NUM_3Column {
                get {
                    return this.columnNUM_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NUM_4Column {
                get {
                    return this.columnNUM_4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NUM_5Column {
                get {
                    return this.columnNUM_5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NUM_6Column {
                get {
                    return this.columnNUM_6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NUM_7Column {
                get {
                    return this.columnNUM_7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NUM_8Column {
                get {
                    return this.columnNUM_8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NUM_9Column {
                get {
                    return this.columnNUM_9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NUM_10Column {
                get {
                    return this.columnNUM_10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NUM_11Column {
                get {
                    return this.columnNUM_11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NUM_12Column {
                get {
                    return this.columnNUM_12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NUM_13Column {
                get {
                    return this.columnNUM_13;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TEXT_3Column {
                get {
                    return this.columnTEXT_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NUM_14Column {
                get {
                    return this.columnNUM_14;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FLOCK_DATAMobileRow this[int index] {
                get {
                    return ((FLOCK_DATAMobileRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FLOCK_DATAMobileRowChangeEventHandler FLOCK_DATAMobileRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FLOCK_DATAMobileRowChangeEventHandler FLOCK_DATAMobileRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FLOCK_DATAMobileRowChangeEventHandler FLOCK_DATAMobileRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FLOCK_DATAMobileRowChangeEventHandler FLOCK_DATAMobileRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddFLOCK_DATAMobileRow(FLOCK_DATAMobileRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FLOCK_DATAMobileRow AddFLOCK_DATAMobileRow(
                        string COMPANY, 
                        string REGION, 
                        string LOCATION, 
                        string FARM_ID, 
                        string FLOCK_ID, 
                        decimal ACTIVE, 
                        System.DateTime TRX_DATE, 
                        decimal AGE, 
                        decimal HEN_MORT, 
                        decimal HEN_WT, 
                        decimal MALE_MORT, 
                        decimal HEN_FEED_DEL, 
                        decimal TOTAL_EGGS_PROD, 
                        decimal EGG_WT, 
                        string FLOCK_KEY, 
                        System.DateTime DATE_1, 
                        System.DateTime DATE_2, 
                        string TEXT_1, 
                        string TEXT_2, 
                        decimal NUM_1, 
                        decimal NUM_2, 
                        decimal NUM_3, 
                        decimal NUM_4, 
                        decimal NUM_5, 
                        decimal NUM_6, 
                        decimal NUM_7, 
                        decimal NUM_8, 
                        decimal NUM_9, 
                        decimal NUM_10, 
                        decimal NUM_11, 
                        decimal NUM_12, 
                        decimal NUM_13, 
                        string TEXT_3, 
                        decimal NUM_14) {
                FLOCK_DATAMobileRow rowFLOCK_DATAMobileRow = ((FLOCK_DATAMobileRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        COMPANY,
                        REGION,
                        LOCATION,
                        FARM_ID,
                        FLOCK_ID,
                        ACTIVE,
                        TRX_DATE,
                        AGE,
                        HEN_MORT,
                        HEN_WT,
                        MALE_MORT,
                        HEN_FEED_DEL,
                        TOTAL_EGGS_PROD,
                        EGG_WT,
                        FLOCK_KEY,
                        DATE_1,
                        DATE_2,
                        TEXT_1,
                        TEXT_2,
                        NUM_1,
                        NUM_2,
                        NUM_3,
                        NUM_4,
                        NUM_5,
                        NUM_6,
                        NUM_7,
                        NUM_8,
                        NUM_9,
                        NUM_10,
                        NUM_11,
                        NUM_12,
                        NUM_13,
                        TEXT_3,
                        NUM_14};
                rowFLOCK_DATAMobileRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFLOCK_DATAMobileRow);
                return rowFLOCK_DATAMobileRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FLOCK_DATAMobileRow FindByCOMPANYREGIONLOCATIONFARM_IDFLOCK_IDTRX_DATE(string COMPANY, string REGION, string LOCATION, string FARM_ID, string FLOCK_ID, System.DateTime TRX_DATE) {
                return ((FLOCK_DATAMobileRow)(this.Rows.Find(new object[] {
                            COMPANY,
                            REGION,
                            LOCATION,
                            FARM_ID,
                            FLOCK_ID,
                            TRX_DATE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FLOCK_DATAMobileDataTable cln = ((FLOCK_DATAMobileDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FLOCK_DATAMobileDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnCOMPANY = base.Columns["COMPANY"];
                this.columnREGION = base.Columns["REGION"];
                this.columnLOCATION = base.Columns["LOCATION"];
                this.columnFARM_ID = base.Columns["FARM_ID"];
                this.columnFLOCK_ID = base.Columns["FLOCK_ID"];
                this.columnACTIVE = base.Columns["ACTIVE"];
                this.columnTRX_DATE = base.Columns["TRX_DATE"];
                this.columnAGE = base.Columns["AGE"];
                this.columnHEN_MORT = base.Columns["HEN_MORT"];
                this.columnHEN_WT = base.Columns["HEN_WT"];
                this.columnMALE_MORT = base.Columns["MALE_MORT"];
                this.columnHEN_FEED_DEL = base.Columns["HEN_FEED_DEL"];
                this.columnTOTAL_EGGS_PROD = base.Columns["TOTAL_EGGS_PROD"];
                this.columnEGG_WT = base.Columns["EGG_WT"];
                this.columnFLOCK_KEY = base.Columns["FLOCK_KEY"];
                this.columnDATE_1 = base.Columns["DATE_1"];
                this.columnDATE_2 = base.Columns["DATE_2"];
                this.columnTEXT_1 = base.Columns["TEXT_1"];
                this.columnTEXT_2 = base.Columns["TEXT_2"];
                this.columnNUM_1 = base.Columns["NUM_1"];
                this.columnNUM_2 = base.Columns["NUM_2"];
                this.columnNUM_3 = base.Columns["NUM_3"];
                this.columnNUM_4 = base.Columns["NUM_4"];
                this.columnNUM_5 = base.Columns["NUM_5"];
                this.columnNUM_6 = base.Columns["NUM_6"];
                this.columnNUM_7 = base.Columns["NUM_7"];
                this.columnNUM_8 = base.Columns["NUM_8"];
                this.columnNUM_9 = base.Columns["NUM_9"];
                this.columnNUM_10 = base.Columns["NUM_10"];
                this.columnNUM_11 = base.Columns["NUM_11"];
                this.columnNUM_12 = base.Columns["NUM_12"];
                this.columnNUM_13 = base.Columns["NUM_13"];
                this.columnTEXT_3 = base.Columns["TEXT_3"];
                this.columnNUM_14 = base.Columns["NUM_14"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnCOMPANY = new global::System.Data.DataColumn("COMPANY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY);
                this.columnREGION = new global::System.Data.DataColumn("REGION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREGION);
                this.columnLOCATION = new global::System.Data.DataColumn("LOCATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION);
                this.columnFARM_ID = new global::System.Data.DataColumn("FARM_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFARM_ID);
                this.columnFLOCK_ID = new global::System.Data.DataColumn("FLOCK_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLOCK_ID);
                this.columnACTIVE = new global::System.Data.DataColumn("ACTIVE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACTIVE);
                this.columnTRX_DATE = new global::System.Data.DataColumn("TRX_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRX_DATE);
                this.columnAGE = new global::System.Data.DataColumn("AGE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAGE);
                this.columnHEN_MORT = new global::System.Data.DataColumn("HEN_MORT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHEN_MORT);
                this.columnHEN_WT = new global::System.Data.DataColumn("HEN_WT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHEN_WT);
                this.columnMALE_MORT = new global::System.Data.DataColumn("MALE_MORT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMALE_MORT);
                this.columnHEN_FEED_DEL = new global::System.Data.DataColumn("HEN_FEED_DEL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHEN_FEED_DEL);
                this.columnTOTAL_EGGS_PROD = new global::System.Data.DataColumn("TOTAL_EGGS_PROD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_EGGS_PROD);
                this.columnEGG_WT = new global::System.Data.DataColumn("EGG_WT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEGG_WT);
                this.columnFLOCK_KEY = new global::System.Data.DataColumn("FLOCK_KEY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLOCK_KEY);
                this.columnDATE_1 = new global::System.Data.DataColumn("DATE_1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_1);
                this.columnDATE_2 = new global::System.Data.DataColumn("DATE_2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_2);
                this.columnTEXT_1 = new global::System.Data.DataColumn("TEXT_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEXT_1);
                this.columnTEXT_2 = new global::System.Data.DataColumn("TEXT_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEXT_2);
                this.columnNUM_1 = new global::System.Data.DataColumn("NUM_1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_1);
                this.columnNUM_2 = new global::System.Data.DataColumn("NUM_2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_2);
                this.columnNUM_3 = new global::System.Data.DataColumn("NUM_3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_3);
                this.columnNUM_4 = new global::System.Data.DataColumn("NUM_4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_4);
                this.columnNUM_5 = new global::System.Data.DataColumn("NUM_5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_5);
                this.columnNUM_6 = new global::System.Data.DataColumn("NUM_6", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_6);
                this.columnNUM_7 = new global::System.Data.DataColumn("NUM_7", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_7);
                this.columnNUM_8 = new global::System.Data.DataColumn("NUM_8", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_8);
                this.columnNUM_9 = new global::System.Data.DataColumn("NUM_9", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_9);
                this.columnNUM_10 = new global::System.Data.DataColumn("NUM_10", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_10);
                this.columnNUM_11 = new global::System.Data.DataColumn("NUM_11", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_11);
                this.columnNUM_12 = new global::System.Data.DataColumn("NUM_12", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_12);
                this.columnNUM_13 = new global::System.Data.DataColumn("NUM_13", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_13);
                this.columnTEXT_3 = new global::System.Data.DataColumn("TEXT_3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEXT_3);
                this.columnNUM_14 = new global::System.Data.DataColumn("NUM_14", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_14);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCOMPANY,
                                this.columnREGION,
                                this.columnLOCATION,
                                this.columnFARM_ID,
                                this.columnFLOCK_ID,
                                this.columnTRX_DATE}, true));
                this.columnCOMPANY.AllowDBNull = false;
                this.columnCOMPANY.MaxLength = 4;
                this.columnREGION.AllowDBNull = false;
                this.columnREGION.MaxLength = 2;
                this.columnLOCATION.AllowDBNull = false;
                this.columnLOCATION.MaxLength = 2;
                this.columnFARM_ID.AllowDBNull = false;
                this.columnFARM_ID.MaxLength = 5;
                this.columnFLOCK_ID.AllowDBNull = false;
                this.columnFLOCK_ID.MaxLength = 20;
                this.columnACTIVE.AllowDBNull = false;
                this.columnTRX_DATE.AllowDBNull = false;
                this.columnFLOCK_KEY.MaxLength = 33;
                this.columnTEXT_1.MaxLength = 512;
                this.columnTEXT_2.MaxLength = 50;
                this.columnTEXT_3.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FLOCK_DATAMobileRow NewFLOCK_DATAMobileRow() {
                return ((FLOCK_DATAMobileRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FLOCK_DATAMobileRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FLOCK_DATAMobileRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FLOCK_DATAMobileRowChanged != null)) {
                    this.FLOCK_DATAMobileRowChanged(this, new FLOCK_DATAMobileRowChangeEvent(((FLOCK_DATAMobileRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FLOCK_DATAMobileRowChanging != null)) {
                    this.FLOCK_DATAMobileRowChanging(this, new FLOCK_DATAMobileRowChangeEvent(((FLOCK_DATAMobileRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FLOCK_DATAMobileRowDeleted != null)) {
                    this.FLOCK_DATAMobileRowDeleted(this, new FLOCK_DATAMobileRowChangeEvent(((FLOCK_DATAMobileRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FLOCK_DATAMobileRowDeleting != null)) {
                    this.FLOCK_DATAMobileRowDeleting(this, new FLOCK_DATAMobileRowChangeEvent(((FLOCK_DATAMobileRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveFLOCK_DATAMobileRow(FLOCK_DATAMobileRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FLIPDataSetMobile ds = new FLIPDataSetMobile();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FLOCK_DATAMobileDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FLOCKSFarmsDataTable : global::System.Data.TypedTableBase<FLOCKSFarmsRow> {
            
            private global::System.Data.DataColumn columnFARM_ID;
            
            private global::System.Data.DataColumn columnLOCATION;
            
            private global::System.Data.DataColumn columnTEXT_4;
            
            private global::System.Data.DataColumn columnTEXT_6;
            
            private global::System.Data.DataColumn columnTEXT_7;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FLOCKSFarmsDataTable() {
                this.TableName = "FLOCKSFarms";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal FLOCKSFarmsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected FLOCKSFarmsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FARM_IDColumn {
                get {
                    return this.columnFARM_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LOCATIONColumn {
                get {
                    return this.columnLOCATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TEXT_4Column {
                get {
                    return this.columnTEXT_4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TEXT_6Column {
                get {
                    return this.columnTEXT_6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TEXT_7Column {
                get {
                    return this.columnTEXT_7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FLOCKSFarmsRow this[int index] {
                get {
                    return ((FLOCKSFarmsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FLOCKSFarmsRowChangeEventHandler FLOCKSFarmsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FLOCKSFarmsRowChangeEventHandler FLOCKSFarmsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FLOCKSFarmsRowChangeEventHandler FLOCKSFarmsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FLOCKSFarmsRowChangeEventHandler FLOCKSFarmsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddFLOCKSFarmsRow(FLOCKSFarmsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FLOCKSFarmsRow AddFLOCKSFarmsRow(string FARM_ID, string LOCATION, string TEXT_4, string TEXT_6, string TEXT_7) {
                FLOCKSFarmsRow rowFLOCKSFarmsRow = ((FLOCKSFarmsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FARM_ID,
                        LOCATION,
                        TEXT_4,
                        TEXT_6,
                        TEXT_7};
                rowFLOCKSFarmsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFLOCKSFarmsRow);
                return rowFLOCKSFarmsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FLOCKSFarmsDataTable cln = ((FLOCKSFarmsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FLOCKSFarmsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnFARM_ID = base.Columns["FARM_ID"];
                this.columnLOCATION = base.Columns["LOCATION"];
                this.columnTEXT_4 = base.Columns["TEXT_4"];
                this.columnTEXT_6 = base.Columns["TEXT_6"];
                this.columnTEXT_7 = base.Columns["TEXT_7"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnFARM_ID = new global::System.Data.DataColumn("FARM_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFARM_ID);
                this.columnLOCATION = new global::System.Data.DataColumn("LOCATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION);
                this.columnTEXT_4 = new global::System.Data.DataColumn("TEXT_4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEXT_4);
                this.columnTEXT_6 = new global::System.Data.DataColumn("TEXT_6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEXT_6);
                this.columnTEXT_7 = new global::System.Data.DataColumn("TEXT_7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEXT_7);
                this.columnFARM_ID.AllowDBNull = false;
                this.columnFARM_ID.MaxLength = 5;
                this.columnLOCATION.AllowDBNull = false;
                this.columnLOCATION.MaxLength = 2;
                this.columnTEXT_4.MaxLength = 20;
                this.columnTEXT_6.MaxLength = 20;
                this.columnTEXT_7.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FLOCKSFarmsRow NewFLOCKSFarmsRow() {
                return ((FLOCKSFarmsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FLOCKSFarmsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FLOCKSFarmsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FLOCKSFarmsRowChanged != null)) {
                    this.FLOCKSFarmsRowChanged(this, new FLOCKSFarmsRowChangeEvent(((FLOCKSFarmsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FLOCKSFarmsRowChanging != null)) {
                    this.FLOCKSFarmsRowChanging(this, new FLOCKSFarmsRowChangeEvent(((FLOCKSFarmsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FLOCKSFarmsRowDeleted != null)) {
                    this.FLOCKSFarmsRowDeleted(this, new FLOCKSFarmsRowChangeEvent(((FLOCKSFarmsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FLOCKSFarmsRowDeleting != null)) {
                    this.FLOCKSFarmsRowDeleting(this, new FLOCKSFarmsRowChangeEvent(((FLOCKSFarmsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveFLOCKSFarmsRow(FLOCKSFarmsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FLIPDataSetMobile ds = new FLIPDataSetMobile();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FLOCKSFarmsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HATCHERY_CODESDataTable : global::System.Data.TypedTableBase<HATCHERY_CODESRow> {
            
            private global::System.Data.DataColumn columnHATCH_LOC;
            
            private global::System.Data.DataColumn columnHATCH_DESC;
            
            private global::System.Data.DataColumn columnCAPACITY;
            
            private global::System.Data.DataColumn columnORDENT_LOC;
            
            private global::System.Data.DataColumn columnLOCATION;
            
            private global::System.Data.DataColumn columnREGION;
            
            private global::System.Data.DataColumn columnEQUIPMENT;
            
            private global::System.Data.DataColumn columnTRAY;
            
            private global::System.Data.DataColumn columnPALLET;
            
            private global::System.Data.DataColumn columnCASE;
            
            private global::System.Data.DataColumn columnAUTO_TRANSF;
            
            private global::System.Data.DataColumn columnCLAS_INC;
            
            private global::System.Data.DataColumn columnCOMPANY;
            
            private global::System.Data.DataColumn columnCLAS_EGG;
            
            private global::System.Data.DataColumn columnTYPE_CLAS_EGG;
            
            private global::System.Data.DataColumn columnPERIOD_LAY_DATE_INC;
            
            private global::System.Data.DataColumn columnPERIOD_LAY_DATE_CLAS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HATCHERY_CODESDataTable() {
                this.TableName = "HATCHERY_CODES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal HATCHERY_CODESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected HATCHERY_CODESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HATCH_LOCColumn {
                get {
                    return this.columnHATCH_LOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HATCH_DESCColumn {
                get {
                    return this.columnHATCH_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CAPACITYColumn {
                get {
                    return this.columnCAPACITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ORDENT_LOCColumn {
                get {
                    return this.columnORDENT_LOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LOCATIONColumn {
                get {
                    return this.columnLOCATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REGIONColumn {
                get {
                    return this.columnREGION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EQUIPMENTColumn {
                get {
                    return this.columnEQUIPMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TRAYColumn {
                get {
                    return this.columnTRAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PALLETColumn {
                get {
                    return this.columnPALLET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CASEColumn {
                get {
                    return this.columnCASE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AUTO_TRANSFColumn {
                get {
                    return this.columnAUTO_TRANSF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CLAS_INCColumn {
                get {
                    return this.columnCLAS_INC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COMPANYColumn {
                get {
                    return this.columnCOMPANY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CLAS_EGGColumn {
                get {
                    return this.columnCLAS_EGG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TYPE_CLAS_EGGColumn {
                get {
                    return this.columnTYPE_CLAS_EGG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PERIOD_LAY_DATE_INCColumn {
                get {
                    return this.columnPERIOD_LAY_DATE_INC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PERIOD_LAY_DATE_CLASColumn {
                get {
                    return this.columnPERIOD_LAY_DATE_CLAS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HATCHERY_CODESRow this[int index] {
                get {
                    return ((HATCHERY_CODESRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event HATCHERY_CODESRowChangeEventHandler HATCHERY_CODESRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event HATCHERY_CODESRowChangeEventHandler HATCHERY_CODESRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event HATCHERY_CODESRowChangeEventHandler HATCHERY_CODESRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event HATCHERY_CODESRowChangeEventHandler HATCHERY_CODESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddHATCHERY_CODESRow(HATCHERY_CODESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HATCHERY_CODESRow AddHATCHERY_CODESRow(
                        string HATCH_LOC, 
                        string HATCH_DESC, 
                        decimal CAPACITY, 
                        string ORDENT_LOC, 
                        string LOCATION, 
                        string REGION, 
                        string EQUIPMENT, 
                        decimal TRAY, 
                        decimal PALLET, 
                        decimal CASE, 
                        string AUTO_TRANSF, 
                        string CLAS_INC, 
                        string COMPANY, 
                        string CLAS_EGG, 
                        string TYPE_CLAS_EGG, 
                        string PERIOD_LAY_DATE_INC, 
                        string PERIOD_LAY_DATE_CLAS) {
                HATCHERY_CODESRow rowHATCHERY_CODESRow = ((HATCHERY_CODESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HATCH_LOC,
                        HATCH_DESC,
                        CAPACITY,
                        ORDENT_LOC,
                        LOCATION,
                        REGION,
                        EQUIPMENT,
                        TRAY,
                        PALLET,
                        CASE,
                        AUTO_TRANSF,
                        CLAS_INC,
                        COMPANY,
                        CLAS_EGG,
                        TYPE_CLAS_EGG,
                        PERIOD_LAY_DATE_INC,
                        PERIOD_LAY_DATE_CLAS};
                rowHATCHERY_CODESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHATCHERY_CODESRow);
                return rowHATCHERY_CODESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HATCHERY_CODESRow FindByHATCH_LOC(string HATCH_LOC) {
                return ((HATCHERY_CODESRow)(this.Rows.Find(new object[] {
                            HATCH_LOC})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                HATCHERY_CODESDataTable cln = ((HATCHERY_CODESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HATCHERY_CODESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnHATCH_LOC = base.Columns["HATCH_LOC"];
                this.columnHATCH_DESC = base.Columns["HATCH_DESC"];
                this.columnCAPACITY = base.Columns["CAPACITY"];
                this.columnORDENT_LOC = base.Columns["ORDENT_LOC"];
                this.columnLOCATION = base.Columns["LOCATION"];
                this.columnREGION = base.Columns["REGION"];
                this.columnEQUIPMENT = base.Columns["EQUIPMENT"];
                this.columnTRAY = base.Columns["TRAY"];
                this.columnPALLET = base.Columns["PALLET"];
                this.columnCASE = base.Columns["CASE"];
                this.columnAUTO_TRANSF = base.Columns["AUTO_TRANSF"];
                this.columnCLAS_INC = base.Columns["CLAS_INC"];
                this.columnCOMPANY = base.Columns["COMPANY"];
                this.columnCLAS_EGG = base.Columns["CLAS_EGG"];
                this.columnTYPE_CLAS_EGG = base.Columns["TYPE_CLAS_EGG"];
                this.columnPERIOD_LAY_DATE_INC = base.Columns["PERIOD_LAY_DATE_INC"];
                this.columnPERIOD_LAY_DATE_CLAS = base.Columns["PERIOD_LAY_DATE_CLAS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnHATCH_LOC = new global::System.Data.DataColumn("HATCH_LOC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHATCH_LOC);
                this.columnHATCH_DESC = new global::System.Data.DataColumn("HATCH_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHATCH_DESC);
                this.columnCAPACITY = new global::System.Data.DataColumn("CAPACITY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAPACITY);
                this.columnORDENT_LOC = new global::System.Data.DataColumn("ORDENT_LOC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDENT_LOC);
                this.columnLOCATION = new global::System.Data.DataColumn("LOCATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION);
                this.columnREGION = new global::System.Data.DataColumn("REGION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREGION);
                this.columnEQUIPMENT = new global::System.Data.DataColumn("EQUIPMENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEQUIPMENT);
                this.columnTRAY = new global::System.Data.DataColumn("TRAY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRAY);
                this.columnPALLET = new global::System.Data.DataColumn("PALLET", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPALLET);
                this.columnCASE = new global::System.Data.DataColumn("CASE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCASE);
                this.columnAUTO_TRANSF = new global::System.Data.DataColumn("AUTO_TRANSF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTO_TRANSF);
                this.columnCLAS_INC = new global::System.Data.DataColumn("CLAS_INC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLAS_INC);
                this.columnCOMPANY = new global::System.Data.DataColumn("COMPANY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY);
                this.columnCLAS_EGG = new global::System.Data.DataColumn("CLAS_EGG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLAS_EGG);
                this.columnTYPE_CLAS_EGG = new global::System.Data.DataColumn("TYPE_CLAS_EGG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_CLAS_EGG);
                this.columnPERIOD_LAY_DATE_INC = new global::System.Data.DataColumn("PERIOD_LAY_DATE_INC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERIOD_LAY_DATE_INC);
                this.columnPERIOD_LAY_DATE_CLAS = new global::System.Data.DataColumn("PERIOD_LAY_DATE_CLAS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERIOD_LAY_DATE_CLAS);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnHATCH_LOC}, true));
                this.columnHATCH_LOC.AllowDBNull = false;
                this.columnHATCH_LOC.Unique = true;
                this.columnHATCH_LOC.MaxLength = 2;
                this.columnHATCH_DESC.MaxLength = 25;
                this.columnORDENT_LOC.MaxLength = 19;
                this.columnLOCATION.MaxLength = 2;
                this.columnREGION.MaxLength = 2;
                this.columnEQUIPMENT.MaxLength = 80;
                this.columnAUTO_TRANSF.MaxLength = 3;
                this.columnCLAS_INC.MaxLength = 3;
                this.columnCOMPANY.MaxLength = 4;
                this.columnCLAS_EGG.MaxLength = 3;
                this.columnTYPE_CLAS_EGG.MaxLength = 50;
                this.columnPERIOD_LAY_DATE_INC.MaxLength = 10;
                this.columnPERIOD_LAY_DATE_CLAS.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HATCHERY_CODESRow NewHATCHERY_CODESRow() {
                return ((HATCHERY_CODESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HATCHERY_CODESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(HATCHERY_CODESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HATCHERY_CODESRowChanged != null)) {
                    this.HATCHERY_CODESRowChanged(this, new HATCHERY_CODESRowChangeEvent(((HATCHERY_CODESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HATCHERY_CODESRowChanging != null)) {
                    this.HATCHERY_CODESRowChanging(this, new HATCHERY_CODESRowChangeEvent(((HATCHERY_CODESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HATCHERY_CODESRowDeleted != null)) {
                    this.HATCHERY_CODESRowDeleted(this, new HATCHERY_CODESRowChangeEvent(((HATCHERY_CODESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HATCHERY_CODESRowDeleting != null)) {
                    this.HATCHERY_CODESRowDeleting(this, new HATCHERY_CODESRowChangeEvent(((HATCHERY_CODESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveHATCHERY_CODESRow(HATCHERY_CODESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FLIPDataSetMobile ds = new FLIPDataSetMobile();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HATCHERY_CODESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DATA_FECH_LANCDataTable : global::System.Data.TypedTableBase<DATA_FECH_LANCRow> {
            
            private global::System.Data.DataColumn columnDATA_FECH_LANC;
            
            private global::System.Data.DataColumn columnLOCATION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DATA_FECH_LANCDataTable() {
                this.TableName = "DATA_FECH_LANC";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal DATA_FECH_LANCDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected DATA_FECH_LANCDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATA_FECH_LANCColumn {
                get {
                    return this.columnDATA_FECH_LANC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LOCATIONColumn {
                get {
                    return this.columnLOCATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DATA_FECH_LANCRow this[int index] {
                get {
                    return ((DATA_FECH_LANCRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DATA_FECH_LANCRowChangeEventHandler DATA_FECH_LANCRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DATA_FECH_LANCRowChangeEventHandler DATA_FECH_LANCRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DATA_FECH_LANCRowChangeEventHandler DATA_FECH_LANCRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DATA_FECH_LANCRowChangeEventHandler DATA_FECH_LANCRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddDATA_FECH_LANCRow(DATA_FECH_LANCRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DATA_FECH_LANCRow AddDATA_FECH_LANCRow(System.DateTime DATA_FECH_LANC, string LOCATION) {
                DATA_FECH_LANCRow rowDATA_FECH_LANCRow = ((DATA_FECH_LANCRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DATA_FECH_LANC,
                        LOCATION};
                rowDATA_FECH_LANCRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDATA_FECH_LANCRow);
                return rowDATA_FECH_LANCRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DATA_FECH_LANCDataTable cln = ((DATA_FECH_LANCDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DATA_FECH_LANCDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnDATA_FECH_LANC = base.Columns["DATA_FECH_LANC"];
                this.columnLOCATION = base.Columns["LOCATION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnDATA_FECH_LANC = new global::System.Data.DataColumn("DATA_FECH_LANC", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA_FECH_LANC);
                this.columnLOCATION = new global::System.Data.DataColumn("LOCATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION);
                this.columnLOCATION.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DATA_FECH_LANCRow NewDATA_FECH_LANCRow() {
                return ((DATA_FECH_LANCRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DATA_FECH_LANCRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DATA_FECH_LANCRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DATA_FECH_LANCRowChanged != null)) {
                    this.DATA_FECH_LANCRowChanged(this, new DATA_FECH_LANCRowChangeEvent(((DATA_FECH_LANCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DATA_FECH_LANCRowChanging != null)) {
                    this.DATA_FECH_LANCRowChanging(this, new DATA_FECH_LANCRowChangeEvent(((DATA_FECH_LANCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DATA_FECH_LANCRowDeleted != null)) {
                    this.DATA_FECH_LANCRowDeleted(this, new DATA_FECH_LANCRowChangeEvent(((DATA_FECH_LANCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DATA_FECH_LANCRowDeleting != null)) {
                    this.DATA_FECH_LANCRowDeleting(this, new DATA_FECH_LANCRowChangeEvent(((DATA_FECH_LANCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveDATA_FECH_LANCRow(DATA_FECH_LANCRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FLIPDataSetMobile ds = new FLIPDataSetMobile();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DATA_FECH_LANCDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FLOCKSMobileRow : global::System.Data.DataRow {
            
            private FLOCKSMobileDataTable tableFLOCKSMobile;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal FLOCKSMobileRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFLOCKSMobile = ((FLOCKSMobileDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string COMPANY {
                get {
                    return ((string)(this[this.tableFLOCKSMobile.COMPANYColumn]));
                }
                set {
                    this[this.tableFLOCKSMobile.COMPANYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REGION {
                get {
                    return ((string)(this[this.tableFLOCKSMobile.REGIONColumn]));
                }
                set {
                    this[this.tableFLOCKSMobile.REGIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LOCATION {
                get {
                    return ((string)(this[this.tableFLOCKSMobile.LOCATIONColumn]));
                }
                set {
                    this[this.tableFLOCKSMobile.LOCATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FARM_ID {
                get {
                    return ((string)(this[this.tableFLOCKSMobile.FARM_IDColumn]));
                }
                set {
                    this[this.tableFLOCKSMobile.FARM_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ACTIVE {
                get {
                    return ((decimal)(this[this.tableFLOCKSMobile.ACTIVEColumn]));
                }
                set {
                    this[this.tableFLOCKSMobile.ACTIVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FLOCK_ID {
                get {
                    return ((string)(this[this.tableFLOCKSMobile.FLOCK_IDColumn]));
                }
                set {
                    this[this.tableFLOCKSMobile.FLOCK_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PULLET_ID {
                get {
                    try {
                        return ((string)(this[this.tableFLOCKSMobile.PULLET_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'PULLET_ID\' na tabela \'FLOCKSMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSMobile.PULLET_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string VARIETY {
                get {
                    try {
                        return ((string)(this[this.tableFLOCKSMobile.VARIETYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'VARIETY\' na tabela \'FLOCKSMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSMobile.VARIETYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal GEN {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCKSMobile.GENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'GEN\' na tabela \'FLOCKSMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSMobile.GENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime HATCH_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFLOCKSMobile.HATCH_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'HATCH_DATE\' na tabela \'FLOCKSMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSMobile.HATCH_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime MOVE_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFLOCKSMobile.MOVE_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'MOVE_DATE\' na tabela \'FLOCKSMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSMobile.MOVE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime SELL_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFLOCKSMobile.SELL_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'SELL_DATE\' na tabela \'FLOCKSMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSMobile.SELL_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal HENS_HATCHED {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCKSMobile.HENS_HATCHEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'HENS_HATCHED\' na tabela \'FLOCKSMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSMobile.HENS_HATCHEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal HENS_MOVED {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCKSMobile.HENS_MOVEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'HENS_MOVED\' na tabela \'FLOCKSMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSMobile.HENS_MOVEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal HENS_SOLD {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCKSMobile.HENS_SOLDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'HENS_SOLD\' na tabela \'FLOCKSMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSMobile.HENS_SOLDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MALES_HATCHED {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCKSMobile.MALES_HATCHEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'MALES_HATCHED\' na tabela \'FLOCKSMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSMobile.MALES_HATCHEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MALES_MOVED {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCKSMobile.MALES_MOVEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'MALES_MOVED\' na tabela \'FLOCKSMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSMobile.MALES_MOVEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MALES_SOLD {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCKSMobile.MALES_SOLDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'MALES_SOLD\' na tabela \'FLOCKSMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSMobile.MALES_SOLDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PULLET_HEN_FC {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCKSMobile.PULLET_HEN_FCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'PULLET_HEN_FC\' na tabela \'FLOCKSMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSMobile.PULLET_HEN_FCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FLOCK_KEY {
                get {
                    try {
                        return ((string)(this[this.tableFLOCKSMobile.FLOCK_KEYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'FLOCK_KEY\' na tabela \'FLOCKSMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSMobile.FLOCK_KEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TEXT_1 {
                get {
                    try {
                        return ((string)(this[this.tableFLOCKSMobile.TEXT_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'TEXT_1\' na tabela \'FLOCKSMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSMobile.TEXT_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NUM_1 {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCKSMobile.NUM_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'NUM_1\' na tabela \'FLOCKSMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSMobile.NUM_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATE_1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFLOCKSMobile.DATE_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'DATE_1\' na tabela \'FLOCKSMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSMobile.DATE_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TEXT_2 {
                get {
                    try {
                        return ((string)(this[this.tableFLOCKSMobile.TEXT_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'TEXT_2\' na tabela \'FLOCKSMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSMobile.TEXT_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NUM_2 {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCKSMobile.NUM_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'NUM_2\' na tabela \'FLOCKSMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSMobile.NUM_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATE_2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFLOCKSMobile.DATE_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'DATE_2\' na tabela \'FLOCKSMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSMobile.DATE_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FARM_KEY {
                get {
                    try {
                        return ((string)(this[this.tableFLOCKSMobile.FARM_KEYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'FARM_KEY\' na tabela \'FLOCKSMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSMobile.FARM_KEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TEXT_3 {
                get {
                    try {
                        return ((string)(this[this.tableFLOCKSMobile.TEXT_3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'TEXT_3\' na tabela \'FLOCKSMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSMobile.TEXT_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NUM_3 {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCKSMobile.NUM_3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'NUM_3\' na tabela \'FLOCKSMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSMobile.NUM_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TEXT_4 {
                get {
                    try {
                        return ((string)(this[this.tableFLOCKSMobile.TEXT_4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'TEXT_4\' na tabela \'FLOCKSMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSMobile.TEXT_4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPULLET_IDNull() {
                return this.IsNull(this.tableFLOCKSMobile.PULLET_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPULLET_IDNull() {
                this[this.tableFLOCKSMobile.PULLET_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsVARIETYNull() {
                return this.IsNull(this.tableFLOCKSMobile.VARIETYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetVARIETYNull() {
                this[this.tableFLOCKSMobile.VARIETYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGENNull() {
                return this.IsNull(this.tableFLOCKSMobile.GENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGENNull() {
                this[this.tableFLOCKSMobile.GENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHATCH_DATENull() {
                return this.IsNull(this.tableFLOCKSMobile.HATCH_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHATCH_DATENull() {
                this[this.tableFLOCKSMobile.HATCH_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMOVE_DATENull() {
                return this.IsNull(this.tableFLOCKSMobile.MOVE_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMOVE_DATENull() {
                this[this.tableFLOCKSMobile.MOVE_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSELL_DATENull() {
                return this.IsNull(this.tableFLOCKSMobile.SELL_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSELL_DATENull() {
                this[this.tableFLOCKSMobile.SELL_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHENS_HATCHEDNull() {
                return this.IsNull(this.tableFLOCKSMobile.HENS_HATCHEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHENS_HATCHEDNull() {
                this[this.tableFLOCKSMobile.HENS_HATCHEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHENS_MOVEDNull() {
                return this.IsNull(this.tableFLOCKSMobile.HENS_MOVEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHENS_MOVEDNull() {
                this[this.tableFLOCKSMobile.HENS_MOVEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHENS_SOLDNull() {
                return this.IsNull(this.tableFLOCKSMobile.HENS_SOLDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHENS_SOLDNull() {
                this[this.tableFLOCKSMobile.HENS_SOLDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMALES_HATCHEDNull() {
                return this.IsNull(this.tableFLOCKSMobile.MALES_HATCHEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMALES_HATCHEDNull() {
                this[this.tableFLOCKSMobile.MALES_HATCHEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMALES_MOVEDNull() {
                return this.IsNull(this.tableFLOCKSMobile.MALES_MOVEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMALES_MOVEDNull() {
                this[this.tableFLOCKSMobile.MALES_MOVEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMALES_SOLDNull() {
                return this.IsNull(this.tableFLOCKSMobile.MALES_SOLDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMALES_SOLDNull() {
                this[this.tableFLOCKSMobile.MALES_SOLDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPULLET_HEN_FCNull() {
                return this.IsNull(this.tableFLOCKSMobile.PULLET_HEN_FCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPULLET_HEN_FCNull() {
                this[this.tableFLOCKSMobile.PULLET_HEN_FCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFLOCK_KEYNull() {
                return this.IsNull(this.tableFLOCKSMobile.FLOCK_KEYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFLOCK_KEYNull() {
                this[this.tableFLOCKSMobile.FLOCK_KEYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTEXT_1Null() {
                return this.IsNull(this.tableFLOCKSMobile.TEXT_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTEXT_1Null() {
                this[this.tableFLOCKSMobile.TEXT_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNUM_1Null() {
                return this.IsNull(this.tableFLOCKSMobile.NUM_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNUM_1Null() {
                this[this.tableFLOCKSMobile.NUM_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDATE_1Null() {
                return this.IsNull(this.tableFLOCKSMobile.DATE_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDATE_1Null() {
                this[this.tableFLOCKSMobile.DATE_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTEXT_2Null() {
                return this.IsNull(this.tableFLOCKSMobile.TEXT_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTEXT_2Null() {
                this[this.tableFLOCKSMobile.TEXT_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNUM_2Null() {
                return this.IsNull(this.tableFLOCKSMobile.NUM_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNUM_2Null() {
                this[this.tableFLOCKSMobile.NUM_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDATE_2Null() {
                return this.IsNull(this.tableFLOCKSMobile.DATE_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDATE_2Null() {
                this[this.tableFLOCKSMobile.DATE_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFARM_KEYNull() {
                return this.IsNull(this.tableFLOCKSMobile.FARM_KEYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFARM_KEYNull() {
                this[this.tableFLOCKSMobile.FARM_KEYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTEXT_3Null() {
                return this.IsNull(this.tableFLOCKSMobile.TEXT_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTEXT_3Null() {
                this[this.tableFLOCKSMobile.TEXT_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNUM_3Null() {
                return this.IsNull(this.tableFLOCKSMobile.NUM_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNUM_3Null() {
                this[this.tableFLOCKSMobile.NUM_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTEXT_4Null() {
                return this.IsNull(this.tableFLOCKSMobile.TEXT_4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTEXT_4Null() {
                this[this.tableFLOCKSMobile.TEXT_4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FLOCK_DATAMobileRow[] GetFLOCK_DATAMobileRows() {
                if ((this.Table.ChildRelations["FLOCK_DATA_FK"] == null)) {
                    return new FLOCK_DATAMobileRow[0];
                }
                else {
                    return ((FLOCK_DATAMobileRow[])(base.GetChildRows(this.Table.ChildRelations["FLOCK_DATA_FK"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FLOCK_DATAMobileRow : global::System.Data.DataRow {
            
            private FLOCK_DATAMobileDataTable tableFLOCK_DATAMobile;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal FLOCK_DATAMobileRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFLOCK_DATAMobile = ((FLOCK_DATAMobileDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string COMPANY {
                get {
                    return ((string)(this[this.tableFLOCK_DATAMobile.COMPANYColumn]));
                }
                set {
                    this[this.tableFLOCK_DATAMobile.COMPANYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REGION {
                get {
                    return ((string)(this[this.tableFLOCK_DATAMobile.REGIONColumn]));
                }
                set {
                    this[this.tableFLOCK_DATAMobile.REGIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LOCATION {
                get {
                    return ((string)(this[this.tableFLOCK_DATAMobile.LOCATIONColumn]));
                }
                set {
                    this[this.tableFLOCK_DATAMobile.LOCATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FARM_ID {
                get {
                    return ((string)(this[this.tableFLOCK_DATAMobile.FARM_IDColumn]));
                }
                set {
                    this[this.tableFLOCK_DATAMobile.FARM_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FLOCK_ID {
                get {
                    return ((string)(this[this.tableFLOCK_DATAMobile.FLOCK_IDColumn]));
                }
                set {
                    this[this.tableFLOCK_DATAMobile.FLOCK_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ACTIVE {
                get {
                    return ((decimal)(this[this.tableFLOCK_DATAMobile.ACTIVEColumn]));
                }
                set {
                    this[this.tableFLOCK_DATAMobile.ACTIVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime TRX_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableFLOCK_DATAMobile.TRX_DATEColumn]));
                }
                set {
                    this[this.tableFLOCK_DATAMobile.TRX_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AGE {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCK_DATAMobile.AGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'AGE\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.AGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal HEN_MORT {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCK_DATAMobile.HEN_MORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'HEN_MORT\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.HEN_MORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal HEN_WT {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCK_DATAMobile.HEN_WTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'HEN_WT\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.HEN_WTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MALE_MORT {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCK_DATAMobile.MALE_MORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'MALE_MORT\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.MALE_MORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal HEN_FEED_DEL {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCK_DATAMobile.HEN_FEED_DELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'HEN_FEED_DEL\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.HEN_FEED_DELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOTAL_EGGS_PROD {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCK_DATAMobile.TOTAL_EGGS_PRODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'TOTAL_EGGS_PROD\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.TOTAL_EGGS_PRODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EGG_WT {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCK_DATAMobile.EGG_WTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'EGG_WT\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.EGG_WTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FLOCK_KEY {
                get {
                    try {
                        return ((string)(this[this.tableFLOCK_DATAMobile.FLOCK_KEYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'FLOCK_KEY\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.FLOCK_KEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATE_1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFLOCK_DATAMobile.DATE_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'DATE_1\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.DATE_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATE_2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFLOCK_DATAMobile.DATE_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'DATE_2\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.DATE_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TEXT_1 {
                get {
                    try {
                        return ((string)(this[this.tableFLOCK_DATAMobile.TEXT_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'TEXT_1\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.TEXT_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TEXT_2 {
                get {
                    try {
                        return ((string)(this[this.tableFLOCK_DATAMobile.TEXT_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'TEXT_2\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.TEXT_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NUM_1 {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCK_DATAMobile.NUM_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'NUM_1\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.NUM_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NUM_2 {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCK_DATAMobile.NUM_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'NUM_2\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.NUM_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NUM_3 {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCK_DATAMobile.NUM_3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'NUM_3\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.NUM_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NUM_4 {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCK_DATAMobile.NUM_4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'NUM_4\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.NUM_4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NUM_5 {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCK_DATAMobile.NUM_5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'NUM_5\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.NUM_5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NUM_6 {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCK_DATAMobile.NUM_6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'NUM_6\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.NUM_6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NUM_7 {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCK_DATAMobile.NUM_7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'NUM_7\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.NUM_7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NUM_8 {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCK_DATAMobile.NUM_8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'NUM_8\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.NUM_8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NUM_9 {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCK_DATAMobile.NUM_9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'NUM_9\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.NUM_9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NUM_10 {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCK_DATAMobile.NUM_10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'NUM_10\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.NUM_10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NUM_11 {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCK_DATAMobile.NUM_11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'NUM_11\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.NUM_11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NUM_12 {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCK_DATAMobile.NUM_12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'NUM_12\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.NUM_12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NUM_13 {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCK_DATAMobile.NUM_13Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'NUM_13\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.NUM_13Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TEXT_3 {
                get {
                    try {
                        return ((string)(this[this.tableFLOCK_DATAMobile.TEXT_3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'TEXT_3\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.TEXT_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NUM_14 {
                get {
                    try {
                        return ((decimal)(this[this.tableFLOCK_DATAMobile.NUM_14Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'NUM_14\' na tabela \'FLOCK_DATAMobile\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCK_DATAMobile.NUM_14Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FLOCKSMobileRow FLOCKSMobileRowParent {
                get {
                    return ((FLOCKSMobileRow)(this.GetParentRow(this.Table.ParentRelations["FLOCK_DATA_FK"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FLOCK_DATA_FK"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAGENull() {
                return this.IsNull(this.tableFLOCK_DATAMobile.AGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAGENull() {
                this[this.tableFLOCK_DATAMobile.AGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHEN_MORTNull() {
                return this.IsNull(this.tableFLOCK_DATAMobile.HEN_MORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHEN_MORTNull() {
                this[this.tableFLOCK_DATAMobile.HEN_MORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHEN_WTNull() {
                return this.IsNull(this.tableFLOCK_DATAMobile.HEN_WTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHEN_WTNull() {
                this[this.tableFLOCK_DATAMobile.HEN_WTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMALE_MORTNull() {
                return this.IsNull(this.tableFLOCK_DATAMobile.MALE_MORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMALE_MORTNull() {
                this[this.tableFLOCK_DATAMobile.MALE_MORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHEN_FEED_DELNull() {
                return this.IsNull(this.tableFLOCK_DATAMobile.HEN_FEED_DELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHEN_FEED_DELNull() {
                this[this.tableFLOCK_DATAMobile.HEN_FEED_DELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTOTAL_EGGS_PRODNull() {
                return this.IsNull(this.tableFLOCK_DATAMobile.TOTAL_EGGS_PRODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTOTAL_EGGS_PRODNull() {
                this[this.tableFLOCK_DATAMobile.TOTAL_EGGS_PRODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEGG_WTNull() {
                return this.IsNull(this.tableFLOCK_DATAMobile.EGG_WTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEGG_WTNull() {
                this[this.tableFLOCK_DATAMobile.EGG_WTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFLOCK_KEYNull() {
                return this.IsNull(this.tableFLOCK_DATAMobile.FLOCK_KEYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFLOCK_KEYNull() {
                this[this.tableFLOCK_DATAMobile.FLOCK_KEYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDATE_1Null() {
                return this.IsNull(this.tableFLOCK_DATAMobile.DATE_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDATE_1Null() {
                this[this.tableFLOCK_DATAMobile.DATE_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDATE_2Null() {
                return this.IsNull(this.tableFLOCK_DATAMobile.DATE_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDATE_2Null() {
                this[this.tableFLOCK_DATAMobile.DATE_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTEXT_1Null() {
                return this.IsNull(this.tableFLOCK_DATAMobile.TEXT_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTEXT_1Null() {
                this[this.tableFLOCK_DATAMobile.TEXT_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTEXT_2Null() {
                return this.IsNull(this.tableFLOCK_DATAMobile.TEXT_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTEXT_2Null() {
                this[this.tableFLOCK_DATAMobile.TEXT_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNUM_1Null() {
                return this.IsNull(this.tableFLOCK_DATAMobile.NUM_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNUM_1Null() {
                this[this.tableFLOCK_DATAMobile.NUM_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNUM_2Null() {
                return this.IsNull(this.tableFLOCK_DATAMobile.NUM_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNUM_2Null() {
                this[this.tableFLOCK_DATAMobile.NUM_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNUM_3Null() {
                return this.IsNull(this.tableFLOCK_DATAMobile.NUM_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNUM_3Null() {
                this[this.tableFLOCK_DATAMobile.NUM_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNUM_4Null() {
                return this.IsNull(this.tableFLOCK_DATAMobile.NUM_4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNUM_4Null() {
                this[this.tableFLOCK_DATAMobile.NUM_4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNUM_5Null() {
                return this.IsNull(this.tableFLOCK_DATAMobile.NUM_5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNUM_5Null() {
                this[this.tableFLOCK_DATAMobile.NUM_5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNUM_6Null() {
                return this.IsNull(this.tableFLOCK_DATAMobile.NUM_6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNUM_6Null() {
                this[this.tableFLOCK_DATAMobile.NUM_6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNUM_7Null() {
                return this.IsNull(this.tableFLOCK_DATAMobile.NUM_7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNUM_7Null() {
                this[this.tableFLOCK_DATAMobile.NUM_7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNUM_8Null() {
                return this.IsNull(this.tableFLOCK_DATAMobile.NUM_8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNUM_8Null() {
                this[this.tableFLOCK_DATAMobile.NUM_8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNUM_9Null() {
                return this.IsNull(this.tableFLOCK_DATAMobile.NUM_9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNUM_9Null() {
                this[this.tableFLOCK_DATAMobile.NUM_9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNUM_10Null() {
                return this.IsNull(this.tableFLOCK_DATAMobile.NUM_10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNUM_10Null() {
                this[this.tableFLOCK_DATAMobile.NUM_10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNUM_11Null() {
                return this.IsNull(this.tableFLOCK_DATAMobile.NUM_11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNUM_11Null() {
                this[this.tableFLOCK_DATAMobile.NUM_11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNUM_12Null() {
                return this.IsNull(this.tableFLOCK_DATAMobile.NUM_12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNUM_12Null() {
                this[this.tableFLOCK_DATAMobile.NUM_12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNUM_13Null() {
                return this.IsNull(this.tableFLOCK_DATAMobile.NUM_13Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNUM_13Null() {
                this[this.tableFLOCK_DATAMobile.NUM_13Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTEXT_3Null() {
                return this.IsNull(this.tableFLOCK_DATAMobile.TEXT_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTEXT_3Null() {
                this[this.tableFLOCK_DATAMobile.TEXT_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNUM_14Null() {
                return this.IsNull(this.tableFLOCK_DATAMobile.NUM_14Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNUM_14Null() {
                this[this.tableFLOCK_DATAMobile.NUM_14Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FLOCKSFarmsRow : global::System.Data.DataRow {
            
            private FLOCKSFarmsDataTable tableFLOCKSFarms;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal FLOCKSFarmsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFLOCKSFarms = ((FLOCKSFarmsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FARM_ID {
                get {
                    return ((string)(this[this.tableFLOCKSFarms.FARM_IDColumn]));
                }
                set {
                    this[this.tableFLOCKSFarms.FARM_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LOCATION {
                get {
                    return ((string)(this[this.tableFLOCKSFarms.LOCATIONColumn]));
                }
                set {
                    this[this.tableFLOCKSFarms.LOCATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TEXT_4 {
                get {
                    try {
                        return ((string)(this[this.tableFLOCKSFarms.TEXT_4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'TEXT_4\' na tabela \'FLOCKSFarms\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSFarms.TEXT_4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TEXT_6 {
                get {
                    try {
                        return ((string)(this[this.tableFLOCKSFarms.TEXT_6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'TEXT_6\' na tabela \'FLOCKSFarms\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSFarms.TEXT_6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TEXT_7 {
                get {
                    try {
                        return ((string)(this[this.tableFLOCKSFarms.TEXT_7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'TEXT_7\' na tabela \'FLOCKSFarms\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableFLOCKSFarms.TEXT_7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTEXT_4Null() {
                return this.IsNull(this.tableFLOCKSFarms.TEXT_4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTEXT_4Null() {
                this[this.tableFLOCKSFarms.TEXT_4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTEXT_6Null() {
                return this.IsNull(this.tableFLOCKSFarms.TEXT_6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTEXT_6Null() {
                this[this.tableFLOCKSFarms.TEXT_6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTEXT_7Null() {
                return this.IsNull(this.tableFLOCKSFarms.TEXT_7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTEXT_7Null() {
                this[this.tableFLOCKSFarms.TEXT_7Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class HATCHERY_CODESRow : global::System.Data.DataRow {
            
            private HATCHERY_CODESDataTable tableHATCHERY_CODES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal HATCHERY_CODESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHATCHERY_CODES = ((HATCHERY_CODESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string HATCH_LOC {
                get {
                    return ((string)(this[this.tableHATCHERY_CODES.HATCH_LOCColumn]));
                }
                set {
                    this[this.tableHATCHERY_CODES.HATCH_LOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string HATCH_DESC {
                get {
                    try {
                        return ((string)(this[this.tableHATCHERY_CODES.HATCH_DESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'HATCH_DESC\' na tabela \'HATCHERY_CODES\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableHATCHERY_CODES.HATCH_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal CAPACITY {
                get {
                    try {
                        return ((decimal)(this[this.tableHATCHERY_CODES.CAPACITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'CAPACITY\' na tabela \'HATCHERY_CODES\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableHATCHERY_CODES.CAPACITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ORDENT_LOC {
                get {
                    try {
                        return ((string)(this[this.tableHATCHERY_CODES.ORDENT_LOCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'ORDENT_LOC\' na tabela \'HATCHERY_CODES\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableHATCHERY_CODES.ORDENT_LOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LOCATION {
                get {
                    try {
                        return ((string)(this[this.tableHATCHERY_CODES.LOCATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'LOCATION\' na tabela \'HATCHERY_CODES\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableHATCHERY_CODES.LOCATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REGION {
                get {
                    try {
                        return ((string)(this[this.tableHATCHERY_CODES.REGIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'REGION\' na tabela \'HATCHERY_CODES\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableHATCHERY_CODES.REGIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EQUIPMENT {
                get {
                    try {
                        return ((string)(this[this.tableHATCHERY_CODES.EQUIPMENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'EQUIPMENT\' na tabela \'HATCHERY_CODES\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableHATCHERY_CODES.EQUIPMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TRAY {
                get {
                    try {
                        return ((decimal)(this[this.tableHATCHERY_CODES.TRAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'TRAY\' na tabela \'HATCHERY_CODES\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableHATCHERY_CODES.TRAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PALLET {
                get {
                    try {
                        return ((decimal)(this[this.tableHATCHERY_CODES.PALLETColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'PALLET\' na tabela \'HATCHERY_CODES\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableHATCHERY_CODES.PALLETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal CASE {
                get {
                    try {
                        return ((decimal)(this[this.tableHATCHERY_CODES.CASEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'CASE\' na tabela \'HATCHERY_CODES\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableHATCHERY_CODES.CASEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AUTO_TRANSF {
                get {
                    try {
                        return ((string)(this[this.tableHATCHERY_CODES.AUTO_TRANSFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'AUTO_TRANSF\' na tabela \'HATCHERY_CODES\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableHATCHERY_CODES.AUTO_TRANSFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CLAS_INC {
                get {
                    try {
                        return ((string)(this[this.tableHATCHERY_CODES.CLAS_INCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'CLAS_INC\' na tabela \'HATCHERY_CODES\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableHATCHERY_CODES.CLAS_INCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string COMPANY {
                get {
                    try {
                        return ((string)(this[this.tableHATCHERY_CODES.COMPANYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'COMPANY\' na tabela \'HATCHERY_CODES\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableHATCHERY_CODES.COMPANYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CLAS_EGG {
                get {
                    try {
                        return ((string)(this[this.tableHATCHERY_CODES.CLAS_EGGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'CLAS_EGG\' na tabela \'HATCHERY_CODES\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableHATCHERY_CODES.CLAS_EGGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TYPE_CLAS_EGG {
                get {
                    try {
                        return ((string)(this[this.tableHATCHERY_CODES.TYPE_CLAS_EGGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'TYPE_CLAS_EGG\' na tabela \'HATCHERY_CODES\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableHATCHERY_CODES.TYPE_CLAS_EGGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PERIOD_LAY_DATE_INC {
                get {
                    try {
                        return ((string)(this[this.tableHATCHERY_CODES.PERIOD_LAY_DATE_INCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'PERIOD_LAY_DATE_INC\' na tabela \'HATCHERY_CODES\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableHATCHERY_CODES.PERIOD_LAY_DATE_INCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PERIOD_LAY_DATE_CLAS {
                get {
                    try {
                        return ((string)(this[this.tableHATCHERY_CODES.PERIOD_LAY_DATE_CLASColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'PERIOD_LAY_DATE_CLAS\' na tabela \'HATCHERY_CODES\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableHATCHERY_CODES.PERIOD_LAY_DATE_CLASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHATCH_DESCNull() {
                return this.IsNull(this.tableHATCHERY_CODES.HATCH_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHATCH_DESCNull() {
                this[this.tableHATCHERY_CODES.HATCH_DESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCAPACITYNull() {
                return this.IsNull(this.tableHATCHERY_CODES.CAPACITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCAPACITYNull() {
                this[this.tableHATCHERY_CODES.CAPACITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsORDENT_LOCNull() {
                return this.IsNull(this.tableHATCHERY_CODES.ORDENT_LOCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetORDENT_LOCNull() {
                this[this.tableHATCHERY_CODES.ORDENT_LOCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLOCATIONNull() {
                return this.IsNull(this.tableHATCHERY_CODES.LOCATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLOCATIONNull() {
                this[this.tableHATCHERY_CODES.LOCATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsREGIONNull() {
                return this.IsNull(this.tableHATCHERY_CODES.REGIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetREGIONNull() {
                this[this.tableHATCHERY_CODES.REGIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEQUIPMENTNull() {
                return this.IsNull(this.tableHATCHERY_CODES.EQUIPMENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEQUIPMENTNull() {
                this[this.tableHATCHERY_CODES.EQUIPMENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTRAYNull() {
                return this.IsNull(this.tableHATCHERY_CODES.TRAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTRAYNull() {
                this[this.tableHATCHERY_CODES.TRAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPALLETNull() {
                return this.IsNull(this.tableHATCHERY_CODES.PALLETColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPALLETNull() {
                this[this.tableHATCHERY_CODES.PALLETColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCASENull() {
                return this.IsNull(this.tableHATCHERY_CODES.CASEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCASENull() {
                this[this.tableHATCHERY_CODES.CASEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAUTO_TRANSFNull() {
                return this.IsNull(this.tableHATCHERY_CODES.AUTO_TRANSFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAUTO_TRANSFNull() {
                this[this.tableHATCHERY_CODES.AUTO_TRANSFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCLAS_INCNull() {
                return this.IsNull(this.tableHATCHERY_CODES.CLAS_INCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCLAS_INCNull() {
                this[this.tableHATCHERY_CODES.CLAS_INCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCOMPANYNull() {
                return this.IsNull(this.tableHATCHERY_CODES.COMPANYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCOMPANYNull() {
                this[this.tableHATCHERY_CODES.COMPANYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCLAS_EGGNull() {
                return this.IsNull(this.tableHATCHERY_CODES.CLAS_EGGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCLAS_EGGNull() {
                this[this.tableHATCHERY_CODES.CLAS_EGGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTYPE_CLAS_EGGNull() {
                return this.IsNull(this.tableHATCHERY_CODES.TYPE_CLAS_EGGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTYPE_CLAS_EGGNull() {
                this[this.tableHATCHERY_CODES.TYPE_CLAS_EGGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPERIOD_LAY_DATE_INCNull() {
                return this.IsNull(this.tableHATCHERY_CODES.PERIOD_LAY_DATE_INCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPERIOD_LAY_DATE_INCNull() {
                this[this.tableHATCHERY_CODES.PERIOD_LAY_DATE_INCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPERIOD_LAY_DATE_CLASNull() {
                return this.IsNull(this.tableHATCHERY_CODES.PERIOD_LAY_DATE_CLASColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPERIOD_LAY_DATE_CLASNull() {
                this[this.tableHATCHERY_CODES.PERIOD_LAY_DATE_CLASColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DATA_FECH_LANCRow : global::System.Data.DataRow {
            
            private DATA_FECH_LANCDataTable tableDATA_FECH_LANC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal DATA_FECH_LANCRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDATA_FECH_LANC = ((DATA_FECH_LANCDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATA_FECH_LANC {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDATA_FECH_LANC.DATA_FECH_LANCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'DATA_FECH_LANC\' na tabela \'DATA_FECH_LANC\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableDATA_FECH_LANC.DATA_FECH_LANCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LOCATION {
                get {
                    try {
                        return ((string)(this[this.tableDATA_FECH_LANC.LOCATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'LOCATION\' na tabela \'DATA_FECH_LANC\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tableDATA_FECH_LANC.LOCATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDATA_FECH_LANCNull() {
                return this.IsNull(this.tableDATA_FECH_LANC.DATA_FECH_LANCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDATA_FECH_LANCNull() {
                this[this.tableDATA_FECH_LANC.DATA_FECH_LANCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLOCATIONNull() {
                return this.IsNull(this.tableDATA_FECH_LANC.LOCATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLOCATIONNull() {
                this[this.tableDATA_FECH_LANC.LOCATIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class FLOCKSMobileRowChangeEvent : global::System.EventArgs {
            
            private FLOCKSMobileRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FLOCKSMobileRowChangeEvent(FLOCKSMobileRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FLOCKSMobileRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class FLOCK_DATAMobileRowChangeEvent : global::System.EventArgs {
            
            private FLOCK_DATAMobileRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FLOCK_DATAMobileRowChangeEvent(FLOCK_DATAMobileRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FLOCK_DATAMobileRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class FLOCKSFarmsRowChangeEvent : global::System.EventArgs {
            
            private FLOCKSFarmsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FLOCKSFarmsRowChangeEvent(FLOCKSFarmsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FLOCKSFarmsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class HATCHERY_CODESRowChangeEvent : global::System.EventArgs {
            
            private HATCHERY_CODESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HATCHERY_CODESRowChangeEvent(HATCHERY_CODESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public HATCHERY_CODESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class DATA_FECH_LANCRowChangeEvent : global::System.EventArgs {
            
            private DATA_FECH_LANCRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DATA_FECH_LANCRowChangeEvent(DATA_FECH_LANCRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DATA_FECH_LANCRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace MvcAppHylinedoBrasilMobile.Models.FLIPDataSetMobileTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FLOCKSMobileTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public FLOCKSMobileTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FLOCKSMobile";
            tableMapping.ColumnMappings.Add("COMPANY", "COMPANY");
            tableMapping.ColumnMappings.Add("REGION", "REGION");
            tableMapping.ColumnMappings.Add("LOCATION", "LOCATION");
            tableMapping.ColumnMappings.Add("FARM_ID", "FARM_ID");
            tableMapping.ColumnMappings.Add("ACTIVE", "ACTIVE");
            tableMapping.ColumnMappings.Add("FLOCK_ID", "FLOCK_ID");
            tableMapping.ColumnMappings.Add("PULLET_ID", "PULLET_ID");
            tableMapping.ColumnMappings.Add("VARIETY", "VARIETY");
            tableMapping.ColumnMappings.Add("GEN", "GEN");
            tableMapping.ColumnMappings.Add("HATCH_DATE", "HATCH_DATE");
            tableMapping.ColumnMappings.Add("MOVE_DATE", "MOVE_DATE");
            tableMapping.ColumnMappings.Add("SELL_DATE", "SELL_DATE");
            tableMapping.ColumnMappings.Add("HENS_HATCHED", "HENS_HATCHED");
            tableMapping.ColumnMappings.Add("HENS_MOVED", "HENS_MOVED");
            tableMapping.ColumnMappings.Add("HENS_SOLD", "HENS_SOLD");
            tableMapping.ColumnMappings.Add("MALES_HATCHED", "MALES_HATCHED");
            tableMapping.ColumnMappings.Add("MALES_MOVED", "MALES_MOVED");
            tableMapping.ColumnMappings.Add("MALES_SOLD", "MALES_SOLD");
            tableMapping.ColumnMappings.Add("PULLET_HEN_FC", "PULLET_HEN_FC");
            tableMapping.ColumnMappings.Add("FLOCK_KEY", "FLOCK_KEY");
            tableMapping.ColumnMappings.Add("TEXT_1", "TEXT_1");
            tableMapping.ColumnMappings.Add("NUM_1", "NUM_1");
            tableMapping.ColumnMappings.Add("DATE_1", "DATE_1");
            tableMapping.ColumnMappings.Add("TEXT_2", "TEXT_2");
            tableMapping.ColumnMappings.Add("NUM_2", "NUM_2");
            tableMapping.ColumnMappings.Add("DATE_2", "DATE_2");
            tableMapping.ColumnMappings.Add("FARM_KEY", "FARM_KEY");
            tableMapping.ColumnMappings.Add("TEXT_3", "TEXT_3");
            tableMapping.ColumnMappings.Add("NUM_3", "NUM_3");
            tableMapping.ColumnMappings.Add("TEXT_4", "TEXT_4");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"NA\".\"FLOCKS\" WHERE ((\"COMPANY\" = :Original_COMPANY) AND (\"REGION\" = " +
                ":Original_REGION) AND (\"LOCATION\" = :Original_LOCATION) AND (\"FARM_ID\" = :Origin" +
                "al_FARM_ID) AND (\"FLOCK_ID\" = :Original_FLOCK_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COMPANY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPANY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_REGION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "REGION", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOCATION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOCATION", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FARM_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FARM_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FLOCK_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FLOCK_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""NA"".""FLOCKS"" (""COMPANY"", ""REGION"", ""LOCATION"", ""FARM_ID"", ""ACTIVE"", ""FLOCK_ID"", ""PULLET_ID"", ""VARIETY"", ""GEN"", ""HATCH_DATE"", ""MOVE_DATE"", ""SELL_DATE"", ""HENS_HATCHED"", ""HENS_MOVED"", ""HENS_SOLD"", ""MALES_HATCHED"", ""MALES_MOVED"", ""MALES_SOLD"", ""PULLET_HEN_FC"", ""FLOCK_KEY"", ""TEXT_1"", ""NUM_1"", ""DATE_1"", ""TEXT_2"", ""NUM_2"", ""DATE_2"", ""FARM_KEY"", ""TEXT_3"", ""NUM_3"", ""TEXT_4"") VALUES (:COMPANY, :REGION, :LOCATION, :FARM_ID, :ACTIVE, :FLOCK_ID, :PULLET_ID, :VARIETY, :GEN, :HATCH_DATE, :MOVE_DATE, :SELL_DATE, :HENS_HATCHED, :HENS_MOVED, :HENS_SOLD, :MALES_HATCHED, :MALES_MOVED, :MALES_SOLD, :PULLET_HEN_FC, :FLOCK_KEY, :TEXT_1, :NUM_1, :DATE_1, :TEXT_2, :NUM_2, :DATE_2, :FARM_KEY, :TEXT_3, :NUM_3, :TEXT_4)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COMPANY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPANY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REGION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "REGION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOCATION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOCATION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FARM_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FARM_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACTIVE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ACTIVE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOCK_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FLOCK_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PULLET_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PULLET_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("VARIETY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "VARIETY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GEN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GEN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HATCH_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "HATCH_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MOVE_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MOVE_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SELL_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "SELL_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HENS_HATCHED", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "HENS_HATCHED", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HENS_MOVED", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "HENS_MOVED", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HENS_SOLD", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "HENS_SOLD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MALES_HATCHED", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MALES_HATCHED", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MALES_MOVED", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MALES_MOVED", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MALES_SOLD", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MALES_SOLD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PULLET_HEN_FC", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "PULLET_HEN_FC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOCK_KEY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FLOCK_KEY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEXT_1", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEXT_1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_1", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DATE_1", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DATE_1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEXT_2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEXT_2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DATE_2", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DATE_2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FARM_KEY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FARM_KEY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEXT_3", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEXT_3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_3", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEXT_4", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEXT_4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""NA"".""FLOCKS"" SET ""COMPANY"" = :COMPANY, ""REGION"" = :REGION, ""LOCATION"" = :LOCATION, ""FARM_ID"" = :FARM_ID, ""ACTIVE"" = :ACTIVE, ""FLOCK_ID"" = :FLOCK_ID, ""PULLET_ID"" = :PULLET_ID, ""VARIETY"" = :VARIETY, ""GEN"" = :GEN, ""HATCH_DATE"" = :HATCH_DATE, ""MOVE_DATE"" = :MOVE_DATE, ""SELL_DATE"" = :SELL_DATE, ""HENS_HATCHED"" = :HENS_HATCHED, ""HENS_MOVED"" = :HENS_MOVED, ""HENS_SOLD"" = :HENS_SOLD, ""MALES_HATCHED"" = :MALES_HATCHED, ""MALES_MOVED"" = :MALES_MOVED, ""MALES_SOLD"" = :MALES_SOLD, ""PULLET_HEN_FC"" = :PULLET_HEN_FC, ""FLOCK_KEY"" = :FLOCK_KEY, ""TEXT_1"" = :TEXT_1, ""NUM_1"" = :NUM_1, ""DATE_1"" = :DATE_1, ""TEXT_2"" = :TEXT_2, ""NUM_2"" = :NUM_2, ""DATE_2"" = :DATE_2, ""FARM_KEY"" = :FARM_KEY, ""TEXT_3"" = :TEXT_3, ""NUM_3"" = :NUM_3, ""TEXT_4"" = :TEXT_4 WHERE ((""COMPANY"" = :Original_COMPANY) AND (""REGION"" = :Original_REGION) AND (""LOCATION"" = :Original_LOCATION) AND (""FARM_ID"" = :Original_FARM_ID) AND (""FLOCK_ID"" = :Original_FLOCK_ID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COMPANY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPANY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REGION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "REGION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOCATION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOCATION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FARM_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FARM_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACTIVE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ACTIVE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOCK_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FLOCK_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PULLET_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PULLET_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("VARIETY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "VARIETY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GEN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GEN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HATCH_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "HATCH_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MOVE_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "MOVE_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SELL_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "SELL_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HENS_HATCHED", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "HENS_HATCHED", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HENS_MOVED", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "HENS_MOVED", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HENS_SOLD", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "HENS_SOLD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MALES_HATCHED", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MALES_HATCHED", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MALES_MOVED", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MALES_MOVED", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MALES_SOLD", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MALES_SOLD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PULLET_HEN_FC", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "PULLET_HEN_FC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOCK_KEY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FLOCK_KEY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEXT_1", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEXT_1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_1", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DATE_1", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DATE_1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEXT_2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEXT_2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DATE_2", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DATE_2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FARM_KEY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FARM_KEY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEXT_3", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEXT_3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_3", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEXT_4", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEXT_4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COMPANY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPANY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_REGION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "REGION", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOCATION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOCATION", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FARM_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FARM_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FLOCK_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FLOCK_ID", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["Oracle"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[7];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT COMPANY, REGION, LOCATION, FARM_ID, ACTIVE, FLOCK_ID, PULLET_ID, VARIETY, GEN, HATCH_DATE, MOVE_DATE, SELL_DATE, HENS_HATCHED, HENS_MOVED, HENS_SOLD, MALES_HATCHED, MALES_MOVED, MALES_SOLD, PULLET_HEN_FC, FLOCK_KEY, TEXT_1, NUM_1, DATE_1, TEXT_2, NUM_2, DATE_2, FARM_KEY, TEXT_3, NUM_3, TEXT_4 FROM NA.FLOCKS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM \"NA\".\"FLOCKS\" WHERE ((\"FLOCK_ID\" = :Original_FLOCK_ID))";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FLOCK_ID", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "FLOCK_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[2] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT COUNT(*) FROM FLOCKS\r\nWHERE FLOCK_ID = :FLOCK_ID";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOCK_ID", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "FLOCK_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT COMPANY, REGION, LOCATION, FARM_ID, ACTIVE, FLOCK_ID, PULLET_ID, VARIETY, GEN, HATCH_DATE, MOVE_DATE, SELL_DATE, HENS_HATCHED, HENS_MOVED, HENS_SOLD, MALES_HATCHED, MALES_MOVED, MALES_SOLD, PULLET_HEN_FC, FLOCK_KEY, TEXT_1, NUM_1, DATE_1, TEXT_2, NUM_2, DATE_2, FARM_KEY, TEXT_3, NUM_3, TEXT_4 FROM NA.FLOCKS
WHERE FARM_ID = :FARM_ID AND NUM_2 =:NUM_GALPAO
AND HATCH_DATE IS NOT NULL";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FARM_ID", global::System.Data.OracleClient.OracleType.VarChar, 5, global::System.Data.ParameterDirection.Input, "FARM_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_GALPAO", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "NUM_2", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = @"SELECT COMPANY, REGION, LOCATION, FARM_ID, ACTIVE, FLOCK_ID, PULLET_ID, VARIETY, GEN, HATCH_DATE, MOVE_DATE, SELL_DATE, HENS_HATCHED, HENS_MOVED, HENS_SOLD, MALES_HATCHED, MALES_MOVED, MALES_SOLD, PULLET_HEN_FC, FLOCK_KEY, TEXT_1, NUM_1, DATE_1, TEXT_2, NUM_2, DATE_2, FARM_KEY, TEXT_3, NUM_3, TEXT_4 FROM NA.FLOCKS
WHERE FLOCK_ID = :FLOCK_ID";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOCK_ID", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "FLOCK_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "INSERT INTO \"NA\".\"FLOCKS\" (\"COMPANY\", \"REGION\", \"LOCATION\", \"FARM_ID\", \"ACTIVE\", " +
                "\"FLOCK_ID\", \"PULLET_ID\", \"VARIETY\", \"GEN\", \"HATCH_DATE\") VALUES (:COMPANY, :REGI" +
                "ON, :LOCATION, :FARM_ID, :ACTIVE, :FLOCK_ID, :PULLET_ID, :VARIETY, :GEN, :HATCH_" +
                "DATE)";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COMPANY", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "COMPANY", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REGION", global::System.Data.OracleClient.OracleType.VarChar, 2, global::System.Data.ParameterDirection.Input, "REGION", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOCATION", global::System.Data.OracleClient.OracleType.VarChar, 2, global::System.Data.ParameterDirection.Input, "LOCATION", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FARM_ID", global::System.Data.OracleClient.OracleType.VarChar, 5, global::System.Data.ParameterDirection.Input, "FARM_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACTIVE", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "ACTIVE", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOCK_ID", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "FLOCK_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PULLET_ID", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "PULLET_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("VARIETY", global::System.Data.OracleClient.OracleType.VarChar, 10, global::System.Data.ParameterDirection.Input, "VARIETY", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GEN", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GEN", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HATCH_DATE", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "HATCH_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "SELECT MAX(FLOCK_KEY) FROM FLOCKS\r\nWHERE FLOCK_ID = :FLOCK_ID";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOCK_ID", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "FLOCK_ID", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FLIPDataSetMobile.FLOCKSMobileDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FLIPDataSetMobile.FLOCKSMobileDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FLIPDataSetMobile.FLOCKSMobileDataTable dataTable = new FLIPDataSetMobile.FLOCKSMobileDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByFarmIdAndNumGalpao(FLIPDataSetMobile.FLOCKSMobileDataTable dataTable, string FARM_ID, global::System.Nullable<decimal> NUM_GALPAO) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((FARM_ID == null)) {
                throw new global::System.ArgumentNullException("FARM_ID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(FARM_ID));
            }
            if ((NUM_GALPAO.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(NUM_GALPAO.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual FLIPDataSetMobile.FLOCKSMobileDataTable GetDataBy4(string FARM_ID, global::System.Nullable<decimal> NUM_GALPAO) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((FARM_ID == null)) {
                throw new global::System.ArgumentNullException("FARM_ID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(FARM_ID));
            }
            if ((NUM_GALPAO.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(NUM_GALPAO.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            FLIPDataSetMobile.FLOCKSMobileDataTable dataTable = new FLIPDataSetMobile.FLOCKSMobileDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByFlockID(FLIPDataSetMobile.FLOCKSMobileDataTable dataTable, string FLOCK_ID) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((FLOCK_ID == null)) {
                throw new global::System.ArgumentNullException("FLOCK_ID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(FLOCK_ID));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual FLIPDataSetMobile.FLOCKSMobileDataTable GetDataByFlockID(string FLOCK_ID) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((FLOCK_ID == null)) {
                throw new global::System.ArgumentNullException("FLOCK_ID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(FLOCK_ID));
            }
            FLIPDataSetMobile.FLOCKSMobileDataTable dataTable = new FLIPDataSetMobile.FLOCKSMobileDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FLIPDataSetMobile.FLOCKSMobileDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FLIPDataSetMobile dataSet) {
            return this.Adapter.Update(dataSet, "FLOCKSMobile");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_COMPANY, string Original_REGION, string Original_LOCATION, string Original_FARM_ID, string Original_FLOCK_ID) {
            if ((Original_COMPANY == null)) {
                throw new global::System.ArgumentNullException("Original_COMPANY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_COMPANY));
            }
            if ((Original_REGION == null)) {
                throw new global::System.ArgumentNullException("Original_REGION");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_REGION));
            }
            if ((Original_LOCATION == null)) {
                throw new global::System.ArgumentNullException("Original_LOCATION");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_LOCATION));
            }
            if ((Original_FARM_ID == null)) {
                throw new global::System.ArgumentNullException("Original_FARM_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_FARM_ID));
            }
            if ((Original_FLOCK_ID == null)) {
                throw new global::System.ArgumentNullException("Original_FLOCK_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_FLOCK_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string COMPANY, 
                    string REGION, 
                    string LOCATION, 
                    string FARM_ID, 
                    decimal ACTIVE, 
                    string FLOCK_ID, 
                    string PULLET_ID, 
                    string VARIETY, 
                    global::System.Nullable<decimal> GEN, 
                    global::System.Nullable<global::System.DateTime> HATCH_DATE, 
                    global::System.Nullable<global::System.DateTime> MOVE_DATE, 
                    global::System.Nullable<global::System.DateTime> SELL_DATE, 
                    global::System.Nullable<decimal> HENS_HATCHED, 
                    global::System.Nullable<decimal> HENS_MOVED, 
                    global::System.Nullable<decimal> HENS_SOLD, 
                    global::System.Nullable<decimal> MALES_HATCHED, 
                    global::System.Nullable<decimal> MALES_MOVED, 
                    global::System.Nullable<decimal> MALES_SOLD, 
                    global::System.Nullable<decimal> PULLET_HEN_FC, 
                    string FLOCK_KEY, 
                    string TEXT_1, 
                    global::System.Nullable<decimal> NUM_1, 
                    global::System.Nullable<global::System.DateTime> DATE_1, 
                    string TEXT_2, 
                    global::System.Nullable<decimal> NUM_2, 
                    global::System.Nullable<global::System.DateTime> DATE_2, 
                    string FARM_KEY, 
                    string TEXT_3, 
                    global::System.Nullable<decimal> NUM_3, 
                    string TEXT_4) {
            if ((COMPANY == null)) {
                throw new global::System.ArgumentNullException("COMPANY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(COMPANY));
            }
            if ((REGION == null)) {
                throw new global::System.ArgumentNullException("REGION");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(REGION));
            }
            if ((LOCATION == null)) {
                throw new global::System.ArgumentNullException("LOCATION");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(LOCATION));
            }
            if ((FARM_ID == null)) {
                throw new global::System.ArgumentNullException("FARM_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(FARM_ID));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(ACTIVE));
            if ((FLOCK_ID == null)) {
                throw new global::System.ArgumentNullException("FLOCK_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(FLOCK_ID));
            }
            if ((PULLET_ID == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(PULLET_ID));
            }
            if ((VARIETY == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(VARIETY));
            }
            if ((GEN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(GEN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((HATCH_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(HATCH_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((MOVE_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(MOVE_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((SELL_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(SELL_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((HENS_HATCHED.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(HENS_HATCHED.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((HENS_MOVED.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(HENS_MOVED.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((HENS_SOLD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(HENS_SOLD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((MALES_HATCHED.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(MALES_HATCHED.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((MALES_MOVED.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(MALES_MOVED.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((MALES_SOLD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(MALES_SOLD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((PULLET_HEN_FC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(PULLET_HEN_FC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((FLOCK_KEY == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(FLOCK_KEY));
            }
            if ((TEXT_1 == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(TEXT_1));
            }
            if ((NUM_1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(NUM_1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((DATE_1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((System.DateTime)(DATE_1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((TEXT_2 == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(TEXT_2));
            }
            if ((NUM_2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(NUM_2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((DATE_2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((System.DateTime)(DATE_2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((FARM_KEY == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(FARM_KEY));
            }
            if ((TEXT_3 == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(TEXT_3));
            }
            if ((NUM_3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(NUM_3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((TEXT_4 == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(TEXT_4));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string COMPANY, 
                    string REGION, 
                    string LOCATION, 
                    string FARM_ID, 
                    decimal ACTIVE, 
                    string FLOCK_ID, 
                    string PULLET_ID, 
                    string VARIETY, 
                    global::System.Nullable<decimal> GEN, 
                    global::System.Nullable<global::System.DateTime> HATCH_DATE, 
                    global::System.Nullable<global::System.DateTime> MOVE_DATE, 
                    global::System.Nullable<global::System.DateTime> SELL_DATE, 
                    global::System.Nullable<decimal> HENS_HATCHED, 
                    global::System.Nullable<decimal> HENS_MOVED, 
                    global::System.Nullable<decimal> HENS_SOLD, 
                    global::System.Nullable<decimal> MALES_HATCHED, 
                    global::System.Nullable<decimal> MALES_MOVED, 
                    global::System.Nullable<decimal> MALES_SOLD, 
                    global::System.Nullable<decimal> PULLET_HEN_FC, 
                    string FLOCK_KEY, 
                    string TEXT_1, 
                    global::System.Nullable<decimal> NUM_1, 
                    global::System.Nullable<global::System.DateTime> DATE_1, 
                    string TEXT_2, 
                    global::System.Nullable<decimal> NUM_2, 
                    global::System.Nullable<global::System.DateTime> DATE_2, 
                    string FARM_KEY, 
                    string TEXT_3, 
                    global::System.Nullable<decimal> NUM_3, 
                    string TEXT_4, 
                    string Original_COMPANY, 
                    string Original_REGION, 
                    string Original_LOCATION, 
                    string Original_FARM_ID, 
                    string Original_FLOCK_ID) {
            if ((COMPANY == null)) {
                throw new global::System.ArgumentNullException("COMPANY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(COMPANY));
            }
            if ((REGION == null)) {
                throw new global::System.ArgumentNullException("REGION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(REGION));
            }
            if ((LOCATION == null)) {
                throw new global::System.ArgumentNullException("LOCATION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(LOCATION));
            }
            if ((FARM_ID == null)) {
                throw new global::System.ArgumentNullException("FARM_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(FARM_ID));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(ACTIVE));
            if ((FLOCK_ID == null)) {
                throw new global::System.ArgumentNullException("FLOCK_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(FLOCK_ID));
            }
            if ((PULLET_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(PULLET_ID));
            }
            if ((VARIETY == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(VARIETY));
            }
            if ((GEN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(GEN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((HATCH_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(HATCH_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((MOVE_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(MOVE_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((SELL_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(SELL_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((HENS_HATCHED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(HENS_HATCHED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((HENS_MOVED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(HENS_MOVED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((HENS_SOLD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(HENS_SOLD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((MALES_HATCHED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(MALES_HATCHED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((MALES_MOVED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(MALES_MOVED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((MALES_SOLD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(MALES_SOLD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((PULLET_HEN_FC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(PULLET_HEN_FC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((FLOCK_KEY == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(FLOCK_KEY));
            }
            if ((TEXT_1 == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(TEXT_1));
            }
            if ((NUM_1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(NUM_1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((DATE_1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(DATE_1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((TEXT_2 == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(TEXT_2));
            }
            if ((NUM_2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(NUM_2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((DATE_2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(DATE_2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((FARM_KEY == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(FARM_KEY));
            }
            if ((TEXT_3 == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(TEXT_3));
            }
            if ((NUM_3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(NUM_3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((TEXT_4 == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(TEXT_4));
            }
            if ((Original_COMPANY == null)) {
                throw new global::System.ArgumentNullException("Original_COMPANY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_COMPANY));
            }
            if ((Original_REGION == null)) {
                throw new global::System.ArgumentNullException("Original_REGION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_REGION));
            }
            if ((Original_LOCATION == null)) {
                throw new global::System.ArgumentNullException("Original_LOCATION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_LOCATION));
            }
            if ((Original_FARM_ID == null)) {
                throw new global::System.ArgumentNullException("Original_FARM_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_FARM_ID));
            }
            if ((Original_FLOCK_ID == null)) {
                throw new global::System.ArgumentNullException("Original_FLOCK_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_FLOCK_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal ACTIVE, 
                    string PULLET_ID, 
                    string VARIETY, 
                    global::System.Nullable<decimal> GEN, 
                    global::System.Nullable<global::System.DateTime> HATCH_DATE, 
                    global::System.Nullable<global::System.DateTime> MOVE_DATE, 
                    global::System.Nullable<global::System.DateTime> SELL_DATE, 
                    global::System.Nullable<decimal> HENS_HATCHED, 
                    global::System.Nullable<decimal> HENS_MOVED, 
                    global::System.Nullable<decimal> HENS_SOLD, 
                    global::System.Nullable<decimal> MALES_HATCHED, 
                    global::System.Nullable<decimal> MALES_MOVED, 
                    global::System.Nullable<decimal> MALES_SOLD, 
                    global::System.Nullable<decimal> PULLET_HEN_FC, 
                    string FLOCK_KEY, 
                    string TEXT_1, 
                    global::System.Nullable<decimal> NUM_1, 
                    global::System.Nullable<global::System.DateTime> DATE_1, 
                    string TEXT_2, 
                    global::System.Nullable<decimal> NUM_2, 
                    global::System.Nullable<global::System.DateTime> DATE_2, 
                    string FARM_KEY, 
                    string TEXT_3, 
                    global::System.Nullable<decimal> NUM_3, 
                    string TEXT_4, 
                    string Original_COMPANY, 
                    string Original_REGION, 
                    string Original_LOCATION, 
                    string Original_FARM_ID, 
                    string Original_FLOCK_ID) {
            return this.Update(Original_COMPANY, Original_REGION, Original_LOCATION, Original_FARM_ID, ACTIVE, Original_FLOCK_ID, PULLET_ID, VARIETY, GEN, HATCH_DATE, MOVE_DATE, SELL_DATE, HENS_HATCHED, HENS_MOVED, HENS_SOLD, MALES_HATCHED, MALES_MOVED, MALES_SOLD, PULLET_HEN_FC, FLOCK_KEY, TEXT_1, NUM_1, DATE_1, TEXT_2, NUM_2, DATE_2, FARM_KEY, TEXT_3, NUM_3, TEXT_4, Original_COMPANY, Original_REGION, Original_LOCATION, Original_FARM_ID, Original_FLOCK_ID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteFlockID(string Original_FLOCK_ID) {
            global::System.Data.OracleClient.OracleCommand command = this.CommandCollection[1];
            if ((Original_FLOCK_ID == null)) {
                throw new global::System.ArgumentNullException("Original_FLOCK_ID");
            }
            else {
                command.Parameters[0].Value = ((string)(Original_FLOCK_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<decimal> ExistsFlockID(string FLOCK_ID) {
            global::System.Data.OracleClient.OracleCommand command = this.CommandCollection[2];
            if ((FLOCK_ID == null)) {
                throw new global::System.ArgumentNullException("FLOCK_ID");
            }
            else {
                command.Parameters[0].Value = ((string)(FLOCK_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<decimal>();
            }
            else {
                return new global::System.Nullable<decimal>(((decimal)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertQuery(string COMPANY, string REGION, string LOCATION, string FARM_ID, decimal ACTIVE, string FLOCK_ID, string PULLET_ID, string VARIETY, global::System.Nullable<decimal> GEN, global::System.Nullable<global::System.DateTime> HATCH_DATE) {
            global::System.Data.OracleClient.OracleCommand command = this.CommandCollection[5];
            if ((COMPANY == null)) {
                throw new global::System.ArgumentNullException("COMPANY");
            }
            else {
                command.Parameters[0].Value = ((string)(COMPANY));
            }
            if ((REGION == null)) {
                throw new global::System.ArgumentNullException("REGION");
            }
            else {
                command.Parameters[1].Value = ((string)(REGION));
            }
            if ((LOCATION == null)) {
                throw new global::System.ArgumentNullException("LOCATION");
            }
            else {
                command.Parameters[2].Value = ((string)(LOCATION));
            }
            if ((FARM_ID == null)) {
                throw new global::System.ArgumentNullException("FARM_ID");
            }
            else {
                command.Parameters[3].Value = ((string)(FARM_ID));
            }
            command.Parameters[4].Value = ((decimal)(ACTIVE));
            if ((FLOCK_ID == null)) {
                throw new global::System.ArgumentNullException("FLOCK_ID");
            }
            else {
                command.Parameters[5].Value = ((string)(FLOCK_ID));
            }
            if ((PULLET_ID == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(PULLET_ID));
            }
            if ((VARIETY == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(VARIETY));
            }
            if ((GEN.HasValue == true)) {
                command.Parameters[8].Value = ((decimal)(GEN.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((HATCH_DATE.HasValue == true)) {
                command.Parameters[9].Value = ((System.DateTime)(HATCH_DATE.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string ReturnFlockKey(string FLOCK_ID) {
            global::System.Data.OracleClient.OracleCommand command = this.CommandCollection[6];
            if ((FLOCK_ID == null)) {
                throw new global::System.ArgumentNullException("FLOCK_ID");
            }
            else {
                command.Parameters[0].Value = ((string)(FLOCK_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FLOCK_DATAMobileTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public FLOCK_DATAMobileTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FLOCK_DATAMobile";
            tableMapping.ColumnMappings.Add("COMPANY", "COMPANY");
            tableMapping.ColumnMappings.Add("REGION", "REGION");
            tableMapping.ColumnMappings.Add("LOCATION", "LOCATION");
            tableMapping.ColumnMappings.Add("FARM_ID", "FARM_ID");
            tableMapping.ColumnMappings.Add("FLOCK_ID", "FLOCK_ID");
            tableMapping.ColumnMappings.Add("ACTIVE", "ACTIVE");
            tableMapping.ColumnMappings.Add("TRX_DATE", "TRX_DATE");
            tableMapping.ColumnMappings.Add("AGE", "AGE");
            tableMapping.ColumnMappings.Add("HEN_MORT", "HEN_MORT");
            tableMapping.ColumnMappings.Add("HEN_WT", "HEN_WT");
            tableMapping.ColumnMappings.Add("MALE_MORT", "MALE_MORT");
            tableMapping.ColumnMappings.Add("HEN_FEED_DEL", "HEN_FEED_DEL");
            tableMapping.ColumnMappings.Add("TOTAL_EGGS_PROD", "TOTAL_EGGS_PROD");
            tableMapping.ColumnMappings.Add("EGG_WT", "EGG_WT");
            tableMapping.ColumnMappings.Add("FLOCK_KEY", "FLOCK_KEY");
            tableMapping.ColumnMappings.Add("DATE_1", "DATE_1");
            tableMapping.ColumnMappings.Add("DATE_2", "DATE_2");
            tableMapping.ColumnMappings.Add("TEXT_1", "TEXT_1");
            tableMapping.ColumnMappings.Add("TEXT_2", "TEXT_2");
            tableMapping.ColumnMappings.Add("NUM_1", "NUM_1");
            tableMapping.ColumnMappings.Add("NUM_2", "NUM_2");
            tableMapping.ColumnMappings.Add("NUM_3", "NUM_3");
            tableMapping.ColumnMappings.Add("NUM_4", "NUM_4");
            tableMapping.ColumnMappings.Add("NUM_5", "NUM_5");
            tableMapping.ColumnMappings.Add("NUM_6", "NUM_6");
            tableMapping.ColumnMappings.Add("NUM_7", "NUM_7");
            tableMapping.ColumnMappings.Add("NUM_8", "NUM_8");
            tableMapping.ColumnMappings.Add("NUM_9", "NUM_9");
            tableMapping.ColumnMappings.Add("NUM_10", "NUM_10");
            tableMapping.ColumnMappings.Add("NUM_11", "NUM_11");
            tableMapping.ColumnMappings.Add("NUM_12", "NUM_12");
            tableMapping.ColumnMappings.Add("NUM_13", "NUM_13");
            tableMapping.ColumnMappings.Add("TEXT_3", "TEXT_3");
            tableMapping.ColumnMappings.Add("NUM_14", "NUM_14");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"NA\".\"FLOCK_DATA\" WHERE ((\"COMPANY\" = :Original_COMPANY) AND (\"REGION" +
                "\" = :Original_REGION) AND (\"LOCATION\" = :Original_LOCATION) AND (\"FARM_ID\" = :Or" +
                "iginal_FARM_ID) AND (\"FLOCK_ID\" = :Original_FLOCK_ID) AND (\"TRX_DATE\" = :Origina" +
                "l_TRX_DATE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COMPANY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPANY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_REGION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "REGION", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOCATION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOCATION", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FARM_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FARM_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FLOCK_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FLOCK_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TRX_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TRX_DATE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""NA"".""FLOCK_DATA"" (""COMPANY"", ""REGION"", ""LOCATION"", ""FARM_ID"", ""FLOCK_ID"", ""ACTIVE"", ""TRX_DATE"", ""AGE"", ""HEN_MORT"", ""HEN_WT"", ""MALE_MORT"", ""HEN_FEED_DEL"", ""TOTAL_EGGS_PROD"", ""EGG_WT"", ""FLOCK_KEY"", ""DATE_1"", ""DATE_2"", ""TEXT_1"", ""TEXT_2"", ""NUM_1"", ""NUM_2"", ""NUM_3"", ""NUM_4"", ""NUM_5"", ""NUM_6"", ""NUM_7"", ""NUM_8"", ""NUM_9"", ""NUM_10"", ""NUM_11"", ""NUM_12"", ""NUM_13"", ""TEXT_3"", ""NUM_14"") VALUES (:COMPANY, :REGION, :LOCATION, :FARM_ID, :FLOCK_ID, :ACTIVE, :TRX_DATE, :AGE, :HEN_MORT, :HEN_WT, :MALE_MORT, :HEN_FEED_DEL, :TOTAL_EGGS_PROD, :EGG_WT, :FLOCK_KEY, :DATE_1, :DATE_2, :TEXT_1, :TEXT_2, :NUM_1, :NUM_2, :NUM_3, :NUM_4, :NUM_5, :NUM_6, :NUM_7, :NUM_8, :NUM_9, :NUM_10, :NUM_11, :NUM_12, :NUM_13, :TEXT_3, :NUM_14)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COMPANY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPANY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REGION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "REGION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOCATION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOCATION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FARM_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FARM_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOCK_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FLOCK_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACTIVE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ACTIVE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TRX_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TRX_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("AGE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "AGE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HEN_MORT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "HEN_MORT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HEN_WT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "HEN_WT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MALE_MORT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MALE_MORT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HEN_FEED_DEL", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "HEN_FEED_DEL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TOTAL_EGGS_PROD", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TOTAL_EGGS_PROD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("EGG_WT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "EGG_WT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOCK_KEY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FLOCK_KEY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DATE_1", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DATE_1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DATE_2", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DATE_2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEXT_1", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEXT_1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEXT_2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEXT_2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_1", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_3", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_4", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_5", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_5", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_6", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_6", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_7", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_7", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_8", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_8", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_9", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_9", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_10", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_10", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_11", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_11", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_12", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_12", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_13", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_13", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEXT_3", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEXT_3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_14", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_14", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""NA"".""FLOCK_DATA"" SET ""COMPANY"" = :COMPANY, ""REGION"" = :REGION, ""LOCATION"" = :LOCATION, ""FARM_ID"" = :FARM_ID, ""FLOCK_ID"" = :FLOCK_ID, ""ACTIVE"" = :ACTIVE, ""TRX_DATE"" = :TRX_DATE, ""AGE"" = :AGE, ""HEN_MORT"" = :HEN_MORT, ""HEN_WT"" = :HEN_WT, ""MALE_MORT"" = :MALE_MORT, ""HEN_FEED_DEL"" = :HEN_FEED_DEL, ""TOTAL_EGGS_PROD"" = :TOTAL_EGGS_PROD, ""EGG_WT"" = :EGG_WT, ""FLOCK_KEY"" = :FLOCK_KEY, ""DATE_1"" = :DATE_1, ""DATE_2"" = :DATE_2, ""TEXT_1"" = :TEXT_1, ""TEXT_2"" = :TEXT_2, ""NUM_1"" = :NUM_1, ""NUM_2"" = :NUM_2, ""NUM_3"" = :NUM_3, ""NUM_4"" = :NUM_4, ""NUM_5"" = :NUM_5, ""NUM_6"" = :NUM_6, ""NUM_7"" = :NUM_7, ""NUM_8"" = :NUM_8, ""NUM_9"" = :NUM_9, ""NUM_10"" = :NUM_10, ""NUM_11"" = :NUM_11, ""NUM_12"" = :NUM_12, ""NUM_13"" = :NUM_13, ""TEXT_3"" = :TEXT_3, ""NUM_14"" = :NUM_14 WHERE ((""COMPANY"" = :Original_COMPANY) AND (""REGION"" = :Original_REGION) AND (""LOCATION"" = :Original_LOCATION) AND (""FARM_ID"" = :Original_FARM_ID) AND (""FLOCK_ID"" = :Original_FLOCK_ID) AND (""TRX_DATE"" = :Original_TRX_DATE))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COMPANY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPANY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REGION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "REGION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOCATION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOCATION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FARM_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FARM_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOCK_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FLOCK_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACTIVE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ACTIVE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TRX_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TRX_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("AGE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "AGE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HEN_MORT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "HEN_MORT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HEN_WT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "HEN_WT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MALE_MORT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MALE_MORT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HEN_FEED_DEL", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "HEN_FEED_DEL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TOTAL_EGGS_PROD", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TOTAL_EGGS_PROD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("EGG_WT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "EGG_WT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOCK_KEY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FLOCK_KEY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DATE_1", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DATE_1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DATE_2", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DATE_2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEXT_1", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEXT_1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEXT_2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEXT_2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_1", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_3", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_4", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_5", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_5", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_6", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_6", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_7", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_7", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_8", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_8", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_9", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_9", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_10", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_10", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_11", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_11", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_12", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_12", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_13", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_13", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEXT_3", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TEXT_3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_14", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_14", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_COMPANY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPANY", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_REGION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "REGION", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LOCATION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOCATION", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FARM_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FARM_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FLOCK_ID", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FLOCK_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TRX_DATE", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TRX_DATE", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["Oracle"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[11];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT COMPANY, REGION, LOCATION, FARM_ID, FLOCK_ID, ACTIVE, TRX_DATE, AGE, HEN_MORT, HEN_WT, MALE_MORT, HEN_FEED_DEL, TOTAL_EGGS_PROD, EGG_WT, FLOCK_KEY, DATE_1, DATE_2, TEXT_1, TEXT_2, NUM_1, NUM_2, NUM_3, NUM_4, NUM_5, NUM_6, NUM_7, NUM_8, NUM_9, NUM_10, NUM_11, NUM_12, NUM_13, TEXT_3, NUM_14 FROM NA.FLOCK_DATA";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT MAX(FD.AGE) Age\r\nFROM  FLOCKS F, FLOCK_DATA FD\r\nwhere\r\n  F.FLOCK_KEY = FD." +
                "Flock_Key AND\r\n  F.FARM_ID = :Nucleo AND\r\n  F.NUM_2 = :Galpao AND\r\n  F.VARIETY =" +
                " :Linhagem AND\r\n  FD.TRX_DATE = :UltimaData";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Nucleo", global::System.Data.OracleClient.OracleType.VarChar, 5, global::System.Data.ParameterDirection.Input, "FARM_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Galpao", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "NUM_2", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Linhagem", global::System.Data.OracleClient.OracleType.VarChar, 10, global::System.Data.ParameterDirection.Input, "VARIETY", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UltimaData", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "TRX_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "DELETE FROM \"NA\".\"FLOCK_DATA\" WHERE ((\"FLOCK_ID\" = :Original_FLOCK_ID) AND (\"TRX_" +
                "DATE\" = :Original_TRX_DATE))";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FLOCK_ID", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "FLOCK_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[2].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TRX_DATE", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "TRX_DATE", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[3] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT COUNT(*) FROM FLOCK_DATA\r\nWHERE FLOCK_ID = :FLOCK_ID";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOCK_ID", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "FLOCK_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = @"SELECT COMPANY, REGION, LOCATION, FARM_ID, FLOCK_ID, ACTIVE, TRX_DATE, AGE, HEN_MORT, HEN_WT, MALE_MORT, HEN_FEED_DEL, TOTAL_EGGS_PROD, EGG_WT, FLOCK_KEY, DATE_1, DATE_2, TEXT_1, TEXT_2, NUM_1, NUM_2, NUM_3, NUM_4, NUM_5, NUM_6, NUM_7, NUM_8, NUM_9, NUM_10, NUM_11, NUM_12, NUM_13, TEXT_3, NUM_14 FROM NA.FLOCK_DATA
WHERE FLOCK_ID = :FLOCK_ID AND TRX_DATE = :TRX_DATE";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOCK_ID", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "FLOCK_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TRX_DATE", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "TRX_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = @"SELECT COMPANY, REGION, LOCATION, FARM_ID, FLOCK_ID, ACTIVE, TRX_DATE, AGE, HEN_MORT, HEN_WT, MALE_MORT, HEN_FEED_DEL, TOTAL_EGGS_PROD, EGG_WT, FLOCK_KEY, DATE_1, DATE_2, TEXT_1, TEXT_2, NUM_1, NUM_2, NUM_3, NUM_4, NUM_5, NUM_6, NUM_7, NUM_8, NUM_9, NUM_10, NUM_11, NUM_12, NUM_13, TEXT_3, NUM_14 FROM NA.FLOCK_DATA
WHERE FLOCK_ID = :FLOCK_ID AND TRX_DATE <= :TRX_DATE
and EGG_WT is not null
order by trx_date desc";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOCK_ID", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "FLOCK_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TRX_DATE", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "TRX_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = @"SELECT COMPANY, REGION, LOCATION, FARM_ID, FLOCK_ID, ACTIVE, TRX_DATE, AGE, HEN_MORT, HEN_WT, MALE_MORT, HEN_FEED_DEL, TOTAL_EGGS_PROD, EGG_WT, FLOCK_KEY, DATE_1, DATE_2, TEXT_1, TEXT_2, NUM_1, NUM_2, NUM_3, NUM_4, NUM_5, NUM_6, NUM_7, NUM_8, NUM_9, NUM_10, NUM_11, NUM_12, NUM_13, TEXT_3, NUM_14 FROM NA.FLOCK_DATA
WHERE FLOCK_ID = :FLOCK_ID AND TRX_DATE BETWEEN :DATAINI AND :DATAFIM";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOCK_ID", global::System.Data.OracleClient.OracleType.VarChar, 10, global::System.Data.ParameterDirection.Input, "FLOCK_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DATAINI", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "TRX_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DATAFIM", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "TRX_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = @"SELECT MAX(Round(((FD.TOTAL_EGGS_PROD/Decode(F.Hens_Moved - acmfemmort(FD.Trx_Date, f.flock_key),0,1,F.Hens_Moved - acmfemmort(FD.Trx_Date, f.flock_key)))*100),2)) HenHouse
FROM  FLOCKS F, FLOCK_DATA FD
where
  F.FLOCK_KEY = FD.Flock_Key AND
  F.FARM_ID = :Nucleo AND
  F.NUM_2 = :Galpao AND
  F.VARIETY = :Linhagem AND
  FD.TRX_DATE = :UltimaData";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[7].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Nucleo", global::System.Data.OracleClient.OracleType.VarChar, 5, global::System.Data.ParameterDirection.Input, "FARM_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Galpao", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "NUM_2", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Linhagem", global::System.Data.OracleClient.OracleType.VarChar, 10, global::System.Data.ParameterDirection.Input, "VARIETY", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UltimaData", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "TRX_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = "INSERT INTO \"NA\".\"FLOCK_DATA\" (\"COMPANY\", \"REGION\", \"LOCATION\", \"FARM_ID\", \"FLOCK" +
                "_ID\", \"ACTIVE\", \"TRX_DATE\", \"AGE\", \"FLOCK_KEY\", \"NUM_1\") VALUES (:COMPANY, :REGI" +
                "ON, :LOCATION, :FARM_ID, :FLOCK_ID, :ACTIVE, :TRX_DATE, :AGE, :FLOCK_KEY, :NUM_1" +
                ")";
            this._commandCollection[8].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[8].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COMPANY", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "COMPANY", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REGION", global::System.Data.OracleClient.OracleType.VarChar, 2, global::System.Data.ParameterDirection.Input, "REGION", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOCATION", global::System.Data.OracleClient.OracleType.VarChar, 2, global::System.Data.ParameterDirection.Input, "LOCATION", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FARM_ID", global::System.Data.OracleClient.OracleType.VarChar, 5, global::System.Data.ParameterDirection.Input, "FARM_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOCK_ID", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "FLOCK_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ACTIVE", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "ACTIVE", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TRX_DATE", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "TRX_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("AGE", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "AGE", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FLOCK_KEY", global::System.Data.OracleClient.OracleType.VarChar, 33, global::System.Data.ParameterDirection.Input, "FLOCK_KEY", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_1", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "NUM_1", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[9].Connection = this.Connection;
            this._commandCollection[9].CommandText = "SELECT MAX(FD.AGE) Age\r\nFROM  FLOCKS F, FLOCK_DATA FD\r\nwhere\r\n  F.FLOCK_KEY = FD." +
                "Flock_Key AND\r\n  F.FLOCK_ID = :LoteCompleto AND\r\n  FD.TRX_DATE <= :UltimaData";
            this._commandCollection[9].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[9].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LoteCompleto", global::System.Data.OracleClient.OracleType.VarChar, 10, global::System.Data.ParameterDirection.Input, "FLOCK_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("UltimaData", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "TRX_DATE", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[10].Connection = this.Connection;
            this._commandCollection[10].CommandText = "UPDATE \"NA\".\"FLOCK_DATA\" SET \"NUM_1\" = :NUM_1 WHERE ((\"FLOCK_ID\" = :Original_FLOC" +
                "K_ID) AND (\"TRX_DATE\" = :Original_TRX_DATE))";
            this._commandCollection[10].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[10].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_1", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "NUM_1", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FLOCK_ID", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "FLOCK_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TRX_DATE", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "TRX_DATE", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FLIPDataSetMobile.FLOCK_DATAMobileDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FLIPDataSetMobile.FLOCK_DATAMobileDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FLIPDataSetMobile.FLOCK_DATAMobileDataTable dataTable = new FLIPDataSetMobile.FLOCK_DATAMobileDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByFlockAndDate(FLIPDataSetMobile.FLOCK_DATAMobileDataTable dataTable, string FLOCK_ID, System.DateTime TRX_DATE) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((FLOCK_ID == null)) {
                throw new global::System.ArgumentNullException("FLOCK_ID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(FLOCK_ID));
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(TRX_DATE));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual FLIPDataSetMobile.FLOCK_DATAMobileDataTable GetDataByFlockAndDate(string FLOCK_ID, System.DateTime TRX_DATE) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((FLOCK_ID == null)) {
                throw new global::System.ArgumentNullException("FLOCK_ID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(FLOCK_ID));
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(TRX_DATE));
            FLIPDataSetMobile.FLOCK_DATAMobileDataTable dataTable = new FLIPDataSetMobile.FLOCK_DATAMobileDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByFlockAndDateWithEggWt(FLIPDataSetMobile.FLOCK_DATAMobileDataTable dataTable, string FLOCK_ID, System.DateTime TRX_DATE) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((FLOCK_ID == null)) {
                throw new global::System.ArgumentNullException("FLOCK_ID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(FLOCK_ID));
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(TRX_DATE));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual FLIPDataSetMobile.FLOCK_DATAMobileDataTable GetDataByFlockAndDateWithEggWt(string FLOCK_ID, System.DateTime TRX_DATE) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((FLOCK_ID == null)) {
                throw new global::System.ArgumentNullException("FLOCK_ID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(FLOCK_ID));
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(TRX_DATE));
            FLIPDataSetMobile.FLOCK_DATAMobileDataTable dataTable = new FLIPDataSetMobile.FLOCK_DATAMobileDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByFlockIdAndTrxStartUntilTrxEnd(FLIPDataSetMobile.FLOCK_DATAMobileDataTable dataTable, string FLOCK_ID, System.DateTime DATAINI, System.DateTime DATAFIM) {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            if ((FLOCK_ID == null)) {
                throw new global::System.ArgumentNullException("FLOCK_ID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(FLOCK_ID));
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(DATAINI));
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(DATAFIM));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual FLIPDataSetMobile.FLOCK_DATAMobileDataTable GetDataBy6(string FLOCK_ID, System.DateTime DATAINI, System.DateTime DATAFIM) {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            if ((FLOCK_ID == null)) {
                throw new global::System.ArgumentNullException("FLOCK_ID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(FLOCK_ID));
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(DATAINI));
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(DATAFIM));
            FLIPDataSetMobile.FLOCK_DATAMobileDataTable dataTable = new FLIPDataSetMobile.FLOCK_DATAMobileDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FLIPDataSetMobile.FLOCK_DATAMobileDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FLIPDataSetMobile dataSet) {
            return this.Adapter.Update(dataSet, "FLOCK_DATAMobile");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_COMPANY, string Original_REGION, string Original_LOCATION, string Original_FARM_ID, string Original_FLOCK_ID, System.DateTime Original_TRX_DATE) {
            if ((Original_COMPANY == null)) {
                throw new global::System.ArgumentNullException("Original_COMPANY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_COMPANY));
            }
            if ((Original_REGION == null)) {
                throw new global::System.ArgumentNullException("Original_REGION");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_REGION));
            }
            if ((Original_LOCATION == null)) {
                throw new global::System.ArgumentNullException("Original_LOCATION");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_LOCATION));
            }
            if ((Original_FARM_ID == null)) {
                throw new global::System.ArgumentNullException("Original_FARM_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_FARM_ID));
            }
            if ((Original_FLOCK_ID == null)) {
                throw new global::System.ArgumentNullException("Original_FLOCK_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_FLOCK_ID));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_TRX_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string COMPANY, 
                    string REGION, 
                    string LOCATION, 
                    string FARM_ID, 
                    string FLOCK_ID, 
                    decimal ACTIVE, 
                    System.DateTime TRX_DATE, 
                    global::System.Nullable<decimal> AGE, 
                    global::System.Nullable<decimal> HEN_MORT, 
                    global::System.Nullable<decimal> HEN_WT, 
                    global::System.Nullable<decimal> MALE_MORT, 
                    global::System.Nullable<decimal> HEN_FEED_DEL, 
                    global::System.Nullable<decimal> TOTAL_EGGS_PROD, 
                    global::System.Nullable<decimal> EGG_WT, 
                    string FLOCK_KEY, 
                    global::System.Nullable<global::System.DateTime> DATE_1, 
                    global::System.Nullable<global::System.DateTime> DATE_2, 
                    string TEXT_1, 
                    string TEXT_2, 
                    global::System.Nullable<decimal> NUM_1, 
                    global::System.Nullable<decimal> NUM_2, 
                    global::System.Nullable<decimal> NUM_3, 
                    global::System.Nullable<decimal> NUM_4, 
                    global::System.Nullable<decimal> NUM_5, 
                    global::System.Nullable<decimal> NUM_6, 
                    global::System.Nullable<decimal> NUM_7, 
                    global::System.Nullable<decimal> NUM_8, 
                    global::System.Nullable<decimal> NUM_9, 
                    global::System.Nullable<decimal> NUM_10, 
                    global::System.Nullable<decimal> NUM_11, 
                    global::System.Nullable<decimal> NUM_12, 
                    global::System.Nullable<decimal> NUM_13, 
                    string TEXT_3, 
                    global::System.Nullable<decimal> NUM_14) {
            if ((COMPANY == null)) {
                throw new global::System.ArgumentNullException("COMPANY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(COMPANY));
            }
            if ((REGION == null)) {
                throw new global::System.ArgumentNullException("REGION");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(REGION));
            }
            if ((LOCATION == null)) {
                throw new global::System.ArgumentNullException("LOCATION");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(LOCATION));
            }
            if ((FARM_ID == null)) {
                throw new global::System.ArgumentNullException("FARM_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(FARM_ID));
            }
            if ((FLOCK_ID == null)) {
                throw new global::System.ArgumentNullException("FLOCK_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(FLOCK_ID));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(ACTIVE));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(TRX_DATE));
            if ((AGE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(AGE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((HEN_MORT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(HEN_MORT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((HEN_WT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(HEN_WT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((MALE_MORT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(MALE_MORT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((HEN_FEED_DEL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(HEN_FEED_DEL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((TOTAL_EGGS_PROD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(TOTAL_EGGS_PROD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((EGG_WT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(EGG_WT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((FLOCK_KEY == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(FLOCK_KEY));
            }
            if ((DATE_1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(DATE_1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((DATE_2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(DATE_2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((TEXT_1 == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(TEXT_1));
            }
            if ((TEXT_2 == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(TEXT_2));
            }
            if ((NUM_1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(NUM_1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((NUM_2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(NUM_2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((NUM_3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(NUM_3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((NUM_4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(NUM_4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((NUM_5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(NUM_5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((NUM_6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(NUM_6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((NUM_7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(NUM_7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((NUM_8.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(NUM_8.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((NUM_9.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(NUM_9.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((NUM_10.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(NUM_10.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((NUM_11.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(NUM_11.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((NUM_12.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(NUM_12.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((NUM_13.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(NUM_13.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((TEXT_3 == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(TEXT_3));
            }
            if ((NUM_14.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(NUM_14.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string COMPANY, 
                    string REGION, 
                    string LOCATION, 
                    string FARM_ID, 
                    string FLOCK_ID, 
                    decimal ACTIVE, 
                    System.DateTime TRX_DATE, 
                    global::System.Nullable<decimal> AGE, 
                    global::System.Nullable<decimal> HEN_MORT, 
                    global::System.Nullable<decimal> HEN_WT, 
                    global::System.Nullable<decimal> MALE_MORT, 
                    global::System.Nullable<decimal> HEN_FEED_DEL, 
                    global::System.Nullable<decimal> TOTAL_EGGS_PROD, 
                    global::System.Nullable<decimal> EGG_WT, 
                    string FLOCK_KEY, 
                    global::System.Nullable<global::System.DateTime> DATE_1, 
                    global::System.Nullable<global::System.DateTime> DATE_2, 
                    string TEXT_1, 
                    string TEXT_2, 
                    global::System.Nullable<decimal> NUM_1, 
                    global::System.Nullable<decimal> NUM_2, 
                    global::System.Nullable<decimal> NUM_3, 
                    global::System.Nullable<decimal> NUM_4, 
                    global::System.Nullable<decimal> NUM_5, 
                    global::System.Nullable<decimal> NUM_6, 
                    global::System.Nullable<decimal> NUM_7, 
                    global::System.Nullable<decimal> NUM_8, 
                    global::System.Nullable<decimal> NUM_9, 
                    global::System.Nullable<decimal> NUM_10, 
                    global::System.Nullable<decimal> NUM_11, 
                    global::System.Nullable<decimal> NUM_12, 
                    global::System.Nullable<decimal> NUM_13, 
                    string TEXT_3, 
                    global::System.Nullable<decimal> NUM_14, 
                    string Original_COMPANY, 
                    string Original_REGION, 
                    string Original_LOCATION, 
                    string Original_FARM_ID, 
                    string Original_FLOCK_ID, 
                    System.DateTime Original_TRX_DATE) {
            if ((COMPANY == null)) {
                throw new global::System.ArgumentNullException("COMPANY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(COMPANY));
            }
            if ((REGION == null)) {
                throw new global::System.ArgumentNullException("REGION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(REGION));
            }
            if ((LOCATION == null)) {
                throw new global::System.ArgumentNullException("LOCATION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(LOCATION));
            }
            if ((FARM_ID == null)) {
                throw new global::System.ArgumentNullException("FARM_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(FARM_ID));
            }
            if ((FLOCK_ID == null)) {
                throw new global::System.ArgumentNullException("FLOCK_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(FLOCK_ID));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(ACTIVE));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(TRX_DATE));
            if ((AGE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(AGE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((HEN_MORT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(HEN_MORT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((HEN_WT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(HEN_WT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((MALE_MORT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(MALE_MORT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((HEN_FEED_DEL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(HEN_FEED_DEL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((TOTAL_EGGS_PROD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(TOTAL_EGGS_PROD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((EGG_WT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(EGG_WT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((FLOCK_KEY == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(FLOCK_KEY));
            }
            if ((DATE_1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(DATE_1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((DATE_2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(DATE_2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((TEXT_1 == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(TEXT_1));
            }
            if ((TEXT_2 == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(TEXT_2));
            }
            if ((NUM_1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(NUM_1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((NUM_2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(NUM_2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((NUM_3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(NUM_3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((NUM_4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(NUM_4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((NUM_5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(NUM_5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((NUM_6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(NUM_6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((NUM_7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(NUM_7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((NUM_8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(NUM_8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((NUM_9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(NUM_9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((NUM_10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(NUM_10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((NUM_11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(NUM_11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((NUM_12.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(NUM_12.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((NUM_13.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(NUM_13.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((TEXT_3 == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(TEXT_3));
            }
            if ((NUM_14.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(NUM_14.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_COMPANY == null)) {
                throw new global::System.ArgumentNullException("Original_COMPANY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_COMPANY));
            }
            if ((Original_REGION == null)) {
                throw new global::System.ArgumentNullException("Original_REGION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_REGION));
            }
            if ((Original_LOCATION == null)) {
                throw new global::System.ArgumentNullException("Original_LOCATION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_LOCATION));
            }
            if ((Original_FARM_ID == null)) {
                throw new global::System.ArgumentNullException("Original_FARM_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_FARM_ID));
            }
            if ((Original_FLOCK_ID == null)) {
                throw new global::System.ArgumentNullException("Original_FLOCK_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_FLOCK_ID));
            }
            this.Adapter.UpdateCommand.Parameters[39].Value = ((System.DateTime)(Original_TRX_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal ACTIVE, 
                    global::System.Nullable<decimal> AGE, 
                    global::System.Nullable<decimal> HEN_MORT, 
                    global::System.Nullable<decimal> HEN_WT, 
                    global::System.Nullable<decimal> MALE_MORT, 
                    global::System.Nullable<decimal> HEN_FEED_DEL, 
                    global::System.Nullable<decimal> TOTAL_EGGS_PROD, 
                    global::System.Nullable<decimal> EGG_WT, 
                    string FLOCK_KEY, 
                    global::System.Nullable<global::System.DateTime> DATE_1, 
                    global::System.Nullable<global::System.DateTime> DATE_2, 
                    string TEXT_1, 
                    string TEXT_2, 
                    global::System.Nullable<decimal> NUM_1, 
                    global::System.Nullable<decimal> NUM_2, 
                    global::System.Nullable<decimal> NUM_3, 
                    global::System.Nullable<decimal> NUM_4, 
                    global::System.Nullable<decimal> NUM_5, 
                    global::System.Nullable<decimal> NUM_6, 
                    global::System.Nullable<decimal> NUM_7, 
                    global::System.Nullable<decimal> NUM_8, 
                    global::System.Nullable<decimal> NUM_9, 
                    global::System.Nullable<decimal> NUM_10, 
                    global::System.Nullable<decimal> NUM_11, 
                    global::System.Nullable<decimal> NUM_12, 
                    global::System.Nullable<decimal> NUM_13, 
                    string TEXT_3, 
                    global::System.Nullable<decimal> NUM_14, 
                    string Original_COMPANY, 
                    string Original_REGION, 
                    string Original_LOCATION, 
                    string Original_FARM_ID, 
                    string Original_FLOCK_ID, 
                    System.DateTime Original_TRX_DATE) {
            return this.Update(Original_COMPANY, Original_REGION, Original_LOCATION, Original_FARM_ID, Original_FLOCK_ID, ACTIVE, Original_TRX_DATE, AGE, HEN_MORT, HEN_WT, MALE_MORT, HEN_FEED_DEL, TOTAL_EGGS_PROD, EGG_WT, FLOCK_KEY, DATE_1, DATE_2, TEXT_1, TEXT_2, NUM_1, NUM_2, NUM_3, NUM_4, NUM_5, NUM_6, NUM_7, NUM_8, NUM_9, NUM_10, NUM_11, NUM_12, NUM_13, TEXT_3, NUM_14, Original_COMPANY, Original_REGION, Original_LOCATION, Original_FARM_ID, Original_FLOCK_ID, Original_TRX_DATE);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<decimal> Age(string Nucleo, global::System.Nullable<decimal> Galpao, string Linhagem, System.DateTime UltimaData) {
            global::System.Data.OracleClient.OracleCommand command = this.CommandCollection[1];
            if ((Nucleo == null)) {
                throw new global::System.ArgumentNullException("Nucleo");
            }
            else {
                command.Parameters[0].Value = ((string)(Nucleo));
            }
            if ((Galpao.HasValue == true)) {
                command.Parameters[1].Value = ((decimal)(Galpao.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Linhagem == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Linhagem));
            }
            command.Parameters[3].Value = ((System.DateTime)(UltimaData));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<decimal>();
            }
            else {
                return new global::System.Nullable<decimal>(((decimal)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteFlockTL(string Original_FLOCK_ID, System.DateTime Original_TRX_DATE) {
            global::System.Data.OracleClient.OracleCommand command = this.CommandCollection[2];
            if ((Original_FLOCK_ID == null)) {
                throw new global::System.ArgumentNullException("Original_FLOCK_ID");
            }
            else {
                command.Parameters[0].Value = ((string)(Original_FLOCK_ID));
            }
            command.Parameters[1].Value = ((System.DateTime)(Original_TRX_DATE));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<decimal> ExistsFlockData(string FLOCK_ID) {
            global::System.Data.OracleClient.OracleCommand command = this.CommandCollection[3];
            if ((FLOCK_ID == null)) {
                throw new global::System.ArgumentNullException("FLOCK_ID");
            }
            else {
                command.Parameters[0].Value = ((string)(FLOCK_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<decimal>();
            }
            else {
                return new global::System.Nullable<decimal>(((decimal)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<decimal> HenHouse(string Nucleo, global::System.Nullable<decimal> Galpao, string Linhagem, System.DateTime UltimaData) {
            global::System.Data.OracleClient.OracleCommand command = this.CommandCollection[7];
            if ((Nucleo == null)) {
                throw new global::System.ArgumentNullException("Nucleo");
            }
            else {
                command.Parameters[0].Value = ((string)(Nucleo));
            }
            if ((Galpao.HasValue == true)) {
                command.Parameters[1].Value = ((decimal)(Galpao.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Linhagem == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Linhagem));
            }
            command.Parameters[3].Value = ((System.DateTime)(UltimaData));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<decimal>();
            }
            else {
                return new global::System.Nullable<decimal>(((decimal)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertQuery(string COMPANY, string REGION, string LOCATION, string FARM_ID, string FLOCK_ID, decimal ACTIVE, System.DateTime TRX_DATE, global::System.Nullable<decimal> AGE, string FLOCK_KEY, global::System.Nullable<decimal> NUM_1) {
            global::System.Data.OracleClient.OracleCommand command = this.CommandCollection[8];
            if ((COMPANY == null)) {
                throw new global::System.ArgumentNullException("COMPANY");
            }
            else {
                command.Parameters[0].Value = ((string)(COMPANY));
            }
            if ((REGION == null)) {
                throw new global::System.ArgumentNullException("REGION");
            }
            else {
                command.Parameters[1].Value = ((string)(REGION));
            }
            if ((LOCATION == null)) {
                throw new global::System.ArgumentNullException("LOCATION");
            }
            else {
                command.Parameters[2].Value = ((string)(LOCATION));
            }
            if ((FARM_ID == null)) {
                throw new global::System.ArgumentNullException("FARM_ID");
            }
            else {
                command.Parameters[3].Value = ((string)(FARM_ID));
            }
            if ((FLOCK_ID == null)) {
                throw new global::System.ArgumentNullException("FLOCK_ID");
            }
            else {
                command.Parameters[4].Value = ((string)(FLOCK_ID));
            }
            command.Parameters[5].Value = ((decimal)(ACTIVE));
            command.Parameters[6].Value = ((System.DateTime)(TRX_DATE));
            if ((AGE.HasValue == true)) {
                command.Parameters[7].Value = ((decimal)(AGE.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((FLOCK_KEY == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(FLOCK_KEY));
            }
            if ((NUM_1.HasValue == true)) {
                command.Parameters[9].Value = ((decimal)(NUM_1.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object LastAge(string LoteCompleto, System.DateTime UltimaData) {
            global::System.Data.OracleClient.OracleCommand command = this.CommandCollection[9];
            if ((LoteCompleto == null)) {
                throw new global::System.ArgumentNullException("LoteCompleto");
            }
            else {
                command.Parameters[0].Value = ((string)(LoteCompleto));
            }
            command.Parameters[1].Value = ((System.DateTime)(UltimaData));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateHE(global::System.Nullable<decimal> NUM_1, string Original_FLOCK_ID, System.DateTime Original_TRX_DATE) {
            global::System.Data.OracleClient.OracleCommand command = this.CommandCollection[10];
            if ((NUM_1.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(NUM_1.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Original_FLOCK_ID == null)) {
                throw new global::System.ArgumentNullException("Original_FLOCK_ID");
            }
            else {
                command.Parameters[1].Value = ((string)(Original_FLOCK_ID));
            }
            command.Parameters[2].Value = ((System.DateTime)(Original_TRX_DATE));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FLOCKSFarmsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public FLOCKSFarmsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FLOCKSFarms";
            tableMapping.ColumnMappings.Add("FARM_ID", "FARM_ID");
            tableMapping.ColumnMappings.Add("LOCATION", "LOCATION");
            tableMapping.ColumnMappings.Add("TEXT_4", "TEXT_4");
            tableMapping.ColumnMappings.Add("TEXT_6", "TEXT_6");
            tableMapping.ColumnMappings.Add("TEXT_7", "TEXT_7");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["Oracle"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[4];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT FARM_ID, LOCATION, TEXT_4, TEXT_6, TEXT_7 FROM FARMS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT F.FARM_ID, F.LOCATION, F.TEXT_7 FROM FARMS F WHERE (FARM_ID = :FARM_ID)\r\nA" +
                "ND 0 < (SELECT COUNT(1) FROM FLOCKS L\r\n         WHERE F.FARM_KEY = L.FARM_KEY AN" +
                "D L.ACTIVE = 1)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FARM_ID", global::System.Data.OracleClient.OracleType.VarChar, 5, global::System.Data.ParameterDirection.Input, "FARM_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT FD.FARM_ID, FD.LOCATION, F.TEXT_6\r\nFROM FLOCKS FD, FARMS F\r\nWHERE (FD.ACTI" +
                "VE = 1) AND F.FARM_KEY = FD.COMPANY||FD.REGION||FD.LOCATION||FD.FARM_ID\r\nGROUP B" +
                "Y FD.FARM_ID, FD.LOCATION, F.TEXT_6\r\nORDER BY FD.FARM_ID";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT FARM_ID, LOCATION FROM FLOCKS WHERE (ACTIVE = 1) AND LOCATION NOT IN (\'GG\'" +
                ",\'PG\') GROUP BY FARM_ID, LOCATION ORDER BY FARM_ID";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FLIPDataSetMobile.FLOCKSFarmsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FLIPDataSetMobile.FLOCKSFarmsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FLIPDataSetMobile.FLOCKSFarmsDataTable dataTable = new FLIPDataSetMobile.FLOCKSFarmsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByFarmID(FLIPDataSetMobile.FLOCKSFarmsDataTable dataTable, string FARM_ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((FARM_ID == null)) {
                throw new global::System.ArgumentNullException("FARM_ID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(FARM_ID));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual FLIPDataSetMobile.FLOCKSFarmsDataTable GetDataByFarmID(string FARM_ID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((FARM_ID == null)) {
                throw new global::System.ArgumentNullException("FARM_ID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(FARM_ID));
            }
            FLIPDataSetMobile.FLOCKSFarmsDataTable dataTable = new FLIPDataSetMobile.FLOCKSFarmsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillFarms(FLIPDataSetMobile.FLOCKSFarmsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual FLIPDataSetMobile.FLOCKSFarmsDataTable GetDataFarms() {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            FLIPDataSetMobile.FLOCKSFarmsDataTable dataTable = new FLIPDataSetMobile.FLOCKSFarmsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillFarmsDEO(FLIPDataSetMobile.FLOCKSFarmsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual FLIPDataSetMobile.FLOCKSFarmsDataTable GetDataFarmsDEO() {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            FLIPDataSetMobile.FLOCKSFarmsDataTable dataTable = new FLIPDataSetMobile.FLOCKSFarmsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HATCHERY_CODESTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public HATCHERY_CODESTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HATCHERY_CODES";
            tableMapping.ColumnMappings.Add("HATCH_LOC", "HATCH_LOC");
            tableMapping.ColumnMappings.Add("HATCH_DESC", "HATCH_DESC");
            tableMapping.ColumnMappings.Add("CAPACITY", "CAPACITY");
            tableMapping.ColumnMappings.Add("ORDENT_LOC", "ORDENT_LOC");
            tableMapping.ColumnMappings.Add("LOCATION", "LOCATION");
            tableMapping.ColumnMappings.Add("REGION", "REGION");
            tableMapping.ColumnMappings.Add("EQUIPMENT", "EQUIPMENT");
            tableMapping.ColumnMappings.Add("TRAY", "TRAY");
            tableMapping.ColumnMappings.Add("PALLET", "PALLET");
            tableMapping.ColumnMappings.Add("CASE", "CASE");
            tableMapping.ColumnMappings.Add("AUTO_TRANSF", "AUTO_TRANSF");
            tableMapping.ColumnMappings.Add("CLAS_INC", "CLAS_INC");
            tableMapping.ColumnMappings.Add("COMPANY", "COMPANY");
            tableMapping.ColumnMappings.Add("CLAS_EGG", "CLAS_EGG");
            tableMapping.ColumnMappings.Add("TYPE_CLAS_EGG", "TYPE_CLAS_EGG");
            tableMapping.ColumnMappings.Add("PERIOD_LAY_DATE_INC", "PERIOD_LAY_DATE_INC");
            tableMapping.ColumnMappings.Add("PERIOD_LAY_DATE_CLAS", "PERIOD_LAY_DATE_CLAS");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"NA\".\"HATCHERY_CODES\" WHERE ((\"HATCH_LOC\" = :Original_HATCH_LOC))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_HATCH_LOC", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "HATCH_LOC", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""NA"".""HATCHERY_CODES"" (""HATCH_LOC"", ""HATCH_DESC"", ""CAPACITY"", ""ORDENT_LOC"", ""LOCATION"", ""REGION"", ""EQUIPMENT"", ""TRAY"", ""PALLET"", ""CASE"", ""AUTO_TRANSF"", ""CLAS_INC"", ""COMPANY"", ""CLAS_EGG"", ""TYPE_CLAS_EGG"", ""PERIOD_LAY_DATE_INC"", ""PERIOD_LAY_DATE_CLAS"") VALUES (:HATCH_LOC, :HATCH_DESC, :CAPACITY, :ORDENT_LOC, :LOCATION, :REGION, :EQUIPMENT, :TRAY, :PALLET, :CASE, :AUTO_TRANSF, :CLAS_INC, :COMPANY, :CLAS_EGG, :TYPE_CLAS_EGG, :PERIOD_LAY_DATE_INC, :PERIOD_LAY_DATE_CLAS)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HATCH_LOC", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "HATCH_LOC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HATCH_DESC", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "HATCH_DESC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CAPACITY", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CAPACITY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ORDENT_LOC", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ORDENT_LOC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOCATION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOCATION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REGION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "REGION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("EQUIPMENT", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "EQUIPMENT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TRAY", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TRAY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PALLET", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "PALLET", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CASE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CASE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("AUTO_TRANSF", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "AUTO_TRANSF", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CLAS_INC", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CLAS_INC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COMPANY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPANY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CLAS_EGG", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CLAS_EGG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TYPE_CLAS_EGG", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TYPE_CLAS_EGG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PERIOD_LAY_DATE_INC", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PERIOD_LAY_DATE_INC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PERIOD_LAY_DATE_CLAS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PERIOD_LAY_DATE_CLAS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""NA"".""HATCHERY_CODES"" SET ""HATCH_LOC"" = :HATCH_LOC, ""HATCH_DESC"" = :HATCH_DESC, ""CAPACITY"" = :CAPACITY, ""ORDENT_LOC"" = :ORDENT_LOC, ""LOCATION"" = :LOCATION, ""REGION"" = :REGION, ""EQUIPMENT"" = :EQUIPMENT, ""TRAY"" = :TRAY, ""PALLET"" = :PALLET, ""CASE"" = :CASE, ""AUTO_TRANSF"" = :AUTO_TRANSF, ""CLAS_INC"" = :CLAS_INC, ""COMPANY"" = :COMPANY, ""CLAS_EGG"" = :CLAS_EGG, ""TYPE_CLAS_EGG"" = :TYPE_CLAS_EGG, ""PERIOD_LAY_DATE_INC"" = :PERIOD_LAY_DATE_INC, ""PERIOD_LAY_DATE_CLAS"" = :PERIOD_LAY_DATE_CLAS WHERE ((""HATCH_LOC"" = :Original_HATCH_LOC))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HATCH_LOC", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "HATCH_LOC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HATCH_DESC", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "HATCH_DESC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CAPACITY", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CAPACITY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ORDENT_LOC", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ORDENT_LOC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOCATION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOCATION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("REGION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "REGION", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("EQUIPMENT", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "EQUIPMENT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TRAY", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TRAY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PALLET", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "PALLET", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CASE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CASE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("AUTO_TRANSF", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "AUTO_TRANSF", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CLAS_INC", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CLAS_INC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("COMPANY", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "COMPANY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CLAS_EGG", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CLAS_EGG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TYPE_CLAS_EGG", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "TYPE_CLAS_EGG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PERIOD_LAY_DATE_INC", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PERIOD_LAY_DATE_INC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PERIOD_LAY_DATE_CLAS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PERIOD_LAY_DATE_CLAS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_HATCH_LOC", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "HATCH_LOC", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["Oracle"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[3];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT HATCH_LOC, HATCH_DESC, CAPACITY, ORDENT_LOC, LOCATION, REGION, EQUIPMENT, " +
                "TRAY, PALLET, CASE, AUTO_TRANSF, CLAS_INC, COMPANY, CLAS_EGG, TYPE_CLAS_EGG, PER" +
                "IOD_LAY_DATE_INC, PERIOD_LAY_DATE_CLAS FROM NA.HATCHERY_CODES";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT AUTO_TRANSF, CAPACITY, CASE, CLAS_EGG, CLAS_INC, COMPANY, EQUIPMENT, HATCH" +
                "_DESC, HATCH_LOC, LOCATION, ORDENT_LOC, PALLET, PERIOD_LAY_DATE_CLAS, PERIOD_LAY" +
                "_DATE_INC, REGION, TRAY, TYPE_CLAS_EGG FROM HATCHERY_CODES WHERE (HATCH_LOC = :H" +
                "ATCH_LOC)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HATCH_LOC", global::System.Data.OracleClient.OracleType.VarChar, 2, global::System.Data.ParameterDirection.Input, "HATCH_LOC", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT AUTO_TRANSF, CAPACITY, CASE, CLAS_EGG, CLAS_INC, COMPANY, EQUIPMENT, HATCH" +
                "_DESC, HATCH_LOC, LOCATION, ORDENT_LOC, PALLET, PERIOD_LAY_DATE_CLAS, PERIOD_LAY" +
                "_DATE_INC, REGION, TRAY, TYPE_CLAS_EGG FROM HATCHERY_CODES WHERE (LOCATION = :Lo" +
                "cation)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Location", global::System.Data.OracleClient.OracleType.VarChar, 2, global::System.Data.ParameterDirection.Input, "LOCATION", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FLIPDataSetMobile.HATCHERY_CODESDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FLIPDataSetMobile.HATCHERY_CODESDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FLIPDataSetMobile.HATCHERY_CODESDataTable dataTable = new FLIPDataSetMobile.HATCHERY_CODESDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByHatchLoc(FLIPDataSetMobile.HATCHERY_CODESDataTable dataTable, string HATCH_LOC) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((HATCH_LOC == null)) {
                throw new global::System.ArgumentNullException("HATCH_LOC");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(HATCH_LOC));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByLocation(FLIPDataSetMobile.HATCHERY_CODESDataTable dataTable, string Location) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((Location == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Location));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual FLIPDataSetMobile.HATCHERY_CODESDataTable GetDataByLocation(string Location) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((Location == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Location));
            }
            FLIPDataSetMobile.HATCHERY_CODESDataTable dataTable = new FLIPDataSetMobile.HATCHERY_CODESDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FLIPDataSetMobile.HATCHERY_CODESDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FLIPDataSetMobile dataSet) {
            return this.Adapter.Update(dataSet, "HATCHERY_CODES");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_HATCH_LOC) {
            if ((Original_HATCH_LOC == null)) {
                throw new global::System.ArgumentNullException("Original_HATCH_LOC");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_HATCH_LOC));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string HATCH_LOC, 
                    string HATCH_DESC, 
                    global::System.Nullable<decimal> CAPACITY, 
                    string ORDENT_LOC, 
                    string LOCATION, 
                    string REGION, 
                    string EQUIPMENT, 
                    global::System.Nullable<decimal> TRAY, 
                    global::System.Nullable<decimal> PALLET, 
                    global::System.Nullable<decimal> CASE, 
                    string AUTO_TRANSF, 
                    string CLAS_INC, 
                    string COMPANY, 
                    string CLAS_EGG, 
                    string TYPE_CLAS_EGG, 
                    string PERIOD_LAY_DATE_INC, 
                    string PERIOD_LAY_DATE_CLAS) {
            if ((HATCH_LOC == null)) {
                throw new global::System.ArgumentNullException("HATCH_LOC");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(HATCH_LOC));
            }
            if ((HATCH_DESC == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(HATCH_DESC));
            }
            if ((CAPACITY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(CAPACITY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ORDENT_LOC == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ORDENT_LOC));
            }
            if ((LOCATION == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(LOCATION));
            }
            if ((REGION == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(REGION));
            }
            if ((EQUIPMENT == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(EQUIPMENT));
            }
            if ((TRAY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(TRAY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((PALLET.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(PALLET.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CASE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(CASE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((AUTO_TRANSF == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(AUTO_TRANSF));
            }
            if ((CLAS_INC == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(CLAS_INC));
            }
            if ((COMPANY == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(COMPANY));
            }
            if ((CLAS_EGG == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(CLAS_EGG));
            }
            if ((TYPE_CLAS_EGG == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(TYPE_CLAS_EGG));
            }
            if ((PERIOD_LAY_DATE_INC == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(PERIOD_LAY_DATE_INC));
            }
            if ((PERIOD_LAY_DATE_CLAS == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(PERIOD_LAY_DATE_CLAS));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string HATCH_LOC, 
                    string HATCH_DESC, 
                    global::System.Nullable<decimal> CAPACITY, 
                    string ORDENT_LOC, 
                    string LOCATION, 
                    string REGION, 
                    string EQUIPMENT, 
                    global::System.Nullable<decimal> TRAY, 
                    global::System.Nullable<decimal> PALLET, 
                    global::System.Nullable<decimal> CASE, 
                    string AUTO_TRANSF, 
                    string CLAS_INC, 
                    string COMPANY, 
                    string CLAS_EGG, 
                    string TYPE_CLAS_EGG, 
                    string PERIOD_LAY_DATE_INC, 
                    string PERIOD_LAY_DATE_CLAS, 
                    string Original_HATCH_LOC) {
            if ((HATCH_LOC == null)) {
                throw new global::System.ArgumentNullException("HATCH_LOC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(HATCH_LOC));
            }
            if ((HATCH_DESC == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(HATCH_DESC));
            }
            if ((CAPACITY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(CAPACITY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ORDENT_LOC == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ORDENT_LOC));
            }
            if ((LOCATION == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(LOCATION));
            }
            if ((REGION == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(REGION));
            }
            if ((EQUIPMENT == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(EQUIPMENT));
            }
            if ((TRAY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(TRAY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((PALLET.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(PALLET.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((CASE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(CASE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((AUTO_TRANSF == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(AUTO_TRANSF));
            }
            if ((CLAS_INC == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(CLAS_INC));
            }
            if ((COMPANY == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(COMPANY));
            }
            if ((CLAS_EGG == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(CLAS_EGG));
            }
            if ((TYPE_CLAS_EGG == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(TYPE_CLAS_EGG));
            }
            if ((PERIOD_LAY_DATE_INC == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(PERIOD_LAY_DATE_INC));
            }
            if ((PERIOD_LAY_DATE_CLAS == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(PERIOD_LAY_DATE_CLAS));
            }
            if ((Original_HATCH_LOC == null)) {
                throw new global::System.ArgumentNullException("Original_HATCH_LOC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_HATCH_LOC));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string HATCH_DESC, 
                    global::System.Nullable<decimal> CAPACITY, 
                    string ORDENT_LOC, 
                    string LOCATION, 
                    string REGION, 
                    string EQUIPMENT, 
                    global::System.Nullable<decimal> TRAY, 
                    global::System.Nullable<decimal> PALLET, 
                    global::System.Nullable<decimal> CASE, 
                    string AUTO_TRANSF, 
                    string CLAS_INC, 
                    string COMPANY, 
                    string CLAS_EGG, 
                    string TYPE_CLAS_EGG, 
                    string PERIOD_LAY_DATE_INC, 
                    string PERIOD_LAY_DATE_CLAS, 
                    string Original_HATCH_LOC) {
            return this.Update(Original_HATCH_LOC, HATCH_DESC, CAPACITY, ORDENT_LOC, LOCATION, REGION, EQUIPMENT, TRAY, PALLET, CASE, AUTO_TRANSF, CLAS_INC, COMPANY, CLAS_EGG, TYPE_CLAS_EGG, PERIOD_LAY_DATE_INC, PERIOD_LAY_DATE_CLAS, Original_HATCH_LOC);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DATA_FECH_LANCTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public DATA_FECH_LANCTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DATA_FECH_LANC";
            tableMapping.ColumnMappings.Add("DATA_FECH_LANC", "DATA_FECH_LANC");
            tableMapping.ColumnMappings.Add("LOCATION", "LOCATION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"NA\".\"DATA_FECH_LANC\" (\"DATA_FECH_LANC\", \"LOCATION\") VALUES (:DATA_FE" +
                "CH_LANC, :LOCATION)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DATA_FECH_LANC", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DATA_FECH_LANC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOCATION", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LOCATION", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["Oracle"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[2];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DATA_FECH_LANC, LOCATION FROM NA.DATA_FECH_LANC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "UPDATE DATA_FECH_LANC SET DATA_FECH_LANC = :DATA_FECH_LANC\r\nWHERE LOCATION = :LOC" +
                "ATION";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DATA_FECH_LANC", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "DATA_FECH_LANC", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LOCATION", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "LOCATION", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FLIPDataSetMobile.DATA_FECH_LANCDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FLIPDataSetMobile.DATA_FECH_LANCDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FLIPDataSetMobile.DATA_FECH_LANCDataTable dataTable = new FLIPDataSetMobile.DATA_FECH_LANCDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FLIPDataSetMobile.DATA_FECH_LANCDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FLIPDataSetMobile dataSet) {
            return this.Adapter.Update(dataSet, "DATA_FECH_LANC");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<global::System.DateTime> DATA_FECH_LANC, string LOCATION) {
            if ((DATA_FECH_LANC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(DATA_FECH_LANC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((LOCATION == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(LOCATION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateDataFechLanc(global::System.Nullable<global::System.DateTime> DATA_FECH_LANC, string LOCATION) {
            global::System.Data.OracleClient.OracleCommand command = this.CommandCollection[1];
            if ((DATA_FECH_LANC.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(DATA_FECH_LANC.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((LOCATION == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(LOCATION));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private FLOCKSMobileTableAdapter _fLOCKSMobileTableAdapter;
        
        private FLOCK_DATAMobileTableAdapter _fLOCK_DATAMobileTableAdapter;
        
        private HATCHERY_CODESTableAdapter _hATCHERY_CODESTableAdapter;
        
        private DATA_FECH_LANCTableAdapter _dATA_FECH_LANCTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public FLOCKSMobileTableAdapter FLOCKSMobileTableAdapter {
            get {
                return this._fLOCKSMobileTableAdapter;
            }
            set {
                this._fLOCKSMobileTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public FLOCK_DATAMobileTableAdapter FLOCK_DATAMobileTableAdapter {
            get {
                return this._fLOCK_DATAMobileTableAdapter;
            }
            set {
                this._fLOCK_DATAMobileTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public HATCHERY_CODESTableAdapter HATCHERY_CODESTableAdapter {
            get {
                return this._hATCHERY_CODESTableAdapter;
            }
            set {
                this._hATCHERY_CODESTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DATA_FECH_LANCTableAdapter DATA_FECH_LANCTableAdapter {
            get {
                return this._dATA_FECH_LANCTableAdapter;
            }
            set {
                this._dATA_FECH_LANCTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._fLOCKSMobileTableAdapter != null) 
                            && (this._fLOCKSMobileTableAdapter.Connection != null))) {
                    return this._fLOCKSMobileTableAdapter.Connection;
                }
                if (((this._fLOCK_DATAMobileTableAdapter != null) 
                            && (this._fLOCK_DATAMobileTableAdapter.Connection != null))) {
                    return this._fLOCK_DATAMobileTableAdapter.Connection;
                }
                if (((this._hATCHERY_CODESTableAdapter != null) 
                            && (this._hATCHERY_CODESTableAdapter.Connection != null))) {
                    return this._hATCHERY_CODESTableAdapter.Connection;
                }
                if (((this._dATA_FECH_LANCTableAdapter != null) 
                            && (this._dATA_FECH_LANCTableAdapter.Connection != null))) {
                    return this._dATA_FECH_LANCTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._fLOCKSMobileTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._fLOCK_DATAMobileTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._hATCHERY_CODESTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dATA_FECH_LANCTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(FLIPDataSetMobile dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._fLOCKSMobileTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.FLOCKSMobile.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._fLOCKSMobileTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._fLOCK_DATAMobileTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.FLOCK_DATAMobile.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._fLOCK_DATAMobileTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hATCHERY_CODESTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.HATCHERY_CODES.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hATCHERY_CODESTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dATA_FECH_LANCTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DATA_FECH_LANC.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dATA_FECH_LANCTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(FLIPDataSetMobile dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._fLOCKSMobileTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.FLOCKSMobile.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._fLOCKSMobileTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._fLOCK_DATAMobileTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.FLOCK_DATAMobile.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._fLOCK_DATAMobileTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hATCHERY_CODESTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.HATCHERY_CODES.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hATCHERY_CODESTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dATA_FECH_LANCTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DATA_FECH_LANC.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dATA_FECH_LANCTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(FLIPDataSetMobile dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._dATA_FECH_LANCTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DATA_FECH_LANC.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dATA_FECH_LANCTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hATCHERY_CODESTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.HATCHERY_CODES.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hATCHERY_CODESTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._fLOCK_DATAMobileTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.FLOCK_DATAMobile.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._fLOCK_DATAMobileTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._fLOCKSMobileTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.FLOCKSMobile.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._fLOCKSMobileTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(FLIPDataSetMobile dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._fLOCKSMobileTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._fLOCKSMobileTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma " +
                        "cadeia de conexão.");
            }
            if (((this._fLOCK_DATAMobileTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._fLOCK_DATAMobileTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma " +
                        "cadeia de conexão.");
            }
            if (((this._hATCHERY_CODESTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hATCHERY_CODESTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma " +
                        "cadeia de conexão.");
            }
            if (((this._dATA_FECH_LANCTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dATA_FECH_LANCTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma " +
                        "cadeia de conexão.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager não contém informações de conexão. Defina cada propriedade Ta" +
                        "bleAdapter de TableAdapterManager como uma instância válida de TableAdapter.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Não é possível iniciar a transação. Os dados de conexão atuais não oferecem supor" +
                        "te às transações ou o estado atual não permite que a transação inicie.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._fLOCKSMobileTableAdapter != null)) {
                    revertConnections.Add(this._fLOCKSMobileTableAdapter, this._fLOCKSMobileTableAdapter.Connection);
                    this._fLOCKSMobileTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._fLOCKSMobileTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._fLOCKSMobileTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._fLOCKSMobileTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._fLOCKSMobileTableAdapter.Adapter);
                    }
                }
                if ((this._fLOCK_DATAMobileTableAdapter != null)) {
                    revertConnections.Add(this._fLOCK_DATAMobileTableAdapter, this._fLOCK_DATAMobileTableAdapter.Connection);
                    this._fLOCK_DATAMobileTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._fLOCK_DATAMobileTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._fLOCK_DATAMobileTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._fLOCK_DATAMobileTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._fLOCK_DATAMobileTableAdapter.Adapter);
                    }
                }
                if ((this._hATCHERY_CODESTableAdapter != null)) {
                    revertConnections.Add(this._hATCHERY_CODESTableAdapter, this._hATCHERY_CODESTableAdapter.Connection);
                    this._hATCHERY_CODESTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._hATCHERY_CODESTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._hATCHERY_CODESTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hATCHERY_CODESTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hATCHERY_CODESTableAdapter.Adapter);
                    }
                }
                if ((this._dATA_FECH_LANCTableAdapter != null)) {
                    revertConnections.Add(this._dATA_FECH_LANCTableAdapter, this._dATA_FECH_LANCTableAdapter.Connection);
                    this._dATA_FECH_LANCTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._dATA_FECH_LANCTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._dATA_FECH_LANCTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dATA_FECH_LANCTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dATA_FECH_LANCTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._fLOCKSMobileTableAdapter != null)) {
                    this._fLOCKSMobileTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._fLOCKSMobileTableAdapter]));
                    this._fLOCKSMobileTableAdapter.Transaction = null;
                }
                if ((this._fLOCK_DATAMobileTableAdapter != null)) {
                    this._fLOCK_DATAMobileTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._fLOCK_DATAMobileTableAdapter]));
                    this._fLOCK_DATAMobileTableAdapter.Transaction = null;
                }
                if ((this._hATCHERY_CODESTableAdapter != null)) {
                    this._hATCHERY_CODESTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._hATCHERY_CODESTableAdapter]));
                    this._hATCHERY_CODESTableAdapter.Transaction = null;
                }
                if ((this._dATA_FECH_LANCTableAdapter != null)) {
                    this._dATA_FECH_LANCTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._dATA_FECH_LANCTableAdapter]));
                    this._dATA_FECH_LANCTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591
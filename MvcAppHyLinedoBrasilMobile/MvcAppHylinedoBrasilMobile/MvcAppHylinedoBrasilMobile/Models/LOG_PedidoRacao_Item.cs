//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHylinedoBrasilMobile.Models
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(LOG_PedidoRacao))]
    [KnownType(typeof(LOG_PedidoRacao_Item_Aditivo))]
    public partial class LOG_PedidoRacao_Item: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _iD = value;
                    OnPropertyChanged("ID");
                }
            }
        }
        private int _iD;
    
        [DataMember]
        public int IDLogPedidoRacao
        {
            get { return _iDLogPedidoRacao; }
            set
            {
                if (_iDLogPedidoRacao != value)
                {
                    ChangeTracker.RecordOriginalValue("IDLogPedidoRacao", _iDLogPedidoRacao);
                    if (!IsDeserializing)
                    {
                        if (LOG_PedidoRacao != null && LOG_PedidoRacao.ID != value)
                        {
                            LOG_PedidoRacao = null;
                        }
                    }
                    _iDLogPedidoRacao = value;
                    OnPropertyChanged("IDLogPedidoRacao");
                }
            }
        }
        private int _iDLogPedidoRacao;
    
        [DataMember]
        public int IDPedidoRacao
        {
            get { return _iDPedidoRacao; }
            set
            {
                if (_iDPedidoRacao != value)
                {
                    _iDPedidoRacao = value;
                    OnPropertyChanged("IDPedidoRacao");
                }
            }
        }
        private int _iDPedidoRacao;
    
        [DataMember]
        public int IDPedidoRacao_Item
        {
            get { return _iDPedidoRacao_Item; }
            set
            {
                if (_iDPedidoRacao_Item != value)
                {
                    _iDPedidoRacao_Item = value;
                    OnPropertyChanged("IDPedidoRacao_Item");
                }
            }
        }
        private int _iDPedidoRacao_Item;
    
        [DataMember]
        public string Nucleo
        {
            get { return _nucleo; }
            set
            {
                if (_nucleo != value)
                {
                    _nucleo = value;
                    OnPropertyChanged("Nucleo");
                }
            }
        }
        private string _nucleo;
    
        [DataMember]
        public string Galpao
        {
            get { return _galpao; }
            set
            {
                if (_galpao != value)
                {
                    _galpao = value;
                    OnPropertyChanged("Galpao");
                }
            }
        }
        private string _galpao;
    
        [DataMember]
        public string Linhagem
        {
            get { return _linhagem; }
            set
            {
                if (_linhagem != value)
                {
                    _linhagem = value;
                    OnPropertyChanged("Linhagem");
                }
            }
        }
        private string _linhagem;
    
        [DataMember]
        public Nullable<int> CodFormulaRacao
        {
            get { return _codFormulaRacao; }
            set
            {
                if (_codFormulaRacao != value)
                {
                    _codFormulaRacao = value;
                    OnPropertyChanged("CodFormulaRacao");
                }
            }
        }
        private Nullable<int> _codFormulaRacao;
    
        [DataMember]
        public string ProdCodEstr
        {
            get { return _prodCodEstr; }
            set
            {
                if (_prodCodEstr != value)
                {
                    _prodCodEstr = value;
                    OnPropertyChanged("ProdCodEstr");
                }
            }
        }
        private string _prodCodEstr;
    
        [DataMember]
        public Nullable<decimal> QtdeKg
        {
            get { return _qtdeKg; }
            set
            {
                if (_qtdeKg != value)
                {
                    _qtdeKg = value;
                    OnPropertyChanged("QtdeKg");
                }
            }
        }
        private Nullable<decimal> _qtdeKg;
    
        [DataMember]
        public Nullable<int> IDOrdemProducaoRacao
        {
            get { return _iDOrdemProducaoRacao; }
            set
            {
                if (_iDOrdemProducaoRacao != value)
                {
                    _iDOrdemProducaoRacao = value;
                    OnPropertyChanged("IDOrdemProducaoRacao");
                }
            }
        }
        private Nullable<int> _iDOrdemProducaoRacao;
    
        [DataMember]
        public Nullable<int> Sequencia
        {
            get { return _sequencia; }
            set
            {
                if (_sequencia != value)
                {
                    _sequencia = value;
                    OnPropertyChanged("Sequencia");
                }
            }
        }
        private Nullable<int> _sequencia;
    
        [DataMember]
        public string Operacao
        {
            get { return _operacao; }
            set
            {
                if (_operacao != value)
                {
                    _operacao = value;
                    OnPropertyChanged("Operacao");
                }
            }
        }
        private string _operacao;
    
        [DataMember]
        public Nullable<int> IDConfigFormulaRacao
        {
            get { return _iDConfigFormulaRacao; }
            set
            {
                if (_iDConfigFormulaRacao != value)
                {
                    _iDConfigFormulaRacao = value;
                    OnPropertyChanged("IDConfigFormulaRacao");
                }
            }
        }
        private Nullable<int> _iDConfigFormulaRacao;
    
        [DataMember]
        public Nullable<System.DateTime> DataReal
        {
            get { return _dataReal; }
            set
            {
                if (_dataReal != value)
                {
                    _dataReal = value;
                    OnPropertyChanged("DataReal");
                }
            }
        }
        private Nullable<System.DateTime> _dataReal;
    
        [DataMember]
        public Nullable<int> SiloExpedicao
        {
            get { return _siloExpedicao; }
            set
            {
                if (_siloExpedicao != value)
                {
                    _siloExpedicao = value;
                    OnPropertyChanged("SiloExpedicao");
                }
            }
        }
        private Nullable<int> _siloExpedicao;
    
        [DataMember]
        public string CaixaCaminhao
        {
            get { return _caixaCaminhao; }
            set
            {
                if (_caixaCaminhao != value)
                {
                    _caixaCaminhao = value;
                    OnPropertyChanged("CaixaCaminhao");
                }
            }
        }
        private string _caixaCaminhao;
    
        [DataMember]
        public Nullable<int> SeqProducaoReal
        {
            get { return _seqProducaoReal; }
            set
            {
                if (_seqProducaoReal != value)
                {
                    _seqProducaoReal = value;
                    OnPropertyChanged("SeqProducaoReal");
                }
            }
        }
        private Nullable<int> _seqProducaoReal;
    
        [DataMember]
        public string HoraInicio
        {
            get { return _horaInicio; }
            set
            {
                if (_horaInicio != value)
                {
                    _horaInicio = value;
                    OnPropertyChanged("HoraInicio");
                }
            }
        }
        private string _horaInicio;
    
        [DataMember]
        public string HoraFim
        {
            get { return _horaFim; }
            set
            {
                if (_horaFim != value)
                {
                    _horaFim = value;
                    OnPropertyChanged("HoraFim");
                }
            }
        }
        private string _horaFim;
    
        [DataMember]
        public string Colaborador
        {
            get { return _colaborador; }
            set
            {
                if (_colaborador != value)
                {
                    _colaborador = value;
                    OnPropertyChanged("Colaborador");
                }
            }
        }
        private string _colaborador;
    
        [DataMember]
        public Nullable<int> QtdesBatidasReal
        {
            get { return _qtdesBatidasReal; }
            set
            {
                if (_qtdesBatidasReal != value)
                {
                    _qtdesBatidasReal = value;
                    OnPropertyChanged("QtdesBatidasReal");
                }
            }
        }
        private Nullable<int> _qtdesBatidasReal;
    
        [DataMember]
        public Nullable<System.DateTime> DataPlanejada
        {
            get { return _dataPlanejada; }
            set
            {
                if (_dataPlanejada != value)
                {
                    _dataPlanejada = value;
                    OnPropertyChanged("DataPlanejada");
                }
            }
        }
        private Nullable<System.DateTime> _dataPlanejada;
    
        [DataMember]
        public Nullable<int> SeqProducaoPlanejada
        {
            get { return _seqProducaoPlanejada; }
            set
            {
                if (_seqProducaoPlanejada != value)
                {
                    _seqProducaoPlanejada = value;
                    OnPropertyChanged("SeqProducaoPlanejada");
                }
            }
        }
        private Nullable<int> _seqProducaoPlanejada;
    
        [DataMember]
        public string Status
        {
            get { return _status; }
            set
            {
                if (_status != value)
                {
                    _status = value;
                    OnPropertyChanged("Status");
                }
            }
        }
        private string _status;
    
        [DataMember]
        public string ObsOP
        {
            get { return _obsOP; }
            set
            {
                if (_obsOP != value)
                {
                    _obsOP = value;
                    OnPropertyChanged("ObsOP");
                }
            }
        }
        private string _obsOP;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public LOG_PedidoRacao LOG_PedidoRacao
        {
            get { return _lOG_PedidoRacao; }
            set
            {
                if (!ReferenceEquals(_lOG_PedidoRacao, value))
                {
                    var previousValue = _lOG_PedidoRacao;
                    _lOG_PedidoRacao = value;
                    FixupLOG_PedidoRacao(previousValue);
                    OnNavigationPropertyChanged("LOG_PedidoRacao");
                }
            }
        }
        private LOG_PedidoRacao _lOG_PedidoRacao;
    
        [DataMember]
        public TrackableCollection<LOG_PedidoRacao_Item_Aditivo> LOG_PedidoRacao_Item_Aditivo
        {
            get
            {
                if (_lOG_PedidoRacao_Item_Aditivo == null)
                {
                    _lOG_PedidoRacao_Item_Aditivo = new TrackableCollection<LOG_PedidoRacao_Item_Aditivo>();
                    _lOG_PedidoRacao_Item_Aditivo.CollectionChanged += FixupLOG_PedidoRacao_Item_Aditivo;
                }
                return _lOG_PedidoRacao_Item_Aditivo;
            }
            set
            {
                if (!ReferenceEquals(_lOG_PedidoRacao_Item_Aditivo, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_lOG_PedidoRacao_Item_Aditivo != null)
                    {
                        _lOG_PedidoRacao_Item_Aditivo.CollectionChanged -= FixupLOG_PedidoRacao_Item_Aditivo;
                    }
                    _lOG_PedidoRacao_Item_Aditivo = value;
                    if (_lOG_PedidoRacao_Item_Aditivo != null)
                    {
                        _lOG_PedidoRacao_Item_Aditivo.CollectionChanged += FixupLOG_PedidoRacao_Item_Aditivo;
                    }
                    OnNavigationPropertyChanged("LOG_PedidoRacao_Item_Aditivo");
                }
            }
        }
        private TrackableCollection<LOG_PedidoRacao_Item_Aditivo> _lOG_PedidoRacao_Item_Aditivo;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            LOG_PedidoRacao = null;
            LOG_PedidoRacao_Item_Aditivo.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupLOG_PedidoRacao(LOG_PedidoRacao previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.LOG_PedidoRacao_Item.Contains(this))
            {
                previousValue.LOG_PedidoRacao_Item.Remove(this);
            }
    
            if (LOG_PedidoRacao != null)
            {
                if (!LOG_PedidoRacao.LOG_PedidoRacao_Item.Contains(this))
                {
                    LOG_PedidoRacao.LOG_PedidoRacao_Item.Add(this);
                }
    
                IDLogPedidoRacao = LOG_PedidoRacao.ID;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("LOG_PedidoRacao")
                    && (ChangeTracker.OriginalValues["LOG_PedidoRacao"] == LOG_PedidoRacao))
                {
                    ChangeTracker.OriginalValues.Remove("LOG_PedidoRacao");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("LOG_PedidoRacao", previousValue);
                }
                if (LOG_PedidoRacao != null && !LOG_PedidoRacao.ChangeTracker.ChangeTrackingEnabled)
                {
                    LOG_PedidoRacao.StartTracking();
                }
            }
        }
    
        private void FixupLOG_PedidoRacao_Item_Aditivo(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (LOG_PedidoRacao_Item_Aditivo item in e.NewItems)
                {
                    item.LOG_PedidoRacao_Item = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("LOG_PedidoRacao_Item_Aditivo", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LOG_PedidoRacao_Item_Aditivo item in e.OldItems)
                {
                    if (ReferenceEquals(item.LOG_PedidoRacao_Item, this))
                    {
                        item.LOG_PedidoRacao_Item = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("LOG_PedidoRacao_Item_Aditivo", item);
                    }
                }
            }
        }

        #endregion

    }
}

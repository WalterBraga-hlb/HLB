//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Este código-fonte foi gerado automaticamente por Microsoft.VSDesigner, Versão 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace MvcAppHylinedoBrasilMobile.br.com.hyline.fluigteste1 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ECMColleagueServiceServiceSoapBinding", Namespace="http://ws.foundation.ecm.technology.totvs.com/")]
    public partial class ECMColleagueServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getColleaguesMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeColleagueOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSummaryColleaguesOperationCompleted;
        
        private System.Threading.SendOrPostCallback validateColleagueLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback activateColleagueOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSimpleColleagueOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback createColleagueOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateColleagueOperationCompleted;
        
        private System.Threading.SendOrPostCallback createColleaguewithDependenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getColleagueByLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback getColleaguesCompressedDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getColleaguesOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateColleaguewithDependenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback createColleagueWithMapOperationCompleted;
        
        private System.Threading.SendOrPostCallback getColleagueOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ECMColleagueServiceService() {
            this.Url = global::MvcAppHylinedoBrasilMobile.Properties.Settings.Default.MvcAppHylinedoBrasilMobile_br_com_hyline_fluigteste1_ECMColleagueServiceService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getColleaguesMailCompletedEventHandler getColleaguesMailCompleted;
        
        /// <remarks/>
        public event removeColleagueCompletedEventHandler removeColleagueCompleted;
        
        /// <remarks/>
        public event getSummaryColleaguesCompletedEventHandler getSummaryColleaguesCompleted;
        
        /// <remarks/>
        public event validateColleagueLoginCompletedEventHandler validateColleagueLoginCompleted;
        
        /// <remarks/>
        public event activateColleagueCompletedEventHandler activateColleagueCompleted;
        
        /// <remarks/>
        public event getSimpleColleagueCompletedEventHandler getSimpleColleagueCompleted;
        
        /// <remarks/>
        public event getGroupsCompletedEventHandler getGroupsCompleted;
        
        /// <remarks/>
        public event createColleagueCompletedEventHandler createColleagueCompleted;
        
        /// <remarks/>
        public event updateColleagueCompletedEventHandler updateColleagueCompleted;
        
        /// <remarks/>
        public event createColleaguewithDependenciesCompletedEventHandler createColleaguewithDependenciesCompleted;
        
        /// <remarks/>
        public event getColleagueByLoginCompletedEventHandler getColleagueByLoginCompleted;
        
        /// <remarks/>
        public event getColleaguesCompressedDataCompletedEventHandler getColleaguesCompressedDataCompleted;
        
        /// <remarks/>
        public event getColleaguesCompletedEventHandler getColleaguesCompleted;
        
        /// <remarks/>
        public event updateColleaguewithDependenciesCompletedEventHandler updateColleaguewithDependenciesCompleted;
        
        /// <remarks/>
        public event createColleagueWithMapCompletedEventHandler createColleagueWithMapCompleted;
        
        /// <remarks/>
        public event getColleagueCompletedEventHandler getColleagueCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getColleaguesMail", RequestNamespace="http://ws.foundation.ecm.technology.totvs.com/", ResponseNamespace="http://ws.foundation.ecm.technology.totvs.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public colleagueDto[] getColleaguesMail(string username, string password, int companyId, string mail) {
            object[] results = this.Invoke("getColleaguesMail", new object[] {
                        username,
                        password,
                        companyId,
                        mail});
            return ((colleagueDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getColleaguesMailAsync(string username, string password, int companyId, string mail) {
            this.getColleaguesMailAsync(username, password, companyId, mail, null);
        }
        
        /// <remarks/>
        public void getColleaguesMailAsync(string username, string password, int companyId, string mail, object userState) {
            if ((this.getColleaguesMailOperationCompleted == null)) {
                this.getColleaguesMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetColleaguesMailOperationCompleted);
            }
            this.InvokeAsync("getColleaguesMail", new object[] {
                        username,
                        password,
                        companyId,
                        mail}, this.getColleaguesMailOperationCompleted, userState);
        }
        
        private void OngetColleaguesMailOperationCompleted(object arg) {
            if ((this.getColleaguesMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getColleaguesMailCompleted(this, new getColleaguesMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("removeColleague", RequestNamespace="http://ws.foundation.ecm.technology.totvs.com/", ResponseNamespace="http://ws.foundation.ecm.technology.totvs.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string removeColleague(string username, string password, int companyId, string colleagueId) {
            object[] results = this.Invoke("removeColleague", new object[] {
                        username,
                        password,
                        companyId,
                        colleagueId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void removeColleagueAsync(string username, string password, int companyId, string colleagueId) {
            this.removeColleagueAsync(username, password, companyId, colleagueId, null);
        }
        
        /// <remarks/>
        public void removeColleagueAsync(string username, string password, int companyId, string colleagueId, object userState) {
            if ((this.removeColleagueOperationCompleted == null)) {
                this.removeColleagueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveColleagueOperationCompleted);
            }
            this.InvokeAsync("removeColleague", new object[] {
                        username,
                        password,
                        companyId,
                        colleagueId}, this.removeColleagueOperationCompleted, userState);
        }
        
        private void OnremoveColleagueOperationCompleted(object arg) {
            if ((this.removeColleagueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeColleagueCompleted(this, new removeColleagueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getSummaryColleagues", RequestNamespace="http://ws.foundation.ecm.technology.totvs.com/", ResponseNamespace="http://ws.foundation.ecm.technology.totvs.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public colleagueDto[] getSummaryColleagues(int companyId) {
            object[] results = this.Invoke("getSummaryColleagues", new object[] {
                        companyId});
            return ((colleagueDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getSummaryColleaguesAsync(int companyId) {
            this.getSummaryColleaguesAsync(companyId, null);
        }
        
        /// <remarks/>
        public void getSummaryColleaguesAsync(int companyId, object userState) {
            if ((this.getSummaryColleaguesOperationCompleted == null)) {
                this.getSummaryColleaguesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSummaryColleaguesOperationCompleted);
            }
            this.InvokeAsync("getSummaryColleagues", new object[] {
                        companyId}, this.getSummaryColleaguesOperationCompleted, userState);
        }
        
        private void OngetSummaryColleaguesOperationCompleted(object arg) {
            if ((this.getSummaryColleaguesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSummaryColleaguesCompleted(this, new getSummaryColleaguesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("validateColleagueLogin", RequestNamespace="http://ws.foundation.ecm.technology.totvs.com/", ResponseNamespace="http://ws.foundation.ecm.technology.totvs.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string validateColleagueLogin(int companyId, string colleagueId, string password) {
            object[] results = this.Invoke("validateColleagueLogin", new object[] {
                        companyId,
                        colleagueId,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void validateColleagueLoginAsync(int companyId, string colleagueId, string password) {
            this.validateColleagueLoginAsync(companyId, colleagueId, password, null);
        }
        
        /// <remarks/>
        public void validateColleagueLoginAsync(int companyId, string colleagueId, string password, object userState) {
            if ((this.validateColleagueLoginOperationCompleted == null)) {
                this.validateColleagueLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateColleagueLoginOperationCompleted);
            }
            this.InvokeAsync("validateColleagueLogin", new object[] {
                        companyId,
                        colleagueId,
                        password}, this.validateColleagueLoginOperationCompleted, userState);
        }
        
        private void OnvalidateColleagueLoginOperationCompleted(object arg) {
            if ((this.validateColleagueLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateColleagueLoginCompleted(this, new validateColleagueLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("activateColleague", RequestNamespace="http://ws.foundation.ecm.technology.totvs.com/", ResponseNamespace="http://ws.foundation.ecm.technology.totvs.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public string activateColleague(string username, string password, int companyId, string colleagueId) {
            object[] results = this.Invoke("activateColleague", new object[] {
                        username,
                        password,
                        companyId,
                        colleagueId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void activateColleagueAsync(string username, string password, int companyId, string colleagueId) {
            this.activateColleagueAsync(username, password, companyId, colleagueId, null);
        }
        
        /// <remarks/>
        public void activateColleagueAsync(string username, string password, int companyId, string colleagueId, object userState) {
            if ((this.activateColleagueOperationCompleted == null)) {
                this.activateColleagueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnactivateColleagueOperationCompleted);
            }
            this.InvokeAsync("activateColleague", new object[] {
                        username,
                        password,
                        companyId,
                        colleagueId}, this.activateColleagueOperationCompleted, userState);
        }
        
        private void OnactivateColleagueOperationCompleted(object arg) {
            if ((this.activateColleagueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.activateColleagueCompleted(this, new activateColleagueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getColleague", RequestNamespace="http://ws.foundation.ecm.technology.totvs.com/", ResponseNamespace="http://ws.foundation.ecm.technology.totvs.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public colleagueDto getSimpleColleague(string username, string password) {
            object[] results = this.Invoke("getSimpleColleague", new object[] {
                        username,
                        password});
            return ((colleagueDto)(results[0]));
        }
        
        /// <remarks/>
        public void getSimpleColleagueAsync(string username, string password) {
            this.getSimpleColleagueAsync(username, password, null);
        }
        
        /// <remarks/>
        public void getSimpleColleagueAsync(string username, string password, object userState) {
            if ((this.getSimpleColleagueOperationCompleted == null)) {
                this.getSimpleColleagueOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSimpleColleagueOperationCompleted);
            }
            this.InvokeAsync("getSimpleColleague", new object[] {
                        username,
                        password}, this.getSimpleColleagueOperationCompleted, userState);
        }
        
        private void OngetSimpleColleagueOperationCompleted(object arg) {
            if ((this.getSimpleColleagueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSimpleColleagueCompleted(this, new getSimpleColleagueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("get Groups", RequestNamespace="http://ws.foundation.ecm.technology.totvs.com/", ResponseNamespace="http://ws.foundation.ecm.technology.totvs.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("colab")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public groupDto[] getGroups(string username, string password, int companyId, string colleagueId) {
            object[] results = this.Invoke("getGroups", new object[] {
                        username,
                        password,
                        companyId,
                        colleagueId});
            return ((groupDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getGroupsAsync(string username, string password, int companyId, string colleagueId) {
            this.getGroupsAsync(username, password, companyId, colleagueId, null);
        }
        
        /// <remarks/>
        public void getGroupsAsync(string username, string password, int companyId, string colleagueId, object userState) {
            if ((this.getGroupsOperationCompleted == null)) {
                this.getGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGroupsOperationCompleted);
            }
            this.InvokeAsync("getGroups", new object[] {
                        username,
                        password,
                        companyId,
                        colleagueId}, this.getGroupsOperationCompleted, userState);
        }
        
        private void OngetGroupsOperationCompleted(object arg) {
            if ((this.getGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGroupsCompleted(this, new getGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("createCollegue", RequestNamespace="http://ws.foundation.ecm.technology.totvs.com/", ResponseNamespace="http://ws.foundation.ecm.technology.totvs.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("resultXML")]
        public string createColleague(string username, string password, int companyId, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] colleagueDto[] colleagues) {
            object[] results = this.Invoke("createColleague", new object[] {
                        username,
                        password,
                        companyId,
                        colleagues});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createColleagueAsync(string username, string password, int companyId, colleagueDto[] colleagues) {
            this.createColleagueAsync(username, password, companyId, colleagues, null);
        }
        
        /// <remarks/>
        public void createColleagueAsync(string username, string password, int companyId, colleagueDto[] colleagues, object userState) {
            if ((this.createColleagueOperationCompleted == null)) {
                this.createColleagueOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateColleagueOperationCompleted);
            }
            this.InvokeAsync("createColleague", new object[] {
                        username,
                        password,
                        companyId,
                        colleagues}, this.createColleagueOperationCompleted, userState);
        }
        
        private void OncreateColleagueOperationCompleted(object arg) {
            if ((this.createColleagueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createColleagueCompleted(this, new createColleagueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("updateColleague", RequestNamespace="http://ws.foundation.ecm.technology.totvs.com/", ResponseNamespace="http://ws.foundation.ecm.technology.totvs.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("resultXML")]
        public string updateColleague(string username, string password, int companyId, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] colleagueDto[] colleagues) {
            object[] results = this.Invoke("updateColleague", new object[] {
                        username,
                        password,
                        companyId,
                        colleagues});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateColleagueAsync(string username, string password, int companyId, colleagueDto[] colleagues) {
            this.updateColleagueAsync(username, password, companyId, colleagues, null);
        }
        
        /// <remarks/>
        public void updateColleagueAsync(string username, string password, int companyId, colleagueDto[] colleagues, object userState) {
            if ((this.updateColleagueOperationCompleted == null)) {
                this.updateColleagueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateColleagueOperationCompleted);
            }
            this.InvokeAsync("updateColleague", new object[] {
                        username,
                        password,
                        companyId,
                        colleagues}, this.updateColleagueOperationCompleted, userState);
        }
        
        private void OnupdateColleagueOperationCompleted(object arg) {
            if ((this.updateColleagueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateColleagueCompleted(this, new updateColleagueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("createColleaguewithDependencies", RequestNamespace="http://ws.foundation.ecm.technology.totvs.com/", ResponseNamespace="http://ws.foundation.ecm.technology.totvs.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("resultXML")]
        public string createColleaguewithDependencies(string username, string password, int companyId, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] colleagueDto[] colleagues, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] groupDto[] groups, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] workflowRoleDto[] workflowRoles) {
            object[] results = this.Invoke("createColleaguewithDependencies", new object[] {
                        username,
                        password,
                        companyId,
                        colleagues,
                        groups,
                        workflowRoles});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createColleaguewithDependenciesAsync(string username, string password, int companyId, colleagueDto[] colleagues, groupDto[] groups, workflowRoleDto[] workflowRoles) {
            this.createColleaguewithDependenciesAsync(username, password, companyId, colleagues, groups, workflowRoles, null);
        }
        
        /// <remarks/>
        public void createColleaguewithDependenciesAsync(string username, string password, int companyId, colleagueDto[] colleagues, groupDto[] groups, workflowRoleDto[] workflowRoles, object userState) {
            if ((this.createColleaguewithDependenciesOperationCompleted == null)) {
                this.createColleaguewithDependenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateColleaguewithDependenciesOperationCompleted);
            }
            this.InvokeAsync("createColleaguewithDependencies", new object[] {
                        username,
                        password,
                        companyId,
                        colleagues,
                        groups,
                        workflowRoles}, this.createColleaguewithDependenciesOperationCompleted, userState);
        }
        
        private void OncreateColleaguewithDependenciesOperationCompleted(object arg) {
            if ((this.createColleaguewithDependenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createColleaguewithDependenciesCompleted(this, new createColleaguewithDependenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getColleagueByLogin", RequestNamespace="http://ws.foundation.ecm.technology.totvs.com/", ResponseNamespace="http://ws.foundation.ecm.technology.totvs.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("colleagueId")]
        public colleagueDto getColleagueByLogin(string username, string password) {
            object[] results = this.Invoke("getColleagueByLogin", new object[] {
                        username,
                        password});
            return ((colleagueDto)(results[0]));
        }
        
        /// <remarks/>
        public void getColleagueByLoginAsync(string username, string password) {
            this.getColleagueByLoginAsync(username, password, null);
        }
        
        /// <remarks/>
        public void getColleagueByLoginAsync(string username, string password, object userState) {
            if ((this.getColleagueByLoginOperationCompleted == null)) {
                this.getColleagueByLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetColleagueByLoginOperationCompleted);
            }
            this.InvokeAsync("getColleagueByLogin", new object[] {
                        username,
                        password}, this.getColleagueByLoginOperationCompleted, userState);
        }
        
        private void OngetColleagueByLoginOperationCompleted(object arg) {
            if ((this.getColleagueByLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getColleagueByLoginCompleted(this, new getColleagueByLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getColleaguesCompressedData", RequestNamespace="http://ws.foundation.ecm.technology.totvs.com/", ResponseNamespace="http://ws.foundation.ecm.technology.totvs.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("result", DataType="base64Binary")]
        public byte[] getColleaguesCompressedData(string username, string password, int companyId) {
            object[] results = this.Invoke("getColleaguesCompressedData", new object[] {
                        username,
                        password,
                        companyId});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getColleaguesCompressedDataAsync(string username, string password, int companyId) {
            this.getColleaguesCompressedDataAsync(username, password, companyId, null);
        }
        
        /// <remarks/>
        public void getColleaguesCompressedDataAsync(string username, string password, int companyId, object userState) {
            if ((this.getColleaguesCompressedDataOperationCompleted == null)) {
                this.getColleaguesCompressedDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetColleaguesCompressedDataOperationCompleted);
            }
            this.InvokeAsync("getColleaguesCompressedData", new object[] {
                        username,
                        password,
                        companyId}, this.getColleaguesCompressedDataOperationCompleted, userState);
        }
        
        private void OngetColleaguesCompressedDataOperationCompleted(object arg) {
            if ((this.getColleaguesCompressedDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getColleaguesCompressedDataCompleted(this, new getColleaguesCompressedDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getColleagues", RequestNamespace="http://ws.foundation.ecm.technology.totvs.com/", ResponseNamespace="http://ws.foundation.ecm.technology.totvs.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public colleagueDto[] getColleagues(string username, string password, int companyId) {
            object[] results = this.Invoke("getColleagues", new object[] {
                        username,
                        password,
                        companyId});
            return ((colleagueDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getColleaguesAsync(string username, string password, int companyId) {
            this.getColleaguesAsync(username, password, companyId, null);
        }
        
        /// <remarks/>
        public void getColleaguesAsync(string username, string password, int companyId, object userState) {
            if ((this.getColleaguesOperationCompleted == null)) {
                this.getColleaguesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetColleaguesOperationCompleted);
            }
            this.InvokeAsync("getColleagues", new object[] {
                        username,
                        password,
                        companyId}, this.getColleaguesOperationCompleted, userState);
        }
        
        private void OngetColleaguesOperationCompleted(object arg) {
            if ((this.getColleaguesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getColleaguesCompleted(this, new getColleaguesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("updateColleaguewithDependencies", RequestNamespace="http://ws.foundation.ecm.technology.totvs.com/", ResponseNamespace="http://ws.foundation.ecm.technology.totvs.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("resultXML")]
        public string updateColleaguewithDependencies(string username, string password, int companyId, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] colleagueDto[] colleagues, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] groupDto[] groups, [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] workflowRoleDto[] workflowRoles) {
            object[] results = this.Invoke("updateColleaguewithDependencies", new object[] {
                        username,
                        password,
                        companyId,
                        colleagues,
                        groups,
                        workflowRoles});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateColleaguewithDependenciesAsync(string username, string password, int companyId, colleagueDto[] colleagues, groupDto[] groups, workflowRoleDto[] workflowRoles) {
            this.updateColleaguewithDependenciesAsync(username, password, companyId, colleagues, groups, workflowRoles, null);
        }
        
        /// <remarks/>
        public void updateColleaguewithDependenciesAsync(string username, string password, int companyId, colleagueDto[] colleagues, groupDto[] groups, workflowRoleDto[] workflowRoles, object userState) {
            if ((this.updateColleaguewithDependenciesOperationCompleted == null)) {
                this.updateColleaguewithDependenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateColleaguewithDependenciesOperationCompleted);
            }
            this.InvokeAsync("updateColleaguewithDependencies", new object[] {
                        username,
                        password,
                        companyId,
                        colleagues,
                        groups,
                        workflowRoles}, this.updateColleaguewithDependenciesOperationCompleted, userState);
        }
        
        private void OnupdateColleaguewithDependenciesOperationCompleted(object arg) {
            if ((this.updateColleaguewithDependenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateColleaguewithDependenciesCompleted(this, new updateColleaguewithDependenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("createColleagueWithMap", RequestNamespace="http://ws.foundation.ecm.technology.totvs.com/", ResponseNamespace="http://ws.foundation.ecm.technology.totvs.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("resultXML")]
        public string createColleagueWithMap(string username, string password, string colleagueXML) {
            object[] results = this.Invoke("createColleagueWithMap", new object[] {
                        username,
                        password,
                        colleagueXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createColleagueWithMapAsync(string username, string password, string colleagueXML) {
            this.createColleagueWithMapAsync(username, password, colleagueXML, null);
        }
        
        /// <remarks/>
        public void createColleagueWithMapAsync(string username, string password, string colleagueXML, object userState) {
            if ((this.createColleagueWithMapOperationCompleted == null)) {
                this.createColleagueWithMapOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateColleagueWithMapOperationCompleted);
            }
            this.InvokeAsync("createColleagueWithMap", new object[] {
                        username,
                        password,
                        colleagueXML}, this.createColleagueWithMapOperationCompleted, userState);
        }
        
        private void OncreateColleagueWithMapOperationCompleted(object arg) {
            if ((this.createColleagueWithMapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createColleagueWithMapCompleted(this, new createColleagueWithMapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getColleague", RequestNamespace="http://ws.foundation.ecm.technology.totvs.com/", ResponseNamespace="http://ws.foundation.ecm.technology.totvs.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("colab")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public colleagueDto[] getColleague(string username, string password, int companyId, string colleagueId) {
            object[] results = this.Invoke("getColleague", new object[] {
                        username,
                        password,
                        companyId,
                        colleagueId});
            return ((colleagueDto[])(results[0]));
        }
        
        /// <remarks/>
        public void getColleagueAsync(string username, string password, int companyId, string colleagueId) {
            this.getColleagueAsync(username, password, companyId, colleagueId, null);
        }
        
        /// <remarks/>
        public void getColleagueAsync(string username, string password, int companyId, string colleagueId, object userState) {
            if ((this.getColleagueOperationCompleted == null)) {
                this.getColleagueOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetColleagueOperationCompleted);
            }
            this.InvokeAsync("getColleague", new object[] {
                        username,
                        password,
                        companyId,
                        colleagueId}, this.getColleagueOperationCompleted, userState);
        }
        
        private void OngetColleagueOperationCompleted(object arg) {
            if ((this.getColleagueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getColleagueCompleted(this, new getColleagueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.foundation.ecm.technology.totvs.com/")]
    public partial class colleagueDto {
        
        private bool activeField;
        
        private bool activeFieldSpecified;
        
        private bool adminUserField;
        
        private bool adminUserFieldSpecified;
        
        private int area1IdField;
        
        private bool area1IdFieldSpecified;
        
        private int area2IdField;
        
        private bool area2IdFieldSpecified;
        
        private int area3IdField;
        
        private bool area3IdFieldSpecified;
        
        private int area4IdField;
        
        private bool area4IdFieldSpecified;
        
        private int area5IdField;
        
        private bool area5IdFieldSpecified;
        
        private string colleagueIdField;
        
        private string colleagueNameField;
        
        private string colleaguebackgroundField;
        
        private long companyIdField;
        
        private string currentProjectField;
        
        private string defaultLanguageField;
        
        private string dialectIdField;
        
        private string ecmVersionField;
        
        private bool emailHtmlField;
        
        private bool emailHtmlFieldSpecified;
        
        private string especializationAreaField;
        
        private string extensionNrField;
        
        private bool gedUserField;
        
        private bool gedUserFieldSpecified;
        
        private string groupIdField;
        
        private bool guestUserField;
        
        private bool guestUserFieldSpecified;
        
        private string homePageField;
        
        private string loginField;
        
        private string mailField;
        
        private float maxPrivateSizeField;
        
        private bool maxPrivateSizeFieldSpecified;
        
        private int menuConfigField;
        
        private bool menuConfigFieldSpecified;
        
        private bool nominalUserField;
        
        private bool nominalUserFieldSpecified;
        
        private string passwdField;
        
        private string photoPathField;
        
        private int rowIdField;
        
        private string sessionIdField;
        
        private float usedSpaceField;
        
        private bool usedSpaceFieldSpecified;
        
        private string volumeIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool activeSpecified {
            get {
                return this.activeFieldSpecified;
            }
            set {
                this.activeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool adminUser {
            get {
                return this.adminUserField;
            }
            set {
                this.adminUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool adminUserSpecified {
            get {
                return this.adminUserFieldSpecified;
            }
            set {
                this.adminUserFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int area1Id {
            get {
                return this.area1IdField;
            }
            set {
                this.area1IdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool area1IdSpecified {
            get {
                return this.area1IdFieldSpecified;
            }
            set {
                this.area1IdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int area2Id {
            get {
                return this.area2IdField;
            }
            set {
                this.area2IdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool area2IdSpecified {
            get {
                return this.area2IdFieldSpecified;
            }
            set {
                this.area2IdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int area3Id {
            get {
                return this.area3IdField;
            }
            set {
                this.area3IdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool area3IdSpecified {
            get {
                return this.area3IdFieldSpecified;
            }
            set {
                this.area3IdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int area4Id {
            get {
                return this.area4IdField;
            }
            set {
                this.area4IdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool area4IdSpecified {
            get {
                return this.area4IdFieldSpecified;
            }
            set {
                this.area4IdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int area5Id {
            get {
                return this.area5IdField;
            }
            set {
                this.area5IdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool area5IdSpecified {
            get {
                return this.area5IdFieldSpecified;
            }
            set {
                this.area5IdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string colleagueId {
            get {
                return this.colleagueIdField;
            }
            set {
                this.colleagueIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string colleagueName {
            get {
                return this.colleagueNameField;
            }
            set {
                this.colleagueNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string colleaguebackground {
            get {
                return this.colleaguebackgroundField;
            }
            set {
                this.colleaguebackgroundField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long companyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string currentProject {
            get {
                return this.currentProjectField;
            }
            set {
                this.currentProjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string defaultLanguage {
            get {
                return this.defaultLanguageField;
            }
            set {
                this.defaultLanguageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dialectId {
            get {
                return this.dialectIdField;
            }
            set {
                this.dialectIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ecmVersion {
            get {
                return this.ecmVersionField;
            }
            set {
                this.ecmVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool emailHtml {
            get {
                return this.emailHtmlField;
            }
            set {
                this.emailHtmlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool emailHtmlSpecified {
            get {
                return this.emailHtmlFieldSpecified;
            }
            set {
                this.emailHtmlFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string especializationArea {
            get {
                return this.especializationAreaField;
            }
            set {
                this.especializationAreaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string extensionNr {
            get {
                return this.extensionNrField;
            }
            set {
                this.extensionNrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool gedUser {
            get {
                return this.gedUserField;
            }
            set {
                this.gedUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gedUserSpecified {
            get {
                return this.gedUserFieldSpecified;
            }
            set {
                this.gedUserFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string groupId {
            get {
                return this.groupIdField;
            }
            set {
                this.groupIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool guestUser {
            get {
                return this.guestUserField;
            }
            set {
                this.guestUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool guestUserSpecified {
            get {
                return this.guestUserFieldSpecified;
            }
            set {
                this.guestUserFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string homePage {
            get {
                return this.homePageField;
            }
            set {
                this.homePageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mail {
            get {
                return this.mailField;
            }
            set {
                this.mailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float maxPrivateSize {
            get {
                return this.maxPrivateSizeField;
            }
            set {
                this.maxPrivateSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxPrivateSizeSpecified {
            get {
                return this.maxPrivateSizeFieldSpecified;
            }
            set {
                this.maxPrivateSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int menuConfig {
            get {
                return this.menuConfigField;
            }
            set {
                this.menuConfigField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool menuConfigSpecified {
            get {
                return this.menuConfigFieldSpecified;
            }
            set {
                this.menuConfigFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool nominalUser {
            get {
                return this.nominalUserField;
            }
            set {
                this.nominalUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool nominalUserSpecified {
            get {
                return this.nominalUserFieldSpecified;
            }
            set {
                this.nominalUserFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string passwd {
            get {
                return this.passwdField;
            }
            set {
                this.passwdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string photoPath {
            get {
                return this.photoPathField;
            }
            set {
                this.photoPathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int rowId {
            get {
                return this.rowIdField;
            }
            set {
                this.rowIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float usedSpace {
            get {
                return this.usedSpaceField;
            }
            set {
                this.usedSpaceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool usedSpaceSpecified {
            get {
                return this.usedSpaceFieldSpecified;
            }
            set {
                this.usedSpaceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string volumeId {
            get {
                return this.volumeIdField;
            }
            set {
                this.volumeIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.foundation.ecm.technology.totvs.com/")]
    public partial class workflowRoleDto {
        
        private long companyIdField;
        
        private string[] fooField;
        
        private string roleDescriptionField;
        
        private string roleIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long companyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("foo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] foo {
            get {
                return this.fooField;
            }
            set {
                this.fooField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string roleDescription {
            get {
                return this.roleDescriptionField;
            }
            set {
                this.roleDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string roleId {
            get {
                return this.roleIdField;
            }
            set {
                this.roleIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.foundation.ecm.technology.totvs.com/")]
    public partial class groupDto {
        
        private long companyIdField;
        
        private string[] fooField;
        
        private string groupDescriptionField;
        
        private string groupIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long companyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("foo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] foo {
            get {
                return this.fooField;
            }
            set {
                this.fooField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string groupDescription {
            get {
                return this.groupDescriptionField;
            }
            set {
                this.groupDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string groupId {
            get {
                return this.groupIdField;
            }
            set {
                this.groupIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getColleaguesMailCompletedEventHandler(object sender, getColleaguesMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getColleaguesMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getColleaguesMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public colleagueDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((colleagueDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void removeColleagueCompletedEventHandler(object sender, removeColleagueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeColleagueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeColleagueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getSummaryColleaguesCompletedEventHandler(object sender, getSummaryColleaguesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSummaryColleaguesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSummaryColleaguesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public colleagueDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((colleagueDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void validateColleagueLoginCompletedEventHandler(object sender, validateColleagueLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateColleagueLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validateColleagueLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void activateColleagueCompletedEventHandler(object sender, activateColleagueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class activateColleagueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal activateColleagueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getSimpleColleagueCompletedEventHandler(object sender, getSimpleColleagueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSimpleColleagueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSimpleColleagueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public colleagueDto Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((colleagueDto)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getGroupsCompletedEventHandler(object sender, getGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public groupDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((groupDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createColleagueCompletedEventHandler(object sender, createColleagueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createColleagueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createColleagueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updateColleagueCompletedEventHandler(object sender, updateColleagueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateColleagueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateColleagueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createColleaguewithDependenciesCompletedEventHandler(object sender, createColleaguewithDependenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createColleaguewithDependenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createColleaguewithDependenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getColleagueByLoginCompletedEventHandler(object sender, getColleagueByLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getColleagueByLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getColleagueByLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public colleagueDto Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((colleagueDto)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getColleaguesCompressedDataCompletedEventHandler(object sender, getColleaguesCompressedDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getColleaguesCompressedDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getColleaguesCompressedDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getColleaguesCompletedEventHandler(object sender, getColleaguesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getColleaguesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getColleaguesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public colleagueDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((colleagueDto[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void updateColleaguewithDependenciesCompletedEventHandler(object sender, updateColleaguewithDependenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateColleaguewithDependenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateColleaguewithDependenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void createColleagueWithMapCompletedEventHandler(object sender, createColleagueWithMapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createColleagueWithMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createColleagueWithMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void getColleagueCompletedEventHandler(object sender, getColleagueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getColleagueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getColleagueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public colleagueDto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((colleagueDto[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591
@{
    System.Web.HttpBrowserCapabilitiesBase browser = Request.Browser;
    
    int id = Convert.ToInt32(Session["idSelecionado"].ToString());

    MvcAppHylinedoBrasilMobile.Models.HLBAPPEntities hlbapp = new MvcAppHylinedoBrasilMobile.Models.HLBAPPEntities();
    MvcAppHylinedoBrasilMobile.Models.bdApolo.bdApoloEntities apolo = new MvcAppHylinedoBrasilMobile.Models.bdApolo.bdApoloEntities();

    MvcAppHylinedoBrasilMobile.Models.Investimento_Solicitacao invSol = hlbapp.Investimento_Solicitacao
        .Where(w => w.ID == id).FirstOrDefault();

    var listaFornecedores = hlbapp.Investimento_Solicitacao_Item_Cotacao
        .Where(w => hlbapp.Investimento_Solicitacao_Item
            .Any(a => a.ID == w.IDInvestimentoSolicitacaoItem && a.IDInvestimentoSolicitacao == id
                && a.IDCotacaoEscolhida == w.Sequencia))
        .GroupBy(g => new
        {
            g.FornecedorCodigo,
            g.FornecedorDescricao
        })
        .OrderBy(o => o.Key.FornecedorDescricao)
        .ToList();
}

<script src="../../Scripts/jquery.maskedinput.js" type="text/javascript"></script>

<script language="javascript" type="text/javascript">
    window.onkeydown = function (e) {
        if (e.keyCode === 116) {
            alert("Função não permitida");
            e.keyCode = 0;
            e.returnValue = false;
            return false;
        }
    }

    function filtroCondPag(o, nameSession, nameDDL) {
        var valor = o.value;
        $.ajax({
            url: '/Orcamento/FiltraCondPag',
            type: 'POST',
            data: JSON.stringify({ pesquisa: valor, nameLista: nameSession }),
            dataType: 'json',
            contentType: 'application/json',
            success: function (data) {
                $('select#' + nameDDL).empty();
                $.each(data, function (key, SelectListItem) {
                    $('select#' + nameDDL).append('<option value="' + SelectListItem.Value + '">' + SelectListItem.Text + '</option>');
                });
                $('select#' + nameDDL).selectmenu('refresh');
            }
        });
    }
</script>

<div align="center">
    <ul data-role="listview" data-inset="true">
        <li>
            @Html.ActionLink("Voltar para a Lista de Solicitações de Investimento", "ListaSolicitacaoInvestimento", "Orcamento",
                null,
                new { @class = "solInvestimento", @title = "Clique aqui para voltar para a Lista de Solicitações de Investimento" })
        </li>
    </ul>
    @Html.Image(@Url.Content("~/Content/icons/sol_invest.png"), "Solicitação de Investimento")
    <h2>Gerar Pedidos de Compra para a Solicitação de Investimento ID @(id.ToString()) - @(invSol.Descricao)</h2>
</div>
<br />
<h4 style="color:red;">@Html.Raw(ViewBag.Erro)</h4>
<h4 style="color:blue;">@Html.Raw(ViewBag.Mensagem)</h4>

<div id="divTabelaIndexPV" style="overflow:auto" >
    @foreach (var forn in listaFornecedores)
    {
        decimal valorTotal = 0;

        var listaItens = hlbapp.Investimento_Solicitacao_Item_Cotacao
            .Where(w => hlbapp.Investimento_Solicitacao_Item
                .Any(a => a.ID == w.IDInvestimentoSolicitacaoItem && a.IDInvestimentoSolicitacao == id
                    && a.IDCotacaoEscolhida == w.Sequencia)
                && w.FornecedorCodigo == forn.Key.FornecedorCodigo)
            .OrderBy(o => o.SequenciaItem)
            .ToList();

        MvcAppHylinedoBrasilMobile.Models.Investimento_Solicitacao_Item_Cotacao iSIC = listaItens.FirstOrDefault();
        
        MvcAppHylinedoBrasilMobile.Models.Investimento_Solicitacao_Item iSI = hlbapp.Investimento_Solicitacao_Item
            .Where(w => w.ID == iSIC.IDInvestimentoSolicitacaoItem).FirstOrDefault();
        
        string dadosPedido = "";
        if (iSI.NumeroPedidoCompraApolo != "" && iSI.NumeroPedidoCompraApolo != null)
        {
            dadosPedido = "Pedido de Compra gerado: " + iSI.EmpresaPedidoCompraApolo + " - " + iSI.NumeroPedidoCompraApolo;
        }
        
        using (Html.BeginForm("ConfirmaGeraPedidoCompra", "Orcamento", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.Hidden("codigoFornecedor", forn.Key.FornecedorCodigo);
            <ul data-role="listview" data-inset="true">
                <li data-role="list-divider">@(forn.Key.FornecedorCodigo + " - " + forn.Key.FornecedorDescricao)</li>
                @if (dadosPedido != "")
                {
                    <li data-role="list-divider">@(dadosPedido)</li>
                }
                <li>
                    <table id="tabelaIndexPV" class="ajustetabelaIndexPV">
                        <tbody class="ajustetabelaIndexPV">
                            <tr class="ajustetabelaIndexPV">
                                <th class="ajustetabelaIndexPV">
                                    Código Produto
                                </th>
                                <th class="ajustetabelaIndexPV">
                                    Descrição Produto
                                </th>
                                <th class="ajustetabelaIndexPV">
                                    Quantidade
                                </th>
                                <th class="ajustetabelaIndexPV">
                                    Valor Unitário
                                </th>
                                <th class="ajustetabelaIndexPV">
                                    Valor Total
                                </th>
                            </tr>
                            @foreach (var item in listaItens)
                            {
                                MvcAppHylinedoBrasilMobile.Models.bdApolo.PRODUTO produto = apolo.PRODUTO
                                    .Where(w => w.ProdCodEstr == iSI.CodigoProdutoApolo).FirstOrDefault();
            
                                <tr class="ajustetabelaIndexPV">
                                    <td class="ajustetabelaIndexPV">
                                        @(iSI.CodigoProdutoApolo)
                                    </td>
                                    <td class="ajustetabelaIndexPV">
                                        @(produto.ProdNome)
                                    </td>
                                    <td class="ajustetabelaIndexPV">
                                        @(String.Format("{0:N0}", iSI.Qtde))
                                    </td>
                                    <td class="ajustetabelaIndexPV">
                                        @(String.Format("{0:C2}", item.Valor))
                                    </td>
                                    <td class="ajustetabelaIndexPV">
                                        @(String.Format("{0:C2}", (iSI.Qtde * item.Valor)))
                                    </td>
                                </tr>
        
                                valorTotal = valorTotal + (iSI.Qtde * item.Valor);
                            }
                            <tr class="ajustetabelaIndexPV">
                                <th class="ajustetabelaIndexPV" colspan="5">
                                    @("Total do Fornecedor: " + String.Format("{0:C}", valorTotal))
                                </th>
                            </tr>       
                        </tbody>
                    </table>
                    <b>
                        Para filtrar a condição de pagamento, informe abaixo parte do nome ou o código estruturado e tecle TAB para realizar a pequisa.
                    </b>
                    @Html.TextBox("filtroCondPag_" + forn.Key.FornecedorCodigo, "",
                    new
                    {
                        @onchange = "filtroCondPag(this, \"CondPag\", \"ddlCondPag_" + forn.Key.FornecedorCodigo + "\")"
                    })
                    @Html.DropDownList(
                        "condicaoPagamento",
                        (List<SelectListItem>)Session["ListaCondPagApolo"],
                        "(Selecione uma Condição de Pagamento)",
                        new { @id = "ddlCondPag_" + forn.Key.FornecedorCodigo, @required = true })
                    @if (dadosPedido != "")
                    {
                        <h4 style="color:red; background-color:Yellow">CUIDADO!!! EXISTE PEDIDO GERADO! CASO CLIQUE NOVAMENTE NO BOTÃO ABAIXO O PEDIDO ANTIGO SERÁ DELETADO E SERÁ GERADO UM NOVO PEDIDO!</h4>
                    }
                    <input type="submit" value="Gerar Pedido para @forn.Key.FornecedorCodigo - @forn.Key.FornecedorDescricao" />
                </li>
            </ul>
        }
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
@{
    System.Web.HttpBrowserCapabilitiesBase browser = Request.Browser;
}

<script src="../../Scripts/jquery.maskedinput.js" type="text/javascript"></script>

<script language="javascript" type="text/javascript">
    window.onbeforeunload = function () {
        return "Não é possível atualizar a página porque os dados serão perdidos! Sendo assim, a página será fechada!";
    }

    window.onkeydown = function (e) {
        if (e.keyCode === 116) {
            alert("Função não permitida");
            e.keyCode = 0;
            e.returnValue = false;
            return false;
        }
    }

    $(document).ready(function () {
        verificaAnoFiscal();
    });

    $('#ddlAnoFiscal').change(function () {
        verificaAnoFiscal();
    });

    $('#ddlDepartamento').change(function () {
        if (verificaNumeroProjetoDepartamento()) { return; }
        var codDepartamento = $('#ddlDepartamento').val();
        $.ajax({
            url: '/Orcamento/CarregaResponsaveis',
            type: 'POST',
            data: JSON.stringify({ departamento: codDepartamento }),
            dataType: 'json',
            contentType: 'application/json',
            success: function (data) {
                $('select#ddlResponsavel').empty();
                $('select#ddlResponsavel').append('<option value="0" selected="selected">(Selecione um Responsável)</option>');
                $.each(data, function (key, SelectListItem) {
                    $('select#ddlResponsavel').append('<option value="' + SelectListItem.Value + '">' + SelectListItem.Text + '</option>');
                });
                $('select#ddlResponsavel').selectmenu('refresh');
            }
        });
    });

    function verificaNumeroProjetoDepartamento() {
        var codDepartamento = $('#ddlDepartamento option:selected').val();
        var numProjeto = $('#txtNumProjeto').val();
        var aFiscal = $('#ddlAnoFiscal option:selected').val();
        var errorHolder = document.getElementById('errorNumProjeto');
        $.ajax({
            url: '/Orcamento/VerificaNumeroDepartamento',
            type: 'POST',
            data: JSON.stringify({ departamento: codDepartamento, nProjeto: numProjeto, anoFiscal: aFiscal }),
            dataType: 'json',
            contentType: 'application/json',
            success: function (data) {
                if (data != "") {
                    errorHolder.innerHTML = data;
                    $('#txtNumProjeto').focus();
                    $('#add').button('disable');
                    $('[type="submit"]').button('refresh');
                    return true;
                } else {
                    errorHolder.innerHTML = '';
                    $('#add').button('enable');
                    $('[type="submit"]').button('refresh');
                    return false;
                }
            }
        });
    }

    function verificaAnoFiscal() {
        var anoFiscal = $('#ddlAnoFiscal option:selected').val();
        $.ajax({
            url: '/Orcamento/VerificaAnoFiscal',
            type: 'POST',
            data: JSON.stringify({ aFiscal: anoFiscal }),
            dataType: 'json',
            contentType: 'application/json',
            success: function (data) {
                if (data == 'Manual') {
                    $('#pnlValorAprovado').hide();
                    $('#pnlListaInvestimentoMes').hide();
                } else {
                    $('#pnlValorAprovado').show();
                    $('#pnlListaInvestimentoMes').show();
                }
            }
        });
    }

    $('#txtNumProjeto').blur(function () {
        verificaNumeroProjetoDepartamento();
    });

    $('#add').click(function () {
        if (verificaNumeroProjetoDepartamento()) { return; }
        if (verificaSaldoFinal()) { return; }
    });

    function verifyZero(o, error) {
        var errorHolder = document.getElementById(error);
        var replaceValor = o.value.replace(/\./g, '').replace(',', '.');
        var floatValor = parseFloat(replaceValor);
        if (floatValor == 0) {
            errorHolder.innerHTML = 'Não pode inserir zero!';
            o.focus();
            $('#add').button('disable');
            $('[type="submit"]').button('refresh');
            return true;
        } else {
            errorHolder.innerHTML = '';
            $('#add').button('enable');
            $('[type="submit"]').button('refresh');
            return false;
        }
    }

    /* Máscaras ER */
    function mascara(o, f) {
        v_obj = o
        v_fun = f
        setTimeout("execmascara()", 1)
    }
    function execmascara() {
        v_obj.value = v_fun(v_obj.value)
    }
    function mvalor(v) {
        v = v.replace(/\D/g, ""); //Remove tudo o que não é dígito
        v = v.replace(/(\d)(\d{8})$/, "$1.$2"); //coloca o ponto dos milhões
        v = v.replace(/(\d)(\d{5})$/, "$1.$2"); //coloca o ponto dos milhares

        v = v.replace(/(\d)(\d{2})$/, "$1,$2"); //coloca a virgula antes dos 2 últimos dígitos
        return v;
    }
</script>

<div align="center">
    <ul data-role="listview" data-inset="true">
        <li>
            @Html.ActionLink("Voltar para a Lista de Investimentos", "ListaInvestimentos", "Orcamento", 
                null,
                new { @class = "chart", @title = "Clique aqui para voltar para a Lista de Investimentos" })
        </li>
    </ul>
    @Html.Image(@Url.Content("~/Content/icons/chart.png"), "Investimento")
    <h2>Investimento</h2>
</div>
<br />
<h4 style="color:red;">@Html.Raw(ViewBag.Erro)</h4>
<h4 style="color:blue;">@Html.Raw(ViewBag.Mensagem)</h4>
@using (Html.BeginForm("SaveInvestimento", "Orcamento", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <fieldset>
        <div class="editor-label">
            <b>Nº Projeto:</b>
        </div>
        <div class="editor-field">
            @Html.TextBox("numProjeto", Session["numProjetoInv"], 
                new { @required = true, @placeholder = "Insira o nº do projeto da Alemanha.", @id = "txtNumProjeto",
                    @onkeyup = "this.value = this.value.toUpperCase();"})
        </div>
        <div class="editor-label" id="errorNumProjeto" style="color: Red; font-weight:bold;"></div>
        <div class="editor-label">
            <b>Nome do Projeto:</b>
        </div>
        <div class="editor-field">
            @Html.TextBox("nomeProjeto", Session["nomeProjetoInv"], 
                new { @required = true, @onkeyup = "this.value = this.value.toUpperCase();",
                      @placeholder = "Insira o nome do projeto."
                })
        </div>
        <div class="editor-label">
            <b>Departamento:</b>
        </div>
        <div class="editor-field">
            @Html.DropDownList(
                "Departamento",
                (List<SelectListItem>)Session["ListaDepartamentosInv"],
                "(Selecione um Departamento)",
                new { @id = "ddlDepartamento", @required = true })
        </div>
        <div class="editor-label">
            <b>Responsável:</b>
        </div>
        <div class="editor-field">
            @Html.DropDownList(
                "Responsavel",
                (List<SelectListItem>)Session["ListaResponsavelInv"],
                new { @id = "ddlResponsavel", @required = true })
        </div>
        <div id="pnlValorAprovado">
            <div class="editor-label">
                <b>Valor Aprovado:</b>
            </div>
            <div class="editor-field">
                @if (Request.Browser.IsMobileDevice)
                {
                    @Html.TextBox("valor", Session["valorInv"].ToString().Replace(",", "."),
                      new
                      {
                          @required = true,
                          @placeholder = "Exemplo: 10,54",
                          @type = "number",
                          @step = "0.01",
                          @lang = "pt-BR",
                          @min = "0.01",
                          @id = "txtValorAprovado"
                      })
                }
                else
                {
                    @Html.TextBox("valor", Session["valorInv"],
                      new
                      {
                          @required = true,
                          @placeholder = "Informe somente os números. A vírgula e ponto serão adicionados automaticamente.",
                          @id = "txtValorAprovado",
                          @onkeyup = "mascara(this, mvalor);",
                          @onblur = "verifyZero(this, \"errorValorAprovado\")"
                      })
                }
            </div>
        </div>
        <div class="editor-label" id="errorValorAprovado" style="color: Red; font-weight:bold;"></div>
        <div class="editor-label">
            <b>Ano Fiscal:</b>
        </div>
        <div class="editor-field">
            @Html.DropDownList(
                "AnoFiscal",
                 (List<SelectListItem>)Session["ListaAnoFiscalInv"],
                 new { @id = "ddlAnoFiscal", @required = true })
        </div>

        <div id="pnlListaInvestimentoMes">
            @Html.Partial("_ListaInvestimentoMes")
        </div>

        <p>
            <input type="submit" value="Salvar Investimento" id="add" />
        </p>
    </fieldset>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
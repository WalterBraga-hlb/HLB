@using am = MvcAppHylinedoBrasilMobile.Controllers.AccountMobileController;

@{
    ViewBag.Title = "";
    string lg = Session["language"].ToString();

    MvcAppHylinedoBrasilMobile.Models.HLBAPPEntities bd = new MvcAppHylinedoBrasilMobile.Models.HLBAPPEntities();

    var lista = (List<MvcAppHylinedoBrasilMobile.Models.LayoutDiarioExpedicaos>)Session["ListaItensTransferenciaOvosClassificados"];

    var listaAgrupada = lista
        .GroupBy(g => new
        {
            g.Incubatorio,
            g.DataHoraCarreg,
            g.NumIdentificacao,
            g.LoteCompleto,
            g.Lote,
            g.DataProducao
        })
        .ToList();

    string incubatorio = Session["incubatorioSelecionado"].ToString();

    var listaTipoClassficacaoOvo = bd.TIPO_CLASSFICACAO_OVO
        .Where(w => w.Unidade == incubatorio && w.AproveitamentoOvo == "Incubável" && w.Origem == "Interna")
        .OrderBy(o => o.ID)
        .ToList();
}

<script type="text/javascript">
    function atualizaDataTransferencia() {
        var vData = $('#txtDataTransferencia').val();
        $.ajax({
            url: '/DiarioExpedicao/AtualizaSession',
            type: 'POST',
            data: JSON.stringify({ value: vData, nameSession: 'dataTransferencia' }),
            dataType: 'json',
            contentType: 'application/json',
            success: function (data) {
                if (data == '') {
                } else {
                    alert(data.toString());
                }
            }
        });
    }
    function atualizaTipoTransferencia() {
        var vData = $('#txtDataTransferencia').val();
        $.ajax({
            url: '/DiarioExpedicao/AtualizaSession',
            type: 'POST',
            data: JSON.stringify({ value: vData, nameSession: 'dataTransferencia' }),
            dataType: 'json',
            contentType: 'application/json',
            success: function (data) {
                if (data == '') {
                } else {
                    alert(data.toString());
                }
            }
        });
    }
    function atualizaIncubatorio() {
        var lote = $('#dropBoxIncubatorio option:selected').val();
        $.ajax({
            url: '/DiarioExpedicao/SelecionaIncubatorioDestino',
            type: 'POST',
            data: JSON.stringify({ id: lote }),
            dataType: 'json',
            contentType: 'application/json',
            success: function (data) {
                if (data == '') {
                } else {
                    alert(data.toString());
                }
            }
        });
    }
    function atualizaReclassificacao() {
        var check = document.getElementById('ckReclassificacao').checked;
        $.ajax({
            url: '/DiarioExpedicao/AtualizaSessionReclassificacao',
            type: 'POST',
            data: JSON.stringify({ value: check }),
            dataType: 'json',
            contentType: 'application/json',
            success: function (data) {
                if (data == '') {
                } else {
                    alert(data.toString());
                }
            }
        });
    }
</script>

@using (Html.BeginForm("SaveTransferenciaOvosClassificados", "DiarioExpedicao", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
<div align="center">
    <ul data-role="listview" data-inset="true">
        <li>
            @Html.ActionLink(am.GetTextOnLanguage("Voltar p/ Lista de Transferência de Ovos Classificados", lg), "ListaTransferenciasOvosClassificados", "DiarioExpedicao",
                null, new { @class = "transferencia" })
        </li>
    </ul>
    @Html.Image(@Url.Content("~/Content/icons/transfer.png"), "")
    <h2>@am.GetTextOnLanguage("Transferência de Ovos Classificados", lg)</h2>
    <br />
    <h2>@am.GetTextOnLanguage("Origem da Transferência", lg): @Html.Label(Session["incubatorioSelecionadoNome"].ToString())</h2>
    @if (ViewBag.Erro != null)
    {
        <h4 id="lblMsgErro" class="@(ViewBag.ClasseMsg) ui-li ui-li-static">
            @Html.Raw(ViewBag.Erro)
        </h4>
    }
    <br />
    <div class="editor-label">
        <b>@am.GetTextOnLanguage("Data da Transferência", lg):</b>
    </div>
    <div class="editor-field">
        @Html.TextBox("dataTransferencia", Convert.ToDateTime(Session["dataTransferencia"]).ToString("yyyy-MM-ddTHH:mm:ss"),
            new { @type = "datetime-local", @onchange = "atualizaDataTransferencia()", @id = "txtDataTransferencia" })
    </div>
    <div class="editor-label">
        <b>@am.GetTextOnLanguage("Destino da Transferência", lg):</b>
    </div>
    <div class="editor-field">
        @Html.DropDownList(
            "Text",
            (List<SelectListItem>)Session["ListaIncubatoriosDestino"],
            new { @id = "dropBoxIncubatorio", @onchange = "atualizaIncubatorio()" })
    </div>
    <div class="editor-field">
        <label>
            @Html.CheckBox("reclassificacao", Convert.ToBoolean(Session["reclassificacao"]),
                new { @id = "ckReclassificacao", @onchange = "atualizaReclassificacao()" })@am.GetTextOnLanguage("Os ovos serão reclasificados no incubatório de destino?", lg)
        </label>
    </div>
    <ul data-role="listview" data-inset="true">
        <li>
            @Html.ActionLink(am.GetTextOnLanguage("Novo Lote da Transferência de Ovos Classificados", lg), "CreateTransferenciaOvosClassificadosItem", "DiarioExpedicao",
                null,
                new { @class = "AQO" })
        </li>
    </ul>
    <br />
    <div id="tabelaDEO" style="overflow:auto;">
        <table id="tabela">
            <tr>
                <th></th>
                <th></th>
                <th>
                    @am.GetTextOnLanguage("Lote", lg)
                </th>
                <th>
                    @am.GetTextOnLanguage("Data de Produção", lg)
                </th>
                <th>
                    @am.GetTextOnLanguage("Não Classificado", lg)
                </th>
                @foreach (var tipoOvo in listaTipoClassficacaoOvo)
                {
                    <th>
                        @tipoOvo.DescricaoTipo
                    </th>
                }
            </tr>

            @foreach (var item in listaAgrupada)
            {
                int qtdeExisteSaldoTipoClasOvo = 0;
                int qtdTipoClasOvo = listaTipoClassficacaoOvo.Count + 1;

                foreach (var tipoOvo in listaTipoClassficacaoOvo.Where(w => w.AproveitamentoOvo == "Incubável").ToList())
                {
                    int qtd = 0;
                    var tipoOvoDEO = lista.Where(w => w.NumIdentificacao == item.Key.NumIdentificacao
                                && w.Granja == tipoOvo.CodigoTipo
                                && w.Lote == item.Key.Lote
                                && w.DataProducao == item.Key.DataProducao)
                            .ToList();

                    if (tipoOvoDEO.Count > 0)
                    {
                        qtd = (int)tipoOvoDEO.Sum(s => s.QtdeOvos);

                        if (qtd > 0)
                        {
                            bool existeSaldo = MvcAppHylinedoBrasilMobile.Controllers.DiarioExpedicaoController
                                .ExisteSaldo(tipoOvoDEO.FirstOrDefault().TipoOvo, item.Key.DataHoraCarreg, item.Key.LoteCompleto,
                                    item.Key.DataProducao, qtd);

                            if (existeSaldo)
                            {
                                qtdeExisteSaldoTipoClasOvo++;
                            }
                        }
                        else
                        {
                            qtdeExisteSaldoTipoClasOvo++;
                        }
                    }
                    else
                    {
                        qtdeExisteSaldoTipoClasOvo++;
                    }
                }

                //var qtdSC = lista.Where(w => w.NumIdentificacao == item.Key.NumIdentificacao
                //        && w.Granja == incubatorio
                //        && w.Lote == item.Key.Lote
                //        && w.DataProducao == item.Key.DataProducao)
                //    .Sum(s => s.QtdeOvos);

                int qtdSC = 0;
                var tipoOvoDEOSC = lista.Where(w => w.NumIdentificacao == item.Key.NumIdentificacao
                            && w.Granja == incubatorio
                            && w.Lote == item.Key.Lote
                            && w.DataProducao == item.Key.DataProducao)
                        .ToList();

                if (tipoOvoDEOSC.Count > 0)
                {
                    qtdSC = (int)tipoOvoDEOSC.Sum(s => s.QtdeOvos);

                    if (qtdSC > 0)
                    {
                        bool existeSaldo = MvcAppHylinedoBrasilMobile.Controllers.DiarioExpedicaoController
                            .ExisteSaldo(incubatorio, item.Key.DataHoraCarreg, item.Key.LoteCompleto,
                                item.Key.DataProducao, qtdSC);

                        if (existeSaldo)
                        {
                            qtdeExisteSaldoTipoClasOvo++;
                        }
                    }
                    else
                    {
                        qtdeExisteSaldoTipoClasOvo++;
                    }
                }
                else
                {
                    qtdeExisteSaldoTipoClasOvo++;
                }

            <tr>
                <td class="ajuste">
                    <div align="center">
                        @Html.ActionLink("Edit", "EditTransferenciaOvosClassificadosItem",
                            new
                            {
                                numIdentificacao = item.Key.NumIdentificacao,
                                lote = item.Key.LoteCompleto,
                                dataProducao = item.Key.DataProducao
                            },
                            new { @class = "edit" })
                    </div>
                </td>
                <td class="ajuste">
                    <div align="center">
                        @if (qtdeExisteSaldoTipoClasOvo == qtdTipoClasOvo)
                        {
                            @Html.ActionLink("Delete", "DeleteTransferenciaOvosClassificadosItem",
                                new
                                {
                                    numIdentificacao = item.Key.NumIdentificacao,
                                    lote = item.Key.LoteCompleto,
                                    dataProducao = item.Key.DataProducao
                                },
                                new { @class = "delete" })
                        }
                    </div>
                </td>
                <td>
                    @item.Key.Lote
                </td>
                <td>
                    @item.Key.DataProducao.ToString("dd/MM/yyyy")
                </td>
                <td>
                    @String.Format("{0:N0}", qtdSC)
                </td>
                @foreach (var tipoOvo in listaTipoClassficacaoOvo)
                {
                    var qtd = lista.Where(w => w.NumIdentificacao == item.Key.NumIdentificacao
                            && w.Granja == tipoOvo.CodigoTipo
                            && w.Lote == item.Key.Lote
                            && w.DataProducao == item.Key.DataProducao)
                        .Sum(s => s.QtdeOvos);

                    <td>
                        @String.Format("{0:N0}", qtd)
                    </td>
                }
            </tr>
            }

        </table>
    </div>
    <p>
        <input type="submit" value="@am.GetTextOnLanguage("Salvar Transferência de Ovos Classificados", lg)" id="add" />
    </p>
</div>
}
@model IEnumerable<MvcAppHylinedoBrasilMobile.Models.Pedido_Venda>
<style type="text/css">
    .msgErro 
    {
        background-color: Red;
        color: White;
        border-radius: 10px;
        margin: .6em 0;
    }
    
    .msgSucesso
    {
        background-color: Blue;
        color: White;
        border-radius: 10px;
        margin: .6em 0;
    }
</style>

@{
    ViewBag.Title = "";

    MvcAppHylinedoBrasilMobile.Models.HLBAPPEntities hlbapp = 
        new MvcAppHylinedoBrasilMobile.Models.HLBAPPEntities();

    MvcAppHylinedoBrasilMobile.Models.bdApolo.bdApoloEntities apolo = 
        new MvcAppHylinedoBrasilMobile.Models.bdApolo.bdApoloEntities();

    MvcAppHylinedoBrasilMobile.Models.bdApolo2.Apolo10Entities apolo2 = 
        new MvcAppHylinedoBrasilMobile.Models.bdApolo2.Apolo10Entities();
    
    List<MvcAppHylinedoBrasilMobile.Models.Status_Ped_Venda> listStatus =
        hlbapp
        .Status_Ped_Venda.OrderBy(o => o.Status).ToList();

    var listStatusLinha =
        hlbapp
        .Status_Ped_Venda.GroupBy(g => g.LinhaExiba).OrderBy(o => o.Key).ToList();

    string login = Session["login"].ToString();

    MvcAppHylinedoBrasilMobile.Models.bdApolo.VENDEDOR vendedorLogin =
                apolo
                .VENDEDOR.Where(w => w.USERLoginSite == login).FirstOrDefault();

    string vendLoginFiltro = "";

    if (vendedorLogin == null)
    {
        vendedorLogin = new MvcAppHylinedoBrasilMobile.Models.bdApolo.VENDEDOR();
    }
    else
    {
        vendLoginFiltro = vendedorLogin.VendCod.Substring(1, 6);
    }

    List<MvcAppHylinedoBrasilMobile.Models.Pedido_Venda> listaPV =
        (List<MvcAppHylinedoBrasilMobile.Models.Pedido_Venda>)Session["listaIndexPV"];

    int existePedidoDuplicadoCHIC = hlbapp
        .VU_Verifica_Pedidos_Num_CHIC_Duplicados
        .Count();
}

<div align="center">
    <p>
        @Html.ActionLink("Voltar p/ Menu Principal", "Index", "HomeMobile")
    </p>
    @*@if (Session["login"].ToString().Equals("palves"))
    {
        <p>
            @Html.ActionLink("Importar Dados do CHIC p/ BD", "ImportaDadosAntigos", "PedidoVenda")
        </p>
        <p>
            @Html.ActionLink("Importar Dados do CHIC p/ BD - Vacinas", "ImportaDadosAntigosVacinas", "PedidoVenda")
        </p>
        <p>
            @Html.ActionLink("InsereRispensTodaVaxxitek", "InsereRispensTodaVaxxitek", "PedidoVenda")
        </p>
        <p>
            @Html.ActionLink("ImportaPlanalto", "ImportaPlanalto", "PedidoVenda")
        </p>
        <p>
            @Html.ActionLink("AtualizaPedidosLTZtoNM", "AtualizaPedidosLTZtoNM", "PedidoVenda")
        </p>
    }*@
    @Html.Image(@Url.Content("~/Content/icons/pedidoVenda.png"), "Lista de Pedidos de Venda")
    <h2>Lista de Pedidos de Venda</h2>
</div>
<br />
@if (ViewBag.Erro != null)
{
<h4 class="msgErro ui-li ui-li-static">
    @Html.Raw(ViewBag.Erro.Replace("\r\n", "<br />"))
</h4>
}
@if (ViewBag.Mensagem != null)
{
<h4 class="msgSucesso ui-li ui-li-static">
    @Html.Raw(ViewBag.Mensagem.Replace("\r\n", "<br />"))
</h4>
}

@*@if (existePedidoDuplicadoCHIC > 0
    && (MvcAppHylinedoBrasilMobile.Controllers.AccountMobileController
        .GetGroup("HLBAPPM-ImportaPVChic", (System.Collections.ArrayList)Session["Direitos"])))
{
    <div align="center">
        <b style="color:red; background-color:Yellow">
            EXISTEM PEDIDOS COM MESMO NÚMERO DO CHIC!!!
            CLIQUE @Html.ActionLink("AQUI", "ListaReImportPVCHIC", "PedidoVenda") PARA ANALISAR E REIMPORTAR!!!
        </b>
    </div>
}*@

@using (Html.BeginForm("SearchListPedVenda", "PedidoVenda", FormMethod.Post))
{
    <input type="submit" value="Nova Pesquisa" />
}

<ul data-role="listview" data-inset="true">
    <li data-role="list-divider">Menu do Pedido de Venda</li>
    <li>
        @Html.ActionLink("Adicionar Novo Pedido de Venda", "CreateFormPV", "PedidoVenda",
            new { variosPedidos = false },
            new { @class = "add", @title = "Clique aqui para Inserir novo Pedido de Venda" })
    </li>
    @*@if ((MvcAppHyLinedoBrasil.Controllers.AccountController
        .GetGroup("HLBAPPM-PedidoVendaVisualizarTodosPedidos",
        (System.Collections.ArrayList)Session["Direitos"]))
    ||
    (!MvcAppHyLinedoBrasil.Controllers.AccountController
        .GetGroup("HLBAPPM-PedidoVendaDadosExportacao",
        (System.Collections.ArrayList)Session["Direitos"])
    &&
    !MvcAppHyLinedoBrasil.Controllers.AccountController
        .GetGroup("HLBAPPM-PedidoVendaVisualizarTodosPedidos",
        (System.Collections.ArrayList)Session["Direitos"])))*@
    <li>
        @Html.ActionLink("Gerar Pedidos p/ Período", "CreateFormPV", "PedidoVenda",
            new { variosPedidos = true },
            new { @class = "addmany", @title = "Clique aqui para Gerar vários Pedidos para um Período Específico" })
    </li>
</ul>
<br />
<div class="editor-label"  align="center">
    @*<u>Legenda de Ações:</u>*@
    @*@Html.Image(@Url.Content("~/Content/icons/kjots.png"), "")
    <i>Alterar Pedido</i>
    @Html.Image(@Url.Content("~/Content/icons/button_cancel.png"), "")
    <i>Excluir Pedido</i>
    @Html.Image(@Url.Content("~/Content/icons/icn_cancelar.png"), "")
    <i>Cancelar Pedido</i>
    @Html.Image(@Url.Content("~/Content/icons/visualizar.png"), "")
    <i>Visualizar Pedido</i>
    @Html.Image(@Url.Content("~/Content/icons/log.png"), "")
    <i>Visualizar o Histórico de Eventos</i>*@
    <table style="width: 90%">
        <tr style="font-size: xx-small; background-color:Gray">
            <th colspan="6" style="font-size: xx-small; background-color:Gray">
                <u>Legenda de Ações:</u>
            </th>
        </tr>
        <tr style="font-size: xx-small">
            <td style="font-size: xx-small">
                @Html.Image(@Url.Content("~/Content/icons/kjots.png"), "")
                <i>Alterar Pedido</i>
            </td>
            <td style="font-size: xx-small">
                @Html.Image(@Url.Content("~/Content/icons/button_cancel.png"), "")
                <i>Excluir Pedido</i>
            </td>
            <td style="font-size: xx-small">
                @Html.Image(@Url.Content("~/Content/icons/icn_cancelar.png"), "")
                <i>Cancelar Pedido</i>
            </td>
            <td style="font-size: xx-small">
                @Html.Image(@Url.Content("~/Content/icons/visualizar.png"), "")
                <i>Visualizar Pedido</i>
            </td>
            <td style="font-size: xx-small">
                @Html.Image(@Url.Content("~/Content/icons/log.png"), "")
                <i>Visualizar o Histórico de Eventos</i>
            </td>
            <td style="font-size: xx-small">
                @Html.Image(@Url.Content("~/Content/icons/duplicar.png"), "")
                <i>Duplicar Pedido</i>
            </td>
        </tr>
        @if (MvcAppHyLinedoBrasil.Controllers.AccountController
                .GetGroup("HLBAPPM-PedidoVendaDadosExportacao",
                (System.Collections.ArrayList)Session["Direitos"]))
        {
        <tr style="font-size: xx-small">
            <td colspan="4" style="font-size: xx-small">
                @Html.Image(@Url.Content("~/Content/icons/airplane.png"), "")
                <i>Comandos para Gerar / Baixar Documentação de Exportação</i>
            </td>
            <td style="font-size: xx-small">
                @Html.Image(@Url.Content("~/Content/icons/generate.png"), "")
                <i>Gerar Documentação de Exportação</i>
            </td>
            <td style="font-size: xx-small">
                @Html.Image(@Url.Content("~/Content/icons/download.png"), "")
                <i>Baixar Documentação de Exportação</i>
            </td>
        </tr>
        }
    </table>
</div>
<br />

@if ((MvcAppHyLinedoBrasil.Controllers.AccountController
        .GetGroup("HLBAPPM-PedidoVendaVisualizarTodosPedidos",
        (System.Collections.ArrayList)Session["Direitos"]))
    ||
    (!MvcAppHyLinedoBrasil.Controllers.AccountController
        .GetGroup("HLBAPPM-PedidoVendaDadosExportacao",
        (System.Collections.ArrayList)Session["Direitos"])
    &&
    !MvcAppHyLinedoBrasil.Controllers.AccountController
        .GetGroup("HLBAPPM-PedidoVendaVisualizarTodosPedidos",
        (System.Collections.ArrayList)Session["Direitos"])))
{
<div class="editor-label"  align="center" style="overflow:auto;height:230px">
<div class="editor-label"  align="center" style="overflow:auto;width:100%;">
    @using (Html.BeginForm("SearchListPedVendaByStatus", "PedidoVenda", FormMethod.Post))
    {
    <table class="ajusteWithoutHeader">
        <tbody class="ajusteWithoutHeader">
        <tr style="font-size: xx-small; background-color:Gray" class="ajusteWithoutHeader">
            <th colspan="6" style="font-size: xx-small; background-color:Gray" class="ajusteWithoutHeader">
                <u>Filtrar Status dos Pedidos de Venda:</u>
            </th>
        </tr>
        @foreach (var linha in listStatusLinha)
        {
            int qtdLinhaVazia = 5 - listStatus.Where(w => w.LinhaExiba.Equals(linha.Key)).ToList().Count();
            <tr style="font-size: xx-small" class="ajusteWithoutHeader">
                @if (linha.Key == 1)
                {
                    <td style="font-size: xx-small;" class="ajusteWithoutHeader">
                        <label style="width: 100%;font-size: xx-small">
                            @Html.CheckBox("statusSelect", false)
                            <b>(Todos os Status)</b>
                            @Html.Hidden("name", "(Todos os Status)")
                        </label>
                    </td>
                }
                @foreach (var item in listStatus.Where(w => w.LinhaExiba.Equals(linha.Key)).ToList())
                {
                    var listaSelect = (List<SelectListItem>)Session["ListaStatus"];

                    bool selected = false;
                    if (listaSelect != null)
                    {
                        SelectListItem itemSelect = listaSelect.Where(w => w.Text == item.Status).FirstOrDefault();
                        if (itemSelect != null)
                        {
                            selected = itemSelect.Selected;
                        }
                    }

                    if (((Convert.ToInt32(Session["existeConfigAprovGerenciaPV"]) > 0)
                        && item.Descricao.Contains("Gerência"))
                        ||
                        (!item.Descricao.Contains("Gerência"))
                        ||
                        (MvcAppHyLinedoBrasil.Controllers.AccountController
                            .GetGroup("HLBAPPM-PedidoVendaDadosExportacao",
                            (System.Collections.ArrayList)Session["Direitos"])
                            && item.Descricao.Equals("Documentação de Exportação")
                         ))
                    {
                        <td style="font-size: xx-small;background-color: @item.Color" class="ajusteWithoutHeader">
                            @*<ul data-role="listview" data-inset="true">
                                <li>*@
                                    @*@Html.ActionLink(item.Status, "FiltraStatusPV", "PedidoVenda",
                                        new { status = item.Status },
                                        new { @title = "Clique aqui para trazer os Pedidos de Venda do Status " + item.Status })*@
                                    <label style="width: 100%;font-size: xx-small">
                                        @Html.CheckBox("statusSelect", selected)
                                        <b>@item.Status</b>
                                        @Html.Hidden("name", item.Status)
                                    </label>
                                @*</li>
                            </ul>*@
                        </td>
                    }
                }
                @*@for (int i = 0; i < qtdLinhaVazia; i++)
                {
                    <td style="font-size: xx-small;" class="ajusteWithoutHeader">
                    </td>
                }*@
            </tr>
        }
        </tbody>
    </table>
    if (MvcAppHylinedoBrasilMobile.Controllers.AccountMobileController
            .GetGroup("HLBAPPM-PedidoVendaAcessoProjecao", (System.Collections.ArrayList)Session["Direitos"]))
    {
        <label style="width: 99%;font-size: xx-small">
            <b>Exibir Projeções?</b>
            @Html.DropDownList("Projecao", (List<SelectListItem>)Session["ListaSimNaoSearch"], "(Todos)")
        </label>
    }
    <label style="width: 99%;font-size: xx-small">
        @Html.CheckBox("salvarParametros")
        <b>Salvar Parâmetros?</b>
    </label>
    <label style="width: 99%;font-size: xx-small">
        <input type="submit" value="Filtrar Status" />
    </label>
    }
</div>
</div>
<br />
}
<div id="divTabelaIndexPV" style="overflow:auto" >
<table id="tabelaIndexPV" class="ajustetabelaIndexPV">
    <tbody class="ajustetabelaIndexPV">
    <tr class="ajustetabelaIndexPV">
        <th class="ajustetabelaIndexPV">
            ID
        </th>
        <th class="ajustetabelaIndexPV">
            Nº CHIC
        </th>
        @if (MvcAppHyLinedoBrasil.Controllers.AccountController
                .GetGroup("HLBAPPM-PedidoVendaDadosExportacao",
                (System.Collections.ArrayList)Session["Direitos"]))
        {
            <th>
                Geração
            </th>
            <th>
                Tipo Produto
            </th>
        }
        @if (Session["empresa"].ToString().Length > 2)
        {
            <th class="ajustetabelaIndexPV">Empresa</th>
        }
        <th class="ajustetabelaIndexPV">
            Cliente
        </th>
        @if (MvcAppHyLinedoBrasil.Controllers.AccountController
                .GetGroup("HLBAPPM-PedidoVendaDadosExportacao",
                (System.Collections.ArrayList)Session["Direitos"]))
        {
            <th class="ajustetabelaIndexPV">
                País
            </th>
        }
        @*<th>
            Data Ped.
        </th>*@
        <th class="ajustetabelaIndexPV">
            Prim. Ent.
        </th>
        <th class="ajustetabelaIndexPV">
            Últ. Ent.
        </th>
        <th class="ajustetabelaIndexPV">
            Linha / Qtd. (Líq. + Bon. + Rep.)
        </th>
        @if (Model.Where(w => w.Vendedor != vendLoginFiltro).Count() > 0)
        {
        <th class="ajustetabelaIndexPV">
            Vend. / Repres.
        </th>
        }
        @*<th>
            Usuário
        </th>*@
        <th class="ajustetabelaIndexPV">
            Status
        </th>
        @if (MvcAppHyLinedoBrasil.Controllers.AccountController
                .GetGroup("HLBAPPM-PedidoVendaAcessoProjecao",
                (System.Collections.ArrayList)Session["Direitos"]))
        {
        <th class="ajustetabelaIndexPV">Projeção?</th>
        }
        <th class="ajustetabelaIndexPV"></th>
        <th class="ajustetabelaIndexPV"></th>
        <th class="ajustetabelaIndexPV"></th>
        <th class="ajustetabelaIndexPV"></th>
        <th class="ajustetabelaIndexPV"></th>
        @*<th class="ajustetabelaIndexPV"></th>*@
        @if (MvcAppHyLinedoBrasil.Controllers.AccountController
                .GetGroup("HLBAPPM-PedidoVendaDadosExportacao",
                (System.Collections.ArrayList)Session["Direitos"]))
        {
        <th class="ajustetabelaIndexPV">@Html.Image(@Url.Content("~/Content/icons/airplane.png"), "")</th>
        }
    </tr>
@foreach (var item in listaPV)
{
    string orderNoCHIC = "";
    //if (hlbapp
    //    .Item_Pedido_Venda.Where(w => w.IDPedidoVenda == item.ID
    //    && w.OrderNoCHIC != "Cancelado").Count() > 0)
    //{
    //    orderNoCHIC = hlbapp
    //        .Item_Pedido_Venda.Where(w => w.IDPedidoVenda == item.ID
    //        && w.OrderNoCHIC != "Cancelado").Max(m => m.OrderNoCHIC);
    //}
    //else
    //{
    //    orderNoCHIC = hlbapp
    //        .Item_Pedido_Venda.Where(w => w.IDPedidoVenda == item.ID).Max(m => m.OrderNoCHIC);
    //}
    var listaCHIC = hlbapp.Item_Pedido_Venda.Where(w => w.IDPedidoVenda == item.ID
        && ((w.OrderNoCHIC != "" && w.OrderNoCHIC != null && w.OrderNoCHIC != "Cancelado")
            || (w.OrderNoCHICReposicao != "" && w.OrderNoCHICReposicao != null && w.OrderNoCHICReposicao != "Cancelado")))
        .GroupBy(g => new
        {
            g.OrderNoCHIC,
            g.OrderNoCHICReposicao
        })
        .Select(s => new
        {
            s.Key.OrderNoCHIC,
            s.Key.OrderNoCHICReposicao
        })
        .ToList();

    foreach (var ordernochic in listaCHIC)
    {
        if (ordernochic.OrderNoCHIC != null)
        {
            orderNoCHIC = orderNoCHIC + ordernochic.OrderNoCHIC;
        }

        if (ordernochic.OrderNoCHICReposicao != null)
        {
            if (orderNoCHIC != "")
            {
                orderNoCHIC = orderNoCHIC + " / ";
            }
            orderNoCHIC = orderNoCHIC + ordernochic.OrderNoCHICReposicao;
        }

        if (listaCHIC.IndexOf(ordernochic) != (listaCHIC.Count - 1))
        {
            orderNoCHIC = orderNoCHIC + " / ";
        }
    }
    
    <tr class="ajustetabelaIndexPV">
        <td class="ajustetabelaIndexPV">
            @Html.DisplayFor(modelItem => item.ID)
        </td>
        <td class="ajustetabelaIndexPV">
            @if (MvcAppHylinedoBrasilMobile.Controllers.AccountMobileController.GetGroup("HLBAPPM-ImportaPVChic",
                (System.Collections.ArrayList)Session["Direitos"]))
            {
                var numerosCHIC = "";

                foreach (var ordernochic in listaCHIC)
                {
                    if (ordernochic.OrderNoCHIC != null && ordernochic.OrderNoCHIC != "" && ordernochic.OrderNoCHIC != "Cancelado")
                    {
                        //@(ordernochic.OrderNoCHIC);
                        if (numerosCHIC.IndexOf(ordernochic.OrderNoCHIC) == -1)
                        {
                            @Html.ActionLink(ordernochic.OrderNoCHIC, "GerarRelNovaConfirmacaoPDF",
                                new { id = item.ID, operacao = "Venda" },
                                new { @title = "Clique aqui para Gerar a Confirmação do Pedido", @target = "_blank" })
                        }
                        numerosCHIC = numerosCHIC + ordernochic.OrderNoCHIC + "/";
                    }

                    if (ordernochic.OrderNoCHICReposicao != null && ordernochic.OrderNoCHICReposicao != "" && ordernochic.OrderNoCHICReposicao != "Cancelado")
                    {
                        if (numerosCHIC.IndexOf(ordernochic.OrderNoCHICReposicao) == -1)
                        {
                            if (ordernochic.OrderNoCHIC != null && ordernochic.OrderNoCHIC != "" && ordernochic.OrderNoCHIC != "Cancelado")
                            {
                                @(" / ");
                            }
                            //@(ordernochic.OrderNoCHICReposicao);
                            @Html.ActionLink(ordernochic.OrderNoCHICReposicao, "GerarRelNovaConfirmacaoPDF",
                                     new { id = item.ID, operacao = "Reposicao" },
                                     new { @title = "Clique aqui para Gerar a Confirmação do Pedido", @target = "_blank" })
                        }
                        numerosCHIC = numerosCHIC + ordernochic.OrderNoCHICReposicao + "/";
                    }

                    @*if (numerosCHIC.IndexOf(ordernochic.OrderNoCHICReposicao) == -1)
                {
                    if (listaCHIC.IndexOf(ordernochic) != (listaCHIC.Count - 1))
                    {
                        @(" / ");
                    }
                }*@
                }
            }
            else
            {
                @(orderNoCHIC);
            }
        </td>
        @if (MvcAppHyLinedoBrasil.Controllers.AccountController
                .GetGroup("HLBAPPM-PedidoVendaDadosExportacao",
                (System.Collections.ArrayList)Session["Direitos"]))
        {
            MvcAppHylinedoBrasilMobile.Models.Item_Pedido_Venda ipv =
                hlbapp
                .Item_Pedido_Venda.Where(w => w.IDPedidoVenda == item.ID).FirstOrDefault();

            MvcAppHylinedoBrasilMobile.Models.bdApolo.PRODUTO produto =
                new MvcAppHylinedoBrasilMobile.Models.bdApolo.PRODUTO();

            string geracao = "";
            string tipo = "";

            if (ipv != null)
            {
                produto =
                apolo
                        .PRODUTO.Where(w => w.ProdCodEstr == ipv.ProdCodEstr).FirstOrDefault();

                if (produto != null)
                {
                    MvcAppHylinedoBrasilMobile.Models.bdApolo2.CATEGORIA_PRODUTO categProd =
                        apolo2
                        .CATEGORIA_PRODUTO.Where(w => w.CategProdCod == produto.CategProdCod)
                        .FirstOrDefault();

                    if (categProd != null)
                    {
                        geracao = categProd.CategProdNome;
                    }

                    MvcAppHylinedoBrasilMobile.Models.bdApolo2.FAIXA_PRODUTO fxProd =
                        apolo2
                        .FAIXA_PRODUTO.Where(w => w.FxaProdCod == produto.FxaProdCod)
                        .FirstOrDefault();

                    if (fxProd != null)
                    {
                        tipo = fxProd.FxaProdNome;
                    }
                }
                else
                {
                    if (ipv.ProdCodEstr.Contains("Ovos"))
                    {
                        tipo = "Ovos Férteis";
                    }
                    else
                    {
                        tipo = "Pinto de 1 Dia";
                    }
                    geracao = "Comercial";
                }
            }            
            <td>
                @(geracao)
            </td>
            <td>
                @(tipo)
            </td>
        }
        @if (Session["empresa"].ToString().Length > 2)
        {
            <td class="ajustetabelaIndexPV">
                @item.Empresa
            </td>
        }
        <td class="ajustetabelaIndexPV">
        @{
        //   string entnome = apolo
        //.ENTIDADE.Where(w => w.EntCod == item.CodigoCliente).FirstOrDefault().EntNome;

        string entnome = item.NomeCliente;

        int lenEnt = entnome.Length;
        int lenPrintEnt = (lenEnt < 20) ? lenEnt : 20;

        MvcAppHylinedoBrasilMobile.Models.bdApolo.ENTIDADE entidade =
            apolo
            .ENTIDADE.Where(w => w.EntCod == item.CodigoCliente).FirstOrDefault();

        MvcAppHylinedoBrasilMobile.Models.bdApolo.CIDADE cidade =
            apolo
            .CIDADE.Where(w => w.CidCod == entidade.CidCod).FirstOrDefault();
        }
            @(entnome.Substring(0, lenPrintEnt))...
        </td>
        @if (MvcAppHyLinedoBrasil.Controllers.AccountController
                .GetGroup("HLBAPPM-PedidoVendaDadosExportacao",
                (System.Collections.ArrayList)Session["Direitos"]))
        {
        <td class="ajustetabelaIndexPV">
           @(cidade.PaisSigla)
        </td>
        }
        @*<td>
            @String.Format("{0:dd/MM/yy}", item.DataPedido)
        </td>*@
        @{
            var listaItens = hlbapp
             .Item_Pedido_Venda.Where(w => w.IDPedidoVenda == item.ID)
             .OrderBy(o => o.ProdCodEstr).ToList();

            DateTime dataEntregaInicial = listaItens.Max(m => m.DataEntregaInicial);
            DateTime dataEntregaFinal = listaItens.Max(m => m.DataEntregaFinal);
            if (listaItens.Where(w => w.OrderNoCHIC != "Cancelado").Count() > 0)
            {
                dataEntregaInicial = listaItens.Where(w => w.OrderNoCHIC != "Cancelado").Min(m => m.DataEntregaInicial);
                dataEntregaFinal = listaItens.Where(w => w.OrderNoCHIC != "Cancelado").Min(m => m.DataEntregaFinal);
            }

            string linhagens = "";
        }
        <td class="ajustetabelaIndexPV">
            @if (listaItens.Where(w => w.OrderNoCHIC != "Cancelado").Count() > 0)
            {
                @String.Format("{0:dd/MM/yy}", dataEntregaInicial)
            }
            else
            {
                @String.Format("{0:dd/MM/yy}", dataEntregaInicial)
            }   
        </td>
        <td class="ajustetabelaIndexPV">
            @if (listaItens.Where(w => w.OrderNoCHIC != "Cancelado").Count() > 0)
            {
                @String.Format("{0:dd/MM/yy}", dataEntregaFinal)
            }
            else
            {
                @String.Format("{0:dd/MM/yy}", dataEntregaFinal)
            }
        </td>
        <td class="ajustetabelaIndexPV">
            @if (listaItens.Where(w => w.ProdCodEstr.Contains(".")).Count() == 0)
            {
                foreach (var linhagem in listaItens)
                {
                    string qtde = String.Format("{0:N0}",
                            (linhagem.QtdeLiquida) +
                            (linhagem.QtdeBonificada == null ? 0 : linhagem.QtdeBonificada) +
                            (linhagem.QtdeReposicao == null ? 0 : linhagem.QtdeReposicao)
                        );
                    linhagens = linhagens + linhagem.ProdCodEstr + " - <b>" + qtde + "</b>";

                    if (listaItens.IndexOf(linhagem) != (listaItens.Count - 1))
                    {
                        linhagens = linhagens + " <br /> ";
                    }
                }
                @Html.Raw(linhagens)
            }
        </td>
        @{
            string codVendedorCompleto = "0" + item.Vendedor;
            if (item.Vendedor.Length == 7)
            {
                codVendedorCompleto = item.Vendedor;
            }
            MvcAppHylinedoBrasilMobile.Models.bdApolo.VENDEDOR vendedor =
            apolo
            .VENDEDOR.Where(w => w.VendCod == codVendedorCompleto).FirstOrDefault();

            int lenVend = 0;
            if (vendedor != null)
            {
                lenVend = vendedor.VendNome.Length;
            }
            int lenPrintVend = (lenVend < 10) ? lenVend : 10;
        }
        @if (Model.Where(w => w.Vendedor != vendLoginFiltro).Count() > 0)
        {
        <td class="ajustetabelaIndexPV">
            @if (vendedor != null)
            {
                @vendedor.VendNome.Substring(0, lenPrintVend)
            }...
        </td>
        }
        @*<td>
            @(item.Usuario.Substring(0, 10))...
        </td>*@
        <td class="ajustetabelaIndexPV">
            <div style="background-color: 
               @MvcAppHylinedoBrasilMobile.Controllers.PedidoVendaController.GetColorStatus(item.Status);">
               <b>
                @item.Status
               </b>
            </div>
        </td>
        @if (MvcAppHyLinedoBrasil.Controllers.AccountController
                .GetGroup("HLBAPPM-PedidoVendaAcessoProjecao",
                (System.Collections.ArrayList)Session["Direitos"]))
        {
        <td class="ajustetabelaIndexPV">@item.Projecao</td>
        }
        <td class="ajustetabelaIndexPV">
            <div align="center">            
                @Html.ActionLink("Imprimir", "PrintPV",
                    new { id = item.ID, download = false },
                    new
                    {
                        @class = "visualizar",
                        //@target = "_blank",
                        @title = "Clique aqui para Visualizar este Pedido"
                    })
            </div>
        </td>
        <td class="ajustetabelaIndexPV">
            <div align="center">
                @Html.ActionLink("Histórico de Eventos do Pedido", "LogPV",
                    new { id = item.ID },
                    new { @class = "log", @title = "Clique aqui para visualizar o Histórico de Eventos do Pedido" })
            </div>
        </td>
        <td class="ajustetabelaIndexPV">
            <div align="center">
                @if ((!item.Status.Contains("Cancela")
                    || item.Status.Equals("Cancelamento Reprovado"))
                    && dataEntregaFinal >= DateTime.Today)
                {
                    @Html.ActionLink("Edit", "EditFormPV",
                        new { id = item.ID },
                     new { @class = "edit", @title = "Clique aqui para Alterar este Pedido" })
                }
            </div>
        </td>
        <td class="ajustetabelaIndexPV">
            <div align="center">
                @*@if (item.Status.Contains("Cancela"))*@
                @if ((!item.Status.Contains("Cancela") || item.Status.Equals("Cancelamento Reprovado"))
                    &&
                        (dataEntregaFinal >= DateTime.Today
                        ||
                        MvcAppHylinedoBrasilMobile.Controllers.AccountMobileController
                            .GetGroup("HLBAPPM-PedidoVendaPermiteCancelamentoRetroativo", (System.Collections.ArrayList)Session["Direitos"])))
                {
                    if (hlbapp
                            .Item_Pedido_Venda
                            .Where(w => w.IDPedidoVenda == item.ID
                                && (w.OrderNoCHIC != null
                                 && w.OrderNoCHIC != "" && w.OrderNoCHIC != "Cancelado"))
                            .Count() == 0
                        &&
                        hlbapp
                            .Item_Pedido_Venda
                            .Where(w => w.IDPedidoVenda == item.ID
                                && (w.OrderNoCHICReposicao != null
                                 && w.OrderNoCHICReposicao != "" && w.OrderNoCHICReposicao != "Cancelado"))
                            .Count() == 0)
                    {
                        @Html.ActionLink("Delete", "DeletePV",
                            new { id = item.ID },
                                new { @class = "delete", @title = "Clique aqui para Excluir este Pedido" })
                    }
                    else
                    {
                        if (!item.Status.Contains("Pendente"))
                        {
                            @Html.ActionLink("Cancelar", "CancelaPV",
                                new { id = item.ID },
                                    new { @class = "cancel", @title = "Clique aqui para Cancelar Pedido Já Importado" })
                        }
                    }
                }
            </div>
        </td>
        <td class="ajustetabelaIndexPV">
            <div align="center">
            @if (!item.Status.Contains("Cancela")
                    || item.Status.Equals("Cancelamento Reprovado"))
            {
                @Html.ActionLink("Duplicar Pedido", "ConfirmaDuplicacao",
                    new { id = item.ID },
                    new { @class = "duplicar", @title = "Clique aqui para Duplicar o Pedido" });
            }
            </div>
        </td>
        @*<td class="ajustetabelaIndexPV">
            <div align="center">
            @if (orderNoCHIC != "" && orderNoCHIC != null
                && MvcAppHylinedoBrasilMobile.Controllers.AccountMobileController.GetGroup("HLBAPPM-ImportaPVChic", (System.Collections.ArrayList)Session["Direitos"]))
            {
                @Html.ActionLink("Gerar Confirmação", "GerarRelConfirmacaoPDF",
                    new { id = item.ID, orderNo = orderNoCHIC },
                         new { @class = "confirmacao", @title = "Clique aqui para Gerar a Confirmação do Pedido", @target = "_blank" })
            }
            </div>
        </td>*@ 
        @if (MvcAppHyLinedoBrasil.Controllers.AccountController
            .GetGroup("HLBAPPM-PedidoVendaDadosExportacao",
            (System.Collections.ArrayList)Session["Direitos"])
            && !cidade.PaisSigla.Equals("BRA"))
        {
            <td class="ajustetabelaIndexPV">
                <div align="center">
                    @Html.ActionLink("Gerar Documentação de Exportação", "PrintDocExportation",
                            new { id = item.ID },
                            new { @class = "generate", @title = "Clique aqui Gerar os Documentos de Exportação" })
                    @if (!Session["DocExportationPath"].ToString().Equals("")
                        && Session["idSelecionado"].ToString() == item.ID.ToString())
                    {
                        @Html.ActionLink("Download Documentação de Exportação", "DownloadDocExportation",
                                new { id = item.ID },
                                new
                                {
                                    @class = "download",
                                    @title = "Clique aqui Baixar os Documentos de Exportação",
                                    @target = "_blank"
                                });
                    }
                </div>
            </td>
        }
    </tr>
}
</tbody>
</table>
</div>
@*<br />
<div align="center">
    <b>Legenda de Status</b>
    <br />
    <table style="width: 80%">
        <tr style="font-size: xx-small">
            <th>
                Cores
            </th>
            <th style="font-size: xx-small">
                Status
            </th>
            <th>
                Descrição
            </th>
        </tr>
        @foreach (var item in listStatus)
        {
            if (((Convert.ToInt32(Session["existeConfigAprovGerenciaPV"]) > 0)
                && item.Descricao.Contains("Gerência"))
                ||
                (!item.Descricao.Contains("Gerência")))
            {
            <tr style="font-size: xx-small">
                <td style="font-size: xx-small; background-color: @item.Color; border-color: Black;">
                </td>
                <td style="font-size: xx-small; border-color: Black;">
                    <b>@item.Status</b>
                </td>
                <td style="font-size: xx-small; border-color: Black;">
                    <b>@item.Descricao</b>
                </td>
            </tr>
            }
        }
    </table>
</div>*@



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
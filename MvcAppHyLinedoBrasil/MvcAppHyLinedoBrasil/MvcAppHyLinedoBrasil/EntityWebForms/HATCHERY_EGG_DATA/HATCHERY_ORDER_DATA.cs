//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHyLinedoBrasil.EntityWebForms.HATCHERY_EGG_DATA
{
    [DataContract(IsReference = true)]
    public partial class HATCHERY_ORDER_DATA: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _iD = value;
                    OnPropertyChanged("ID");
                }
            }
        }
        private int _iD;
    
        [DataMember]
        public string Hatch_Loc
        {
            get { return _hatch_Loc; }
            set
            {
                if (_hatch_Loc != value)
                {
                    _hatch_Loc = value;
                    OnPropertyChanged("Hatch_Loc");
                }
            }
        }
        private string _hatch_Loc;
    
        [DataMember]
        public Nullable<System.DateTime> Set_date
        {
            get { return _set_date; }
            set
            {
                if (_set_date != value)
                {
                    _set_date = value;
                    OnPropertyChanged("Set_date");
                }
            }
        }
        private Nullable<System.DateTime> _set_date;
    
        [DataMember]
        public string OrderNoCHIC
        {
            get { return _orderNoCHIC; }
            set
            {
                if (_orderNoCHIC != value)
                {
                    _orderNoCHIC = value;
                    OnPropertyChanged("OrderNoCHIC");
                }
            }
        }
        private string _orderNoCHIC;
    
        [DataMember]
        public Nullable<decimal> PesoMedio
        {
            get { return _pesoMedio; }
            set
            {
                if (_pesoMedio != value)
                {
                    _pesoMedio = value;
                    OnPropertyChanged("PesoMedio");
                }
            }
        }
        private Nullable<decimal> _pesoMedio;
    
        [DataMember]
        public Nullable<decimal> UniformidadePerc
        {
            get { return _uniformidadePerc; }
            set
            {
                if (_uniformidadePerc != value)
                {
                    _uniformidadePerc = value;
                    OnPropertyChanged("UniformidadePerc");
                }
            }
        }
        private Nullable<decimal> _uniformidadePerc;
    
        [DataMember]
        public Nullable<System.DateTime> SaidaProgramada
        {
            get { return _saidaProgramada; }
            set
            {
                if (_saidaProgramada != value)
                {
                    _saidaProgramada = value;
                    OnPropertyChanged("SaidaProgramada");
                }
            }
        }
        private Nullable<System.DateTime> _saidaProgramada;
    
        [DataMember]
        public Nullable<System.DateTime> SaidaReal
        {
            get { return _saidaReal; }
            set
            {
                if (_saidaReal != value)
                {
                    _saidaReal = value;
                    OnPropertyChanged("SaidaReal");
                }
            }
        }
        private Nullable<System.DateTime> _saidaReal;
    
        [DataMember]
        public Nullable<int> QtdeAmostra
        {
            get { return _qtdeAmostra; }
            set
            {
                if (_qtdeAmostra != value)
                {
                    _qtdeAmostra = value;
                    OnPropertyChanged("QtdeAmostra");
                }
            }
        }
        private Nullable<int> _qtdeAmostra;
    
        [DataMember]
        public Nullable<int> QtdeVacinada
        {
            get { return _qtdeVacinada; }
            set
            {
                if (_qtdeVacinada != value)
                {
                    _qtdeVacinada = value;
                    OnPropertyChanged("QtdeVacinada");
                }
            }
        }
        private Nullable<int> _qtdeVacinada;
    
        [DataMember]
        public Nullable<int> QtdePontoFioPretoUmbigo
        {
            get { return _qtdePontoFioPretoUmbigo; }
            set
            {
                if (_qtdePontoFioPretoUmbigo != value)
                {
                    _qtdePontoFioPretoUmbigo = value;
                    OnPropertyChanged("QtdePontoFioPretoUmbigo");
                }
            }
        }
        private Nullable<int> _qtdePontoFioPretoUmbigo;
    
        [DataMember]
        public Nullable<int> QtdePesTortosDedosCurvos
        {
            get { return _qtdePesTortosDedosCurvos; }
            set
            {
                if (_qtdePesTortosDedosCurvos != value)
                {
                    _qtdePesTortosDedosCurvos = value;
                    OnPropertyChanged("QtdePesTortosDedosCurvos");
                }
            }
        }
        private Nullable<int> _qtdePesTortosDedosCurvos;
    
        [DataMember]
        public Nullable<int> QtdeErroContagem
        {
            get { return _qtdeErroContagem; }
            set
            {
                if (_qtdeErroContagem != value)
                {
                    _qtdeErroContagem = value;
                    OnPropertyChanged("QtdeErroContagem");
                }
            }
        }
        private Nullable<int> _qtdeErroContagem;
    
        [DataMember]
        public Nullable<int> QtdeErroSexagem
        {
            get { return _qtdeErroSexagem; }
            set
            {
                if (_qtdeErroSexagem != value)
                {
                    _qtdeErroSexagem = value;
                    OnPropertyChanged("QtdeErroSexagem");
                }
            }
        }
        private Nullable<int> _qtdeErroSexagem;
    
        [DataMember]
        public string Observacao
        {
            get { return _observacao; }
            set
            {
                if (_observacao != value)
                {
                    _observacao = value;
                    OnPropertyChanged("Observacao");
                }
            }
        }
        private string _observacao;
    
        [DataMember]
        public string RespInspecaoFinal
        {
            get { return _respInspecaoFinal; }
            set
            {
                if (_respInspecaoFinal != value)
                {
                    _respInspecaoFinal = value;
                    OnPropertyChanged("RespInspecaoFinal");
                }
            }
        }
        private string _respInspecaoFinal;
    
        [DataMember]
        public string RespExpedicaoCarga
        {
            get { return _respExpedicaoCarga; }
            set
            {
                if (_respExpedicaoCarga != value)
                {
                    _respExpedicaoCarga = value;
                    OnPropertyChanged("RespExpedicaoCarga");
                }
            }
        }
        private string _respExpedicaoCarga;
    
        [DataMember]
        public string RespLiberacaoVeiculo
        {
            get { return _respLiberacaoVeiculo; }
            set
            {
                if (_respLiberacaoVeiculo != value)
                {
                    _respLiberacaoVeiculo = value;
                    OnPropertyChanged("RespLiberacaoVeiculo");
                }
            }
        }
        private string _respLiberacaoVeiculo;
    
        [DataMember]
        public Nullable<int> QtdeErroSelecao
        {
            get { return _qtdeErroSelecao; }
            set
            {
                if (_qtdeErroSelecao != value)
                {
                    _qtdeErroSelecao = value;
                    OnPropertyChanged("QtdeErroSelecao");
                }
            }
        }
        private Nullable<int> _qtdeErroSelecao;
    
        [DataMember]
        public string RNC
        {
            get { return _rNC; }
            set
            {
                if (_rNC != value)
                {
                    _rNC = value;
                    OnPropertyChanged("RNC");
                }
            }
        }
        private string _rNC;
    
        [DataMember]
        public string DisposicaoRNC
        {
            get { return _disposicaoRNC; }
            set
            {
                if (_disposicaoRNC != value)
                {
                    _disposicaoRNC = value;
                    OnPropertyChanged("DisposicaoRNC");
                }
            }
        }
        private string _disposicaoRNC;
    
        [DataMember]
        public string Variety
        {
            get { return _variety; }
            set
            {
                if (_variety != value)
                {
                    _variety = value;
                    OnPropertyChanged("Variety");
                }
            }
        }
        private string _variety;
    
        [DataMember]
        public string NumeroRNC
        {
            get { return _numeroRNC; }
            set
            {
                if (_numeroRNC != value)
                {
                    _numeroRNC = value;
                    OnPropertyChanged("NumeroRNC");
                }
            }
        }
        private string _numeroRNC;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion

    }
}

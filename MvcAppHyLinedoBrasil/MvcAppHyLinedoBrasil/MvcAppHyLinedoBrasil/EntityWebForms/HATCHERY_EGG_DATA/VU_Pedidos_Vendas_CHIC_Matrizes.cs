//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHyLinedoBrasil.EntityWebForms.HATCHERY_EGG_DATA
{
    [DataContract(IsReference = true)]
    public partial class VU_Pedidos_Vendas_CHIC_Matrizes: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _iD = value;
                    OnPropertyChanged("ID");
                }
            }
        }
        private int _iD;
    
        [DataMember]
        public string AnoMes
        {
            get { return _anoMes; }
            set
            {
                if (_anoMes != value)
                {
                    _anoMes = value;
                    OnPropertyChanged("AnoMes");
                }
            }
        }
        private string _anoMes;
    
        [DataMember]
        public string DataProgramacaoStr
        {
            get { return _dataProgramacaoStr; }
            set
            {
                if (_dataProgramacaoStr != value)
                {
                    _dataProgramacaoStr = value;
                    OnPropertyChanged("DataProgramacaoStr");
                }
            }
        }
        private string _dataProgramacaoStr;
    
        [DataMember]
        public string Qtde
        {
            get { return _qtde; }
            set
            {
                if (_qtde != value)
                {
                    _qtde = value;
                    OnPropertyChanged("Qtde");
                }
            }
        }
        private string _qtde;
    
        [DataMember]
        public string ValorTot
        {
            get { return _valorTot; }
            set
            {
                if (_valorTot != value)
                {
                    _valorTot = value;
                    OnPropertyChanged("ValorTot");
                }
            }
        }
        private string _valorTot;
    
        [DataMember]
        public decimal PercEclosaoConfig
        {
            get { return _percEclosaoConfig; }
            set
            {
                if (_percEclosaoConfig != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'PercEclosaoConfig' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _percEclosaoConfig = value;
                    OnPropertyChanged("PercEclosaoConfig");
                }
            }
        }
        private decimal _percEclosaoConfig;
    
        [DataMember]
        public string PercEclosaoConfigStr
        {
            get { return _percEclosaoConfigStr; }
            set
            {
                if (_percEclosaoConfigStr != value)
                {
                    _percEclosaoConfigStr = value;
                    OnPropertyChanged("PercEclosaoConfigStr");
                }
            }
        }
        private string _percEclosaoConfigStr;
    
        [DataMember]
        public string LinhagemFLIP
        {
            get { return _linhagemFLIP; }
            set
            {
                if (_linhagemFLIP != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'LinhagemFLIP' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _linhagemFLIP = value;
                    OnPropertyChanged("LinhagemFLIP");
                }
            }
        }
        private string _linhagemFLIP;
    
        [DataMember]
        public string TipoMatriz
        {
            get { return _tipoMatriz; }
            set
            {
                if (_tipoMatriz != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'TipoMatriz' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _tipoMatriz = value;
                    OnPropertyChanged("TipoMatriz");
                }
            }
        }
        private string _tipoMatriz;
    
        [DataMember]
        public string TipoProduto
        {
            get { return _tipoProduto; }
            set
            {
                if (_tipoProduto != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'TipoProduto' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _tipoProduto = value;
                    OnPropertyChanged("TipoProduto");
                }
            }
        }
        private string _tipoProduto;
    
        [DataMember]
        public string Genero
        {
            get { return _genero; }
            set
            {
                if (_genero != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Genero' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _genero = value;
                    OnPropertyChanged("Genero");
                }
            }
        }
        private string _genero;
    
        [DataMember]
        public Nullable<System.DateTime> DataIncubacao
        {
            get { return _dataIncubacao; }
            set
            {
                if (_dataIncubacao != value)
                {
                    _dataIncubacao = value;
                    OnPropertyChanged("DataIncubacao");
                }
            }
        }
        private Nullable<System.DateTime> _dataIncubacao;
    
        [DataMember]
        public string QtdeOvosStr
        {
            get { return _qtdeOvosStr; }
            set
            {
                if (_qtdeOvosStr != value)
                {
                    _qtdeOvosStr = value;
                    OnPropertyChanged("QtdeOvosStr");
                }
            }
        }
        private string _qtdeOvosStr;
    
        [DataMember]
        public string QtdeCxsOvosStr
        {
            get { return _qtdeCxsOvosStr; }
            set
            {
                if (_qtdeCxsOvosStr != value)
                {
                    _qtdeCxsOvosStr = value;
                    OnPropertyChanged("QtdeCxsOvosStr");
                }
            }
        }
        private string _qtdeCxsOvosStr;
    
        [DataMember]
        public string CHICNum
        {
            get { return _cHICNum; }
            set
            {
                if (_cHICNum != value)
                {
                    _cHICNum = value;
                    OnPropertyChanged("CHICNum");
                }
            }
        }
        private string _cHICNum;
    
        [DataMember]
        public Nullable<int> Quantidade
        {
            get { return _quantidade; }
            set
            {
                if (_quantidade != value)
                {
                    _quantidade = value;
                    OnPropertyChanged("Quantidade");
                }
            }
        }
        private Nullable<int> _quantidade;
    
        [DataMember]
        public string QtdeTotalStr
        {
            get { return _qtdeTotalStr; }
            set
            {
                if (_qtdeTotalStr != value)
                {
                    _qtdeTotalStr = value;
                    OnPropertyChanged("QtdeTotalStr");
                }
            }
        }
        private string _qtdeTotalStr;
    
        [DataMember]
        public int QtdeVendida
        {
            get { return _qtdeVendida; }
            set
            {
                if (_qtdeVendida != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'QtdeVendida' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _qtdeVendida = value;
                    OnPropertyChanged("QtdeVendida");
                }
            }
        }
        private int _qtdeVendida;
    
        [DataMember]
        public string QtdeVendidaStr
        {
            get { return _qtdeVendidaStr; }
            set
            {
                if (_qtdeVendidaStr != value)
                {
                    _qtdeVendidaStr = value;
                    OnPropertyChanged("QtdeVendidaStr");
                }
            }
        }
        private string _qtdeVendidaStr;
    
        [DataMember]
        public int QtdeBonificada
        {
            get { return _qtdeBonificada; }
            set
            {
                if (_qtdeBonificada != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'QtdeBonificada' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _qtdeBonificada = value;
                    OnPropertyChanged("QtdeBonificada");
                }
            }
        }
        private int _qtdeBonificada;
    
        [DataMember]
        public string QtdeBonificadaStr
        {
            get { return _qtdeBonificadaStr; }
            set
            {
                if (_qtdeBonificadaStr != value)
                {
                    _qtdeBonificadaStr = value;
                    OnPropertyChanged("QtdeBonificadaStr");
                }
            }
        }
        private string _qtdeBonificadaStr;
    
        [DataMember]
        public decimal PercBonificacao
        {
            get { return _percBonificacao; }
            set
            {
                if (_percBonificacao != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'PercBonificacao' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _percBonificacao = value;
                    OnPropertyChanged("PercBonificacao");
                }
            }
        }
        private decimal _percBonificacao;
    
        [DataMember]
        public string PercBonificacaoStr
        {
            get { return _percBonificacaoStr; }
            set
            {
                if (_percBonificacaoStr != value)
                {
                    _percBonificacaoStr = value;
                    OnPropertyChanged("PercBonificacaoStr");
                }
            }
        }
        private string _percBonificacaoStr;
    
        [DataMember]
        public int QtdeReposicao
        {
            get { return _qtdeReposicao; }
            set
            {
                if (_qtdeReposicao != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'QtdeReposicao' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _qtdeReposicao = value;
                    OnPropertyChanged("QtdeReposicao");
                }
            }
        }
        private int _qtdeReposicao;
    
        [DataMember]
        public string QtdeReposicaoStr
        {
            get { return _qtdeReposicaoStr; }
            set
            {
                if (_qtdeReposicaoStr != value)
                {
                    _qtdeReposicaoStr = value;
                    OnPropertyChanged("QtdeReposicaoStr");
                }
            }
        }
        private string _qtdeReposicaoStr;
    
        [DataMember]
        public string MotivoReposicao
        {
            get { return _motivoReposicao; }
            set
            {
                if (_motivoReposicao != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'MotivoReposicao' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _motivoReposicao = value;
                    OnPropertyChanged("MotivoReposicao");
                }
            }
        }
        private string _motivoReposicao;
    
        [DataMember]
        public string CHICNumReposicao
        {
            get { return _cHICNumReposicao; }
            set
            {
                if (_cHICNumReposicao != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'CHICNumReposicao' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _cHICNumReposicao = value;
                    OnPropertyChanged("CHICNumReposicao");
                }
            }
        }
        private string _cHICNumReposicao;
    
        [DataMember]
        public int QtdeSobra
        {
            get { return _qtdeSobra; }
            set
            {
                if (_qtdeSobra != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'QtdeSobra' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _qtdeSobra = value;
                    OnPropertyChanged("QtdeSobra");
                }
            }
        }
        private int _qtdeSobra;
    
        [DataMember]
        public string MotivoSobra
        {
            get { return _motivoSobra; }
            set
            {
                if (_motivoSobra != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'MotivoSobra' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _motivoSobra = value;
                    OnPropertyChanged("MotivoSobra");
                }
            }
        }
        private string _motivoSobra;
    
        [DataMember]
        public decimal PrecoProduto
        {
            get { return _precoProduto; }
            set
            {
                if (_precoProduto != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'PrecoProduto' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _precoProduto = value;
                    OnPropertyChanged("PrecoProduto");
                }
            }
        }
        private decimal _precoProduto;
    
        [DataMember]
        public string PrecoProdutoStr
        {
            get { return _precoProdutoStr; }
            set
            {
                if (_precoProdutoStr != value)
                {
                    _precoProdutoStr = value;
                    OnPropertyChanged("PrecoProdutoStr");
                }
            }
        }
        private string _precoProdutoStr;
    
        [DataMember]
        public Nullable<decimal> ValorTotalPrd
        {
            get { return _valorTotalPrd; }
            set
            {
                if (_valorTotalPrd != value)
                {
                    _valorTotalPrd = value;
                    OnPropertyChanged("ValorTotalPrd");
                }
            }
        }
        private Nullable<decimal> _valorTotalPrd;
    
        [DataMember]
        public string ValorTotalPrdStr
        {
            get { return _valorTotalPrdStr; }
            set
            {
                if (_valorTotalPrdStr != value)
                {
                    _valorTotalPrdStr = value;
                    OnPropertyChanged("ValorTotalPrdStr");
                }
            }
        }
        private string _valorTotalPrdStr;
    
        [DataMember]
        public Nullable<System.DateTime> DataProgramacao
        {
            get { return _dataProgramacao; }
            set
            {
                if (_dataProgramacao != value)
                {
                    _dataProgramacao = value;
                    OnPropertyChanged("DataProgramacao");
                }
            }
        }
        private Nullable<System.DateTime> _dataProgramacao;
    
        [DataMember]
        public string CodigoCliente
        {
            get { return _codigoCliente; }
            set
            {
                if (_codigoCliente != value)
                {
                    _codigoCliente = value;
                    OnPropertyChanged("CodigoCliente");
                }
            }
        }
        private string _codigoCliente;
    
        [DataMember]
        public string NomeCliente
        {
            get { return _nomeCliente; }
            set
            {
                if (_nomeCliente != value)
                {
                    _nomeCliente = value;
                    OnPropertyChanged("NomeCliente");
                }
            }
        }
        private string _nomeCliente;
    
        [DataMember]
        public string ClienteCompleto
        {
            get { return _clienteCompleto; }
            set
            {
                if (_clienteCompleto != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ClienteCompleto' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _clienteCompleto = value;
                    OnPropertyChanged("ClienteCompleto");
                }
            }
        }
        private string _clienteCompleto;
    
        [DataMember]
        public Nullable<int> NumVeiculo
        {
            get { return _numVeiculo; }
            set
            {
                if (_numVeiculo != value)
                {
                    _numVeiculo = value;
                    OnPropertyChanged("NumVeiculo");
                }
            }
        }
        private Nullable<int> _numVeiculo;
    
        [DataMember]
        public string LocalEntrega
        {
            get { return _localEntrega; }
            set
            {
                if (_localEntrega != value)
                {
                    _localEntrega = value;
                    OnPropertyChanged("LocalEntrega");
                }
            }
        }
        private string _localEntrega;
    
        [DataMember]
        public string Produto
        {
            get { return _produto; }
            set
            {
                if (_produto != value)
                {
                    _produto = value;
                    OnPropertyChanged("Produto");
                }
            }
        }
        private string _produto;
    
        [DataMember]
        public string Linhagem
        {
            get { return _linhagem; }
            set
            {
                if (_linhagem != value)
                {
                    _linhagem = value;
                    OnPropertyChanged("Linhagem");
                }
            }
        }
        private string _linhagem;
    
        [DataMember]
        public string LinhagemComercial
        {
            get { return _linhagemComercial; }
            set
            {
                if (_linhagemComercial != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'LinhagemComercial' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _linhagemComercial = value;
                    OnPropertyChanged("LinhagemComercial");
                }
            }
        }
        private string _linhagemComercial;
    
        [DataMember]
        public string CorExibe
        {
            get { return _corExibe; }
            set
            {
                if (_corExibe != value)
                {
                    _corExibe = value;
                    OnPropertyChanged("CorExibe");
                }
            }
        }
        private string _corExibe;
    
        [DataMember]
        public string Embalagem
        {
            get { return _embalagem; }
            set
            {
                if (_embalagem != value)
                {
                    _embalagem = value;
                    OnPropertyChanged("Embalagem");
                }
            }
        }
        private string _embalagem;
    
        [DataMember]
        public string LocalNascimento
        {
            get { return _localNascimento; }
            set
            {
                if (_localNascimento != value)
                {
                    _localNascimento = value;
                    OnPropertyChanged("LocalNascimento");
                }
            }
        }
        private string _localNascimento;
    
        [DataMember]
        public Nullable<System.DateTime> DataEntrega
        {
            get { return _dataEntrega; }
            set
            {
                if (_dataEntrega != value)
                {
                    _dataEntrega = value;
                    OnPropertyChanged("DataEntrega");
                }
            }
        }
        private Nullable<System.DateTime> _dataEntrega;
    
        [DataMember]
        public string CodigoRepresentante
        {
            get { return _codigoRepresentante; }
            set
            {
                if (_codigoRepresentante != value)
                {
                    _codigoRepresentante = value;
                    OnPropertyChanged("CodigoRepresentante");
                }
            }
        }
        private string _codigoRepresentante;
    
        [DataMember]
        public string NomeRepresentante
        {
            get { return _nomeRepresentante; }
            set
            {
                if (_nomeRepresentante != value)
                {
                    _nomeRepresentante = value;
                    OnPropertyChanged("NomeRepresentante");
                }
            }
        }
        private string _nomeRepresentante;
    
        [DataMember]
        public string RepresentanteCompleto
        {
            get { return _representanteCompleto; }
            set
            {
                if (_representanteCompleto != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'RepresentanteCompleto' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _representanteCompleto = value;
                    OnPropertyChanged("RepresentanteCompleto");
                }
            }
        }
        private string _representanteCompleto;
    
        [DataMember]
        public string EmpresaTranportador
        {
            get { return _empresaTranportador; }
            set
            {
                if (_empresaTranportador != value)
                {
                    _empresaTranportador = value;
                    OnPropertyChanged("EmpresaTranportador");
                }
            }
        }
        private string _empresaTranportador;
    
        [DataMember]
        public string Empresa
        {
            get { return _empresa; }
            set
            {
                if (_empresa != value)
                {
                    _empresa = value;
                    OnPropertyChanged("Empresa");
                }
            }
        }
        private string _empresa;
    
        [DataMember]
        public string Descricaro
        {
            get { return _descricaro; }
            set
            {
                if (_descricaro != value)
                {
                    _descricaro = value;
                    OnPropertyChanged("Descricaro");
                }
            }
        }
        private string _descricaro;
    
        [DataMember]
        public Nullable<int> IDPedidoVenda
        {
            get { return _iDPedidoVenda; }
            set
            {
                if (_iDPedidoVenda != value)
                {
                    _iDPedidoVenda = value;
                    OnPropertyChanged("IDPedidoVenda");
                }
            }
        }
        private Nullable<int> _iDPedidoVenda;
    
        [DataMember]
        public int EnderEntSeq
        {
            get { return _enderEntSeq; }
            set
            {
                if (_enderEntSeq != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'EnderEntSeq' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _enderEntSeq = value;
                    OnPropertyChanged("EnderEntSeq");
                }
            }
        }
        private int _enderEntSeq;
    
        [DataMember]
        public string Status
        {
            get { return _status; }
            set
            {
                if (_status != value)
                {
                    _status = value;
                    OnPropertyChanged("Status");
                }
            }
        }
        private string _status;
    
        [DataMember]
        public string Color
        {
            get { return _color; }
            set
            {
                if (_color != value)
                {
                    _color = value;
                    OnPropertyChanged("Color");
                }
            }
        }
        private string _color;
    
        [DataMember]
        public string EntCpfCgc
        {
            get { return _entCpfCgc; }
            set
            {
                if (_entCpfCgc != value)
                {
                    _entCpfCgc = value;
                    OnPropertyChanged("EntCpfCgc");
                }
            }
        }
        private string _entCpfCgc;
    
        [DataMember]
        public string cidade
        {
            get { return _cidade; }
            set
            {
                if (_cidade != value)
                {
                    _cidade = value;
                    OnPropertyChanged("cidade");
                }
            }
        }
        private string _cidade;
    
        [DataMember]
        public string uf
        {
            get { return _uf; }
            set
            {
                if (_uf != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'uf' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _uf = value;
                    OnPropertyChanged("uf");
                }
            }
        }
        private string _uf;
    
        [DataMember]
        public string UfRegGeog
        {
            get { return _ufRegGeog; }
            set
            {
                if (_ufRegGeog != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'UfRegGeog' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _ufRegGeog = value;
                    OnPropertyChanged("UfRegGeog");
                }
            }
        }
        private string _ufRegGeog;
    
        [DataMember]
        public string pais
        {
            get { return _pais; }
            set
            {
                if (_pais != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'pais' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _pais = value;
                    OnPropertyChanged("pais");
                }
            }
        }
        private string _pais;
    
        [DataMember]
        public string NomeFantasia
        {
            get { return _nomeFantasia; }
            set
            {
                if (_nomeFantasia != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'NomeFantasia' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _nomeFantasia = value;
                    OnPropertyChanged("NomeFantasia");
                }
            }
        }
        private string _nomeFantasia;
    
        [DataMember]
        public string StatusEntidade
        {
            get { return _statusEntidade; }
            set
            {
                if (_statusEntidade != value)
                {
                    _statusEntidade = value;
                    OnPropertyChanged("StatusEntidade");
                }
            }
        }
        private string _statusEntidade;
    
        [DataMember]
        public string StatusEntidadeCor
        {
            get { return _statusEntidadeCor; }
            set
            {
                if (_statusEntidadeCor != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'StatusEntidadeCor' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _statusEntidadeCor = value;
                    OnPropertyChanged("StatusEntidadeCor");
                }
            }
        }
        private string _statusEntidadeCor;
    
        [DataMember]
        public string EntFone
        {
            get { return _entFone; }
            set
            {
                if (_entFone != value)
                {
                    _entFone = value;
                    OnPropertyChanged("EntFone");
                }
            }
        }
        private string _entFone;
    
        [DataMember]
        public string ObsProgramacao
        {
            get { return _obsProgramacao; }
            set
            {
                if (_obsProgramacao != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ObsProgramacao' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _obsProgramacao = value;
                    OnPropertyChanged("ObsProgramacao");
                }
            }
        }
        private string _obsProgramacao;
    
        [DataMember]
        public string ObservacaoCHIC
        {
            get { return _observacaoCHIC; }
            set
            {
                if (_observacaoCHIC != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ObservacaoCHIC' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _observacaoCHIC = value;
                    OnPropertyChanged("ObservacaoCHIC");
                }
            }
        }
        private string _observacaoCHIC;
    
        [DataMember]
        public string ObsFaturamento
        {
            get { return _obsFaturamento; }
            set
            {
                if (_obsFaturamento != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ObsFaturamento' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _obsFaturamento = value;
                    OnPropertyChanged("ObsFaturamento");
                }
            }
        }
        private string _obsFaturamento;
    
        [DataMember]
        public string CondicaoPagamento
        {
            get { return _condicaoPagamento; }
            set
            {
                if (_condicaoPagamento != value)
                {
                    _condicaoPagamento = value;
                    OnPropertyChanged("CondicaoPagamento");
                }
            }
        }
        private string _condicaoPagamento;
    
        [DataMember]
        public string VendNome
        {
            get { return _vendNome; }
            set
            {
                if (_vendNome != value)
                {
                    _vendNome = value;
                    OnPropertyChanged("VendNome");
                }
            }
        }
        private string _vendNome;
    
        [DataMember]
        public string ExisteConfEnv
        {
            get { return _existeConfEnv; }
            set
            {
                if (_existeConfEnv != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ExisteConfEnv' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _existeConfEnv = value;
                    OnPropertyChanged("ExisteConfEnv");
                }
            }
        }
        private string _existeConfEnv;
    
        [DataMember]
        public string ExisteConfAss
        {
            get { return _existeConfAss; }
            set
            {
                if (_existeConfAss != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ExisteConfAss' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _existeConfAss = value;
                    OnPropertyChanged("ExisteConfAss");
                }
            }
        }
        private string _existeConfAss;
    
        [DataMember]
        public string ExisteConfEnvFat
        {
            get { return _existeConfEnvFat; }
            set
            {
                if (_existeConfEnvFat != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ExisteConfEnvFat' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _existeConfEnvFat = value;
                    OnPropertyChanged("ExisteConfEnvFat");
                }
            }
        }
        private string _existeConfEnvFat;
    
        [DataMember]
        public string InicioCarregamentoEsperado
        {
            get { return _inicioCarregamentoEsperado; }
            set
            {
                if (_inicioCarregamentoEsperado != value)
                {
                    _inicioCarregamentoEsperado = value;
                    OnPropertyChanged("InicioCarregamentoEsperado");
                }
            }
        }
        private string _inicioCarregamentoEsperado;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion

    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHyLinedoBrasil.EntityWebForms.HATCHERY_EGG_DATA
{
    [DataContract(IsReference = true)]
    public partial class HATCHERY_EGG_DATA: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public string Company
        {
            get { return _company; }
            set
            {
                if (_company != value)
                {
                    _company = value;
                    OnPropertyChanged("Company");
                }
            }
        }
        private string _company;
    
        [DataMember]
        public string Region
        {
            get { return _region; }
            set
            {
                if (_region != value)
                {
                    _region = value;
                    OnPropertyChanged("Region");
                }
            }
        }
        private string _region;
    
        [DataMember]
        public string Location
        {
            get { return _location; }
            set
            {
                if (_location != value)
                {
                    _location = value;
                    OnPropertyChanged("Location");
                }
            }
        }
        private string _location;
    
        [DataMember]
        public System.DateTime Set_date
        {
            get { return _set_date; }
            set
            {
                if (_set_date != value)
                {
                    _set_date = value;
                    OnPropertyChanged("Set_date");
                }
            }
        }
        private System.DateTime _set_date;
    
        [DataMember]
        public string Hatch_loc
        {
            get { return _hatch_loc; }
            set
            {
                if (_hatch_loc != value)
                {
                    _hatch_loc = value;
                    OnPropertyChanged("Hatch_loc");
                }
            }
        }
        private string _hatch_loc;
    
        [DataMember]
        public string Flock_id
        {
            get { return _flock_id; }
            set
            {
                if (_flock_id != value)
                {
                    _flock_id = value;
                    OnPropertyChanged("Flock_id");
                }
            }
        }
        private string _flock_id;
    
        [DataMember]
        public System.DateTime Lay_date
        {
            get { return _lay_date; }
            set
            {
                if (_lay_date != value)
                {
                    _lay_date = value;
                    OnPropertyChanged("Lay_date");
                }
            }
        }
        private System.DateTime _lay_date;
    
        [DataMember]
        public Nullable<int> Eggs_rcvd
        {
            get { return _eggs_rcvd; }
            set
            {
                if (_eggs_rcvd != value)
                {
                    _eggs_rcvd = value;
                    OnPropertyChanged("Eggs_rcvd");
                }
            }
        }
        private Nullable<int> _eggs_rcvd;
    
        [DataMember]
        public string Egg_key
        {
            get { return _egg_key; }
            set
            {
                if (_egg_key != value)
                {
                    _egg_key = value;
                    OnPropertyChanged("Egg_key");
                }
            }
        }
        private string _egg_key;
    
        [DataMember]
        public string Machine
        {
            get { return _machine; }
            set
            {
                if (_machine != value)
                {
                    _machine = value;
                    OnPropertyChanged("Machine");
                }
            }
        }
        private string _machine;
    
        [DataMember]
        public string Track_no
        {
            get { return _track_no; }
            set
            {
                if (_track_no != value)
                {
                    _track_no = value;
                    OnPropertyChanged("Track_no");
                }
            }
        }
        private string _track_no;
    
        [DataMember]
        public Nullable<decimal> Estimate
        {
            get { return _estimate; }
            set
            {
                if (_estimate != value)
                {
                    _estimate = value;
                    OnPropertyChanged("Estimate");
                }
            }
        }
        private Nullable<decimal> _estimate;
    
        [DataMember]
        public string Variety
        {
            get { return _variety; }
            set
            {
                if (_variety != value)
                {
                    _variety = value;
                    OnPropertyChanged("Variety");
                }
            }
        }
        private string _variety;
    
        [DataMember]
        public int Posicao
        {
            get { return _posicao; }
            set
            {
                if (_posicao != value)
                {
                    _posicao = value;
                    OnPropertyChanged("Posicao");
                }
            }
        }
        private int _posicao;
    
        [DataMember]
        public Nullable<int> Bandejas
        {
            get { return _bandejas; }
            set
            {
                if (_bandejas != value)
                {
                    _bandejas = value;
                    OnPropertyChanged("Bandejas");
                }
            }
        }
        private Nullable<int> _bandejas;
    
        [DataMember]
        public string Horario
        {
            get { return _horario; }
            set
            {
                if (_horario != value)
                {
                    _horario = value;
                    OnPropertyChanged("Horario");
                }
            }
        }
        private string _horario;
    
        [DataMember]
        public Nullable<decimal> Peso_Ovo
        {
            get { return _peso_Ovo; }
            set
            {
                if (_peso_Ovo != value)
                {
                    _peso_Ovo = value;
                    OnPropertyChanged("Peso_Ovo");
                }
            }
        }
        private Nullable<decimal> _peso_Ovo;
    
        [DataMember]
        public Nullable<decimal> Peso_Ent_Inv
        {
            get { return _peso_Ent_Inv; }
            set
            {
                if (_peso_Ent_Inv != value)
                {
                    _peso_Ent_Inv = value;
                    OnPropertyChanged("Peso_Ent_Inv");
                }
            }
        }
        private Nullable<decimal> _peso_Ent_Inv;
    
        [DataMember]
        public Nullable<decimal> Peso_Transf
        {
            get { return _peso_Transf; }
            set
            {
                if (_peso_Transf != value)
                {
                    _peso_Transf = value;
                    OnPropertyChanged("Peso_Transf");
                }
            }
        }
        private Nullable<decimal> _peso_Transf;
    
        [DataMember]
        public Nullable<decimal> Peso_Rentab
        {
            get { return _peso_Rentab; }
            set
            {
                if (_peso_Rentab != value)
                {
                    _peso_Rentab = value;
                    OnPropertyChanged("Peso_Rentab");
                }
            }
        }
        private Nullable<decimal> _peso_Rentab;
    
        [DataMember]
        public Nullable<int> Age
        {
            get { return _age; }
            set
            {
                if (_age != value)
                {
                    _age = value;
                    OnPropertyChanged("Age");
                }
            }
        }
        private Nullable<int> _age;
    
        [DataMember]
        public int ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _iD = value;
                    OnPropertyChanged("ID");
                }
            }
        }
        private int _iD;
    
        [DataMember]
        public string Observacao
        {
            get { return _observacao; }
            set
            {
                if (_observacao != value)
                {
                    _observacao = value;
                    OnPropertyChanged("Observacao");
                }
            }
        }
        private string _observacao;
    
        [DataMember]
        public string Status
        {
            get { return _status; }
            set
            {
                if (_status != value)
                {
                    _status = value;
                    OnPropertyChanged("Status");
                }
            }
        }
        private string _status;
    
        [DataMember]
        public string Usuario
        {
            get { return _usuario; }
            set
            {
                if (_usuario != value)
                {
                    _usuario = value;
                    OnPropertyChanged("Usuario");
                }
            }
        }
        private string _usuario;
    
        [DataMember]
        public string ImportadoApolo
        {
            get { return _importadoApolo; }
            set
            {
                if (_importadoApolo != value)
                {
                    _importadoApolo = value;
                    OnPropertyChanged("ImportadoApolo");
                }
            }
        }
        private string _importadoApolo;
    
        [DataMember]
        public string ImportadoFLIP
        {
            get { return _importadoFLIP; }
            set
            {
                if (_importadoFLIP != value)
                {
                    _importadoFLIP = value;
                    OnPropertyChanged("ImportadoFLIP");
                }
            }
        }
        private string _importadoFLIP;
    
        [DataMember]
        public string ClassOvo
        {
            get { return _classOvo; }
            set
            {
                if (_classOvo != value)
                {
                    _classOvo = value;
                    OnPropertyChanged("ClassOvo");
                }
            }
        }
        private string _classOvo;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion

    }
}

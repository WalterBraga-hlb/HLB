//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHyLinedoBrasil.Models
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(COND_PAG))]
    [KnownType(typeof(ENTIDADE1))]
    [KnownType(typeof(MOTIVO_OCOR))]
    [KnownType(typeof(MOV_ESTQ))]
    [KnownType(typeof(OCORRENCIA))]
    [KnownType(typeof(PED_COMP))]
    [KnownType(typeof(COND_PAG_PED_COMP))]
    [KnownType(typeof(DOC_FIN))]
    [KnownType(typeof(ENTIDADE))]
    public partial class COND_PAG: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public string CondPagCod
        {
            get { return _condPagCod; }
            set
            {
                if (_condPagCod != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'CondPagCod' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _condPagCod = value;
                    OnPropertyChanged("CondPagCod");
                }
            }
        }
        private string _condPagCod;
    
        [DataMember]
        public string CondPagNome
        {
            get { return _condPagNome; }
            set
            {
                if (_condPagNome != value)
                {
                    _condPagNome = value;
                    OnPropertyChanged("CondPagNome");
                }
            }
        }
        private string _condPagNome;
    
        [DataMember]
        public Nullable<short> CondPagQtdParc
        {
            get { return _condPagQtdParc; }
            set
            {
                if (_condPagQtdParc != value)
                {
                    _condPagQtdParc = value;
                    OnPropertyChanged("CondPagQtdParc");
                }
            }
        }
        private Nullable<short> _condPagQtdParc;
    
        [DataMember]
        public string CondPagTipoParc
        {
            get { return _condPagTipoParc; }
            set
            {
                if (_condPagTipoParc != value)
                {
                    _condPagTipoParc = value;
                    OnPropertyChanged("CondPagTipoParc");
                }
            }
        }
        private string _condPagTipoParc;
    
        [DataMember]
        public string CondPagPerVenc
        {
            get { return _condPagPerVenc; }
            set
            {
                if (_condPagPerVenc != value)
                {
                    _condPagPerVenc = value;
                    OnPropertyChanged("CondPagPerVenc");
                }
            }
        }
        private string _condPagPerVenc;
    
        [DataMember]
        public Nullable<short> CondPagQtdPerVenc
        {
            get { return _condPagQtdPerVenc; }
            set
            {
                if (_condPagQtdPerVenc != value)
                {
                    _condPagQtdPerVenc = value;
                    OnPropertyChanged("CondPagQtdPerVenc");
                }
            }
        }
        private Nullable<short> _condPagQtdPerVenc;
    
        [DataMember]
        public string TabFinCod
        {
            get { return _tabFinCod; }
            set
            {
                if (_tabFinCod != value)
                {
                    _tabFinCod = value;
                    OnPropertyChanged("TabFinCod");
                }
            }
        }
        private string _tabFinCod;
    
        [DataMember]
        public string CondPagIntegFin
        {
            get { return _condPagIntegFin; }
            set
            {
                if (_condPagIntegFin != value)
                {
                    _condPagIntegFin = value;
                    OnPropertyChanged("CondPagIntegFin");
                }
            }
        }
        private string _condPagIntegFin;
    
        [DataMember]
        public string CondPagVencFora
        {
            get { return _condPagVencFora; }
            set
            {
                if (_condPagVencFora != value)
                {
                    _condPagVencFora = value;
                    OnPropertyChanged("CondPagVencFora");
                }
            }
        }
        private string _condPagVencFora;
    
        [DataMember]
        public Nullable<decimal> CondPagPercJuros
        {
            get { return _condPagPercJuros; }
            set
            {
                if (_condPagPercJuros != value)
                {
                    _condPagPercJuros = value;
                    OnPropertyChanged("CondPagPercJuros");
                }
            }
        }
        private Nullable<decimal> _condPagPercJuros;
    
        [DataMember]
        public Nullable<short> CondPagJurosApos
        {
            get { return _condPagJurosApos; }
            set
            {
                if (_condPagJurosApos != value)
                {
                    _condPagJurosApos = value;
                    OnPropertyChanged("CondPagJurosApos");
                }
            }
        }
        private Nullable<short> _condPagJurosApos;
    
        [DataMember]
        public Nullable<decimal> CondPagPrazoMed
        {
            get { return _condPagPrazoMed; }
            set
            {
                if (_condPagPrazoMed != value)
                {
                    _condPagPrazoMed = value;
                    OnPropertyChanged("CondPagPrazoMed");
                }
            }
        }
        private Nullable<decimal> _condPagPrazoMed;
    
        [DataMember]
        public Nullable<System.DateTime> CondPagDataInic
        {
            get { return _condPagDataInic; }
            set
            {
                if (_condPagDataInic != value)
                {
                    _condPagDataInic = value;
                    OnPropertyChanged("CondPagDataInic");
                }
            }
        }
        private Nullable<System.DateTime> _condPagDataInic;
    
        [DataMember]
        public Nullable<System.DateTime> CondPagDataFim
        {
            get { return _condPagDataFim; }
            set
            {
                if (_condPagDataFim != value)
                {
                    _condPagDataFim = value;
                    OnPropertyChanged("CondPagDataFim");
                }
            }
        }
        private Nullable<System.DateTime> _condPagDataFim;
    
        [DataMember]
        public string CondPagEntraPesqInternet
        {
            get { return _condPagEntraPesqInternet; }
            set
            {
                if (_condPagEntraPesqInternet != value)
                {
                    _condPagEntraPesqInternet = value;
                    OnPropertyChanged("CondPagEntraPesqInternet");
                }
            }
        }
        private string _condPagEntraPesqInternet;
    
        [DataMember]
        public string CondPagPerVencFixo
        {
            get { return _condPagPerVencFixo; }
            set
            {
                if (_condPagPerVencFixo != value)
                {
                    _condPagPerVencFixo = value;
                    OnPropertyChanged("CondPagPerVencFixo");
                }
            }
        }
        private string _condPagPerVencFixo;
    
        [DataMember]
        public string CondPagDiaVencFixo
        {
            get { return _condPagDiaVencFixo; }
            set
            {
                if (_condPagDiaVencFixo != value)
                {
                    _condPagDiaVencFixo = value;
                    OnPropertyChanged("CondPagDiaVencFixo");
                }
            }
        }
        private string _condPagDiaVencFixo;
    
        [DataMember]
        public string CondPagAntecip
        {
            get { return _condPagAntecip; }
            set
            {
                if (_condPagAntecip != value)
                {
                    _condPagAntecip = value;
                    OnPropertyChanged("CondPagAntecip");
                }
            }
        }
        private string _condPagAntecip;
    
        [DataMember]
        public string CondPagGeraNDebCred
        {
            get { return _condPagGeraNDebCred; }
            set
            {
                if (_condPagGeraNDebCred != value)
                {
                    _condPagGeraNDebCred = value;
                    OnPropertyChanged("CondPagGeraNDebCred");
                }
            }
        }
        private string _condPagGeraNDebCred;
    
        [DataMember]
        public string CondPagGeraFatura
        {
            get { return _condPagGeraFatura; }
            set
            {
                if (_condPagGeraFatura != value)
                {
                    _condPagGeraFatura = value;
                    OnPropertyChanged("CondPagGeraFatura");
                }
            }
        }
        private string _condPagGeraFatura;
    
        [DataMember]
        public string CondPagOper
        {
            get { return _condPagOper; }
            set
            {
                if (_condPagOper != value)
                {
                    _condPagOper = value;
                    OnPropertyChanged("CondPagOper");
                }
            }
        }
        private string _condPagOper;
    
        [DataMember]
        public string CondPagCodEstr
        {
            get { return _condPagCodEstr; }
            set
            {
                if (_condPagCodEstr != value)
                {
                    _condPagCodEstr = value;
                    OnPropertyChanged("CondPagCodEstr");
                }
            }
        }
        private string _condPagCodEstr;
    
        [DataMember]
        public string CondPagCodEstrNiv
        {
            get { return _condPagCodEstrNiv; }
            set
            {
                if (_condPagCodEstrNiv != value)
                {
                    _condPagCodEstrNiv = value;
                    OnPropertyChanged("CondPagCodEstrNiv");
                }
            }
        }
        private string _condPagCodEstrNiv;
    
        [DataMember]
        public string CondPagGrupo
        {
            get { return _condPagGrupo; }
            set
            {
                if (_condPagGrupo != value)
                {
                    _condPagGrupo = value;
                    OnPropertyChanged("CondPagGrupo");
                }
            }
        }
        private string _condPagGrupo;
    
        [DataMember]
        public string CondPagAntecipSemJuros
        {
            get { return _condPagAntecipSemJuros; }
            set
            {
                if (_condPagAntecipSemJuros != value)
                {
                    _condPagAntecipSemJuros = value;
                    OnPropertyChanged("CondPagAntecipSemJuros");
                }
            }
        }
        private string _condPagAntecipSemJuros;
    
        [DataMember]
        public string CondPagIntegTEF
        {
            get { return _condPagIntegTEF; }
            set
            {
                if (_condPagIntegTEF != value)
                {
                    _condPagIntegTEF = value;
                    OnPropertyChanged("CondPagIntegTEF");
                }
            }
        }
        private string _condPagIntegTEF;
    
        [DataMember]
        public string CondPagEmisFatPost
        {
            get { return _condPagEmisFatPost; }
            set
            {
                if (_condPagEmisFatPost != value)
                {
                    _condPagEmisFatPost = value;
                    OnPropertyChanged("CondPagEmisFatPost");
                }
            }
        }
        private string _condPagEmisFatPost;
    
        [DataMember]
        public string CondPagGeraComis
        {
            get { return _condPagGeraComis; }
            set
            {
                if (_condPagGeraComis != value)
                {
                    _condPagGeraComis = value;
                    OnPropertyChanged("CondPagGeraComis");
                }
            }
        }
        private string _condPagGeraComis;
    
        [DataMember]
        public string CondPagNaoRecalcDataVenc
        {
            get { return _condPagNaoRecalcDataVenc; }
            set
            {
                if (_condPagNaoRecalcDataVenc != value)
                {
                    _condPagNaoRecalcDataVenc = value;
                    OnPropertyChanged("CondPagNaoRecalcDataVenc");
                }
            }
        }
        private string _condPagNaoRecalcDataVenc;
    
        [DataMember]
        public string CondPagGeraReemb
        {
            get { return _condPagGeraReemb; }
            set
            {
                if (_condPagGeraReemb != value)
                {
                    _condPagGeraReemb = value;
                    OnPropertyChanged("CondPagGeraReemb");
                }
            }
        }
        private string _condPagGeraReemb;
    
        [DataMember]
        public string TipoCobCod
        {
            get { return _tipoCobCod; }
            set
            {
                if (_tipoCobCod != value)
                {
                    _tipoCobCod = value;
                    OnPropertyChanged("TipoCobCod");
                }
            }
        }
        private string _tipoCobCod;
    
        [DataMember]
        public string TipoRecCxaLojaCod
        {
            get { return _tipoRecCxaLojaCod; }
            set
            {
                if (_tipoRecCxaLojaCod != value)
                {
                    _tipoRecCxaLojaCod = value;
                    OnPropertyChanged("TipoRecCxaLojaCod");
                }
            }
        }
        private string _tipoRecCxaLojaCod;
    
        [DataMember]
        public Nullable<short> CondPagDiasEntreParc
        {
            get { return _condPagDiasEntreParc; }
            set
            {
                if (_condPagDiasEntreParc != value)
                {
                    _condPagDiasEntreParc = value;
                    OnPropertyChanged("CondPagDiasEntreParc");
                }
            }
        }
        private Nullable<short> _condPagDiasEntreParc;
    
        [DataMember]
        public string CondPagBloqVendaCliSemCred
        {
            get { return _condPagBloqVendaCliSemCred; }
            set
            {
                if (_condPagBloqVendaCliSemCred != value)
                {
                    _condPagBloqVendaCliSemCred = value;
                    OnPropertyChanged("CondPagBloqVendaCliSemCred");
                }
            }
        }
        private string _condPagBloqVendaCliSemCred;
    
        [DataMember]
        public string CondPagBloqVendaCliEmAtraso
        {
            get { return _condPagBloqVendaCliEmAtraso; }
            set
            {
                if (_condPagBloqVendaCliEmAtraso != value)
                {
                    _condPagBloqVendaCliEmAtraso = value;
                    OnPropertyChanged("CondPagBloqVendaCliEmAtraso");
                }
            }
        }
        private string _condPagBloqVendaCliEmAtraso;
    
        [DataMember]
        public string CondPagGeraDup
        {
            get { return _condPagGeraDup; }
            set
            {
                if (_condPagGeraDup != value)
                {
                    _condPagGeraDup = value;
                    OnPropertyChanged("CondPagGeraDup");
                }
            }
        }
        private string _condPagGeraDup;
    
        [DataMember]
        public string CondPagMovPedTurEncerGeraBco
        {
            get { return _condPagMovPedTurEncerGeraBco; }
            set
            {
                if (_condPagMovPedTurEncerGeraBco != value)
                {
                    _condPagMovPedTurEncerGeraBco = value;
                    OnPropertyChanged("CondPagMovPedTurEncerGeraBco");
                }
            }
        }
        private string _condPagMovPedTurEncerGeraBco;
    
        [DataMember]
        public string CondPagGeraMovPedTur
        {
            get { return _condPagGeraMovPedTur; }
            set
            {
                if (_condPagGeraMovPedTur != value)
                {
                    _condPagGeraMovPedTur = value;
                    OnPropertyChanged("CondPagGeraMovPedTur");
                }
            }
        }
        private string _condPagGeraMovPedTur;
    
        [DataMember]
        public string CondPagVencForaAntesDepois
        {
            get { return _condPagVencForaAntesDepois; }
            set
            {
                if (_condPagVencForaAntesDepois != value)
                {
                    _condPagVencForaAntesDepois = value;
                    OnPropertyChanged("CondPagVencForaAntesDepois");
                }
            }
        }
        private string _condPagVencForaAntesDepois;
    
        [DataMember]
        public string CondPagVencSegunda
        {
            get { return _condPagVencSegunda; }
            set
            {
                if (_condPagVencSegunda != value)
                {
                    _condPagVencSegunda = value;
                    OnPropertyChanged("CondPagVencSegunda");
                }
            }
        }
        private string _condPagVencSegunda;
    
        [DataMember]
        public string CondPagVencTerca
        {
            get { return _condPagVencTerca; }
            set
            {
                if (_condPagVencTerca != value)
                {
                    _condPagVencTerca = value;
                    OnPropertyChanged("CondPagVencTerca");
                }
            }
        }
        private string _condPagVencTerca;
    
        [DataMember]
        public string CondPagVencQuarta
        {
            get { return _condPagVencQuarta; }
            set
            {
                if (_condPagVencQuarta != value)
                {
                    _condPagVencQuarta = value;
                    OnPropertyChanged("CondPagVencQuarta");
                }
            }
        }
        private string _condPagVencQuarta;
    
        [DataMember]
        public string CondPagVencQuinta
        {
            get { return _condPagVencQuinta; }
            set
            {
                if (_condPagVencQuinta != value)
                {
                    _condPagVencQuinta = value;
                    OnPropertyChanged("CondPagVencQuinta");
                }
            }
        }
        private string _condPagVencQuinta;
    
        [DataMember]
        public string CondPagVencSexta
        {
            get { return _condPagVencSexta; }
            set
            {
                if (_condPagVencSexta != value)
                {
                    _condPagVencSexta = value;
                    OnPropertyChanged("CondPagVencSexta");
                }
            }
        }
        private string _condPagVencSexta;
    
        [DataMember]
        public string CondPagVencDia1
        {
            get { return _condPagVencDia1; }
            set
            {
                if (_condPagVencDia1 != value)
                {
                    _condPagVencDia1 = value;
                    OnPropertyChanged("CondPagVencDia1");
                }
            }
        }
        private string _condPagVencDia1;
    
        [DataMember]
        public string CondPagVencDia2
        {
            get { return _condPagVencDia2; }
            set
            {
                if (_condPagVencDia2 != value)
                {
                    _condPagVencDia2 = value;
                    OnPropertyChanged("CondPagVencDia2");
                }
            }
        }
        private string _condPagVencDia2;
    
        [DataMember]
        public string CondPagVencDia3
        {
            get { return _condPagVencDia3; }
            set
            {
                if (_condPagVencDia3 != value)
                {
                    _condPagVencDia3 = value;
                    OnPropertyChanged("CondPagVencDia3");
                }
            }
        }
        private string _condPagVencDia3;
    
        [DataMember]
        public string CondPagVencDia4
        {
            get { return _condPagVencDia4; }
            set
            {
                if (_condPagVencDia4 != value)
                {
                    _condPagVencDia4 = value;
                    OnPropertyChanged("CondPagVencDia4");
                }
            }
        }
        private string _condPagVencDia4;
    
        [DataMember]
        public string CondPagVencDia5
        {
            get { return _condPagVencDia5; }
            set
            {
                if (_condPagVencDia5 != value)
                {
                    _condPagVencDia5 = value;
                    OnPropertyChanged("CondPagVencDia5");
                }
            }
        }
        private string _condPagVencDia5;
    
        [DataMember]
        public string CondPagVencAjuste
        {
            get { return _condPagVencAjuste; }
            set
            {
                if (_condPagVencAjuste != value)
                {
                    _condPagVencAjuste = value;
                    OnPropertyChanged("CondPagVencAjuste");
                }
            }
        }
        private string _condPagVencAjuste;
    
        [DataMember]
        public string CondPagForcVencPor
        {
            get { return _condPagForcVencPor; }
            set
            {
                if (_condPagForcVencPor != value)
                {
                    _condPagForcVencPor = value;
                    OnPropertyChanged("CondPagForcVencPor");
                }
            }
        }
        private string _condPagForcVencPor;
    
        [DataMember]
        public Nullable<short> CondPagVencQtdDiaApos
        {
            get { return _condPagVencQtdDiaApos; }
            set
            {
                if (_condPagVencQtdDiaApos != value)
                {
                    _condPagVencQtdDiaApos = value;
                    OnPropertyChanged("CondPagVencQtdDiaApos");
                }
            }
        }
        private Nullable<short> _condPagVencQtdDiaApos;
    
        [DataMember]
        public string BcoNum
        {
            get { return _bcoNum; }
            set
            {
                if (_bcoNum != value)
                {
                    _bcoNum = value;
                    OnPropertyChanged("BcoNum");
                }
            }
        }
        private string _bcoNum;
    
        [DataMember]
        public string AgNum
        {
            get { return _agNum; }
            set
            {
                if (_agNum != value)
                {
                    _agNum = value;
                    OnPropertyChanged("AgNum");
                }
            }
        }
        private string _agNum;
    
        [DataMember]
        public string CondPagMovPedTurEncerNecComp
        {
            get { return _condPagMovPedTurEncerNecComp; }
            set
            {
                if (_condPagMovPedTurEncerNecComp != value)
                {
                    _condPagMovPedTurEncerNecComp = value;
                    OnPropertyChanged("CondPagMovPedTurEncerNecComp");
                }
            }
        }
        private string _condPagMovPedTurEncerNecComp;
    
        [DataMember]
        public Nullable<decimal> CondPagJurBancPerc
        {
            get { return _condPagJurBancPerc; }
            set
            {
                if (_condPagJurBancPerc != value)
                {
                    _condPagJurBancPerc = value;
                    OnPropertyChanged("CondPagJurBancPerc");
                }
            }
        }
        private Nullable<decimal> _condPagJurBancPerc;
    
        [DataMember]
        public string CondPagJurBancAntecipado
        {
            get { return _condPagJurBancAntecipado; }
            set
            {
                if (_condPagJurBancAntecipado != value)
                {
                    _condPagJurBancAntecipado = value;
                    OnPropertyChanged("CondPagJurBancAntecipado");
                }
            }
        }
        private string _condPagJurBancAntecipado;
    
        [DataMember]
        public string CondPagJurBancDeb
        {
            get { return _condPagJurBancDeb; }
            set
            {
                if (_condPagJurBancDeb != value)
                {
                    _condPagJurBancDeb = value;
                    OnPropertyChanged("CondPagJurBancDeb");
                }
            }
        }
        private string _condPagJurBancDeb;
    
        [DataMember]
        public string CondPagJurBancTot
        {
            get { return _condPagJurBancTot; }
            set
            {
                if (_condPagJurBancTot != value)
                {
                    _condPagJurBancTot = value;
                    OnPropertyChanged("CondPagJurBancTot");
                }
            }
        }
        private string _condPagJurBancTot;
    
        [DataMember]
        public string CondPagJurBancIntFinValLiq
        {
            get { return _condPagJurBancIntFinValLiq; }
            set
            {
                if (_condPagJurBancIntFinValLiq != value)
                {
                    _condPagJurBancIntFinValLiq = value;
                    OnPropertyChanged("CondPagJurBancIntFinValLiq");
                }
            }
        }
        private string _condPagJurBancIntFinValLiq;
    
        [DataMember]
        public string CONDPAGDATAFATAUTOMCOPET
        {
            get { return _cONDPAGDATAFATAUTOMCOPET; }
            set
            {
                if (_cONDPAGDATAFATAUTOMCOPET != value)
                {
                    _cONDPAGDATAFATAUTOMCOPET = value;
                    OnPropertyChanged("CONDPAGDATAFATAUTOMCOPET");
                }
            }
        }
        private string _cONDPAGDATAFATAUTOMCOPET;
    
        [DataMember]
        public string CONDPAGFATAUTOMCOPET
        {
            get { return _cONDPAGFATAUTOMCOPET; }
            set
            {
                if (_cONDPAGFATAUTOMCOPET != value)
                {
                    _cONDPAGFATAUTOMCOPET = value;
                    OnPropertyChanged("CONDPAGFATAUTOMCOPET");
                }
            }
        }
        private string _cONDPAGFATAUTOMCOPET;
    
        [DataMember]
        public string PlanoCtaEmpCod
        {
            get { return _planoCtaEmpCod; }
            set
            {
                if (_planoCtaEmpCod != value)
                {
                    _planoCtaEmpCod = value;
                    OnPropertyChanged("PlanoCtaEmpCod");
                }
            }
        }
        private string _planoCtaEmpCod;
    
        [DataMember]
        public string PlanoCtaCodRed
        {
            get { return _planoCtaCodRed; }
            set
            {
                if (_planoCtaCodRed != value)
                {
                    _planoCtaCodRed = value;
                    OnPropertyChanged("PlanoCtaCodRed");
                }
            }
        }
        private string _planoCtaCodRed;
    
        [DataMember]
        public string CondPagCodAlt
        {
            get { return _condPagCodAlt; }
            set
            {
                if (_condPagCodAlt != value)
                {
                    _condPagCodAlt = value;
                    OnPropertyChanged("CondPagCodAlt");
                }
            }
        }
        private string _condPagCodAlt;
    
        [DataMember]
        public string CondPagRegExportado
        {
            get { return _condPagRegExportado; }
            set
            {
                if (_condPagRegExportado != value)
                {
                    _condPagRegExportado = value;
                    OnPropertyChanged("CondPagRegExportado");
                }
            }
        }
        private string _condPagRegExportado;
    
        [DataMember]
        public string CondPagUsuCod
        {
            get { return _condPagUsuCod; }
            set
            {
                if (_condPagUsuCod != value)
                {
                    _condPagUsuCod = value;
                    OnPropertyChanged("CondPagUsuCod");
                }
            }
        }
        private string _condPagUsuCod;
    
        [DataMember]
        public string CondPagGeraOcor
        {
            get { return _condPagGeraOcor; }
            set
            {
                if (_condPagGeraOcor != value)
                {
                    _condPagGeraOcor = value;
                    OnPropertyChanged("CondPagGeraOcor");
                }
            }
        }
        private string _condPagGeraOcor;
    
        [DataMember]
        public string MotOcorCodEstr
        {
            get { return _motOcorCodEstr; }
            set
            {
                if (_motOcorCodEstr != value)
                {
                    ChangeTracker.RecordOriginalValue("MotOcorCodEstr", _motOcorCodEstr);
                    if (!IsDeserializing)
                    {
                        if (MOTIVO_OCOR != null && MOTIVO_OCOR.MotOcorCodEstr != value)
                        {
                            MOTIVO_OCOR = null;
                        }
                    }
                    _motOcorCodEstr = value;
                    OnPropertyChanged("MotOcorCodEstr");
                }
            }
        }
        private string _motOcorCodEstr;
    
        [DataMember]
        public string CondPagAdiantamento
        {
            get { return _condPagAdiantamento; }
            set
            {
                if (_condPagAdiantamento != value)
                {
                    _condPagAdiantamento = value;
                    OnPropertyChanged("CondPagAdiantamento");
                }
            }
        }
        private string _condPagAdiantamento;
    
        [DataMember]
        public Nullable<short> CondPagDiasTolerancia
        {
            get { return _condPagDiasTolerancia; }
            set
            {
                if (_condPagDiasTolerancia != value)
                {
                    _condPagDiasTolerancia = value;
                    OnPropertyChanged("CondPagDiasTolerancia");
                }
            }
        }
        private Nullable<short> _condPagDiasTolerancia;
    
        [DataMember]
        public string CondPagTipoPagRec
        {
            get { return _condPagTipoPagRec; }
            set
            {
                if (_condPagTipoPagRec != value)
                {
                    _condPagTipoPagRec = value;
                    OnPropertyChanged("CondPagTipoPagRec");
                }
            }
        }
        private string _condPagTipoPagRec;
    
        [DataMember]
        public string CONDPAGNECLIBFAT
        {
            get { return _cONDPAGNECLIBFAT; }
            set
            {
                if (_cONDPAGNECLIBFAT != value)
                {
                    _cONDPAGNECLIBFAT = value;
                    OnPropertyChanged("CONDPAGNECLIBFAT");
                }
            }
        }
        private string _cONDPAGNECLIBFAT;
    
        [DataMember]
        public Nullable<decimal> CondPagValLimiteCond
        {
            get { return _condPagValLimiteCond; }
            set
            {
                if (_condPagValLimiteCond != value)
                {
                    _condPagValLimiteCond = value;
                    OnPropertyChanged("CondPagValLimiteCond");
                }
            }
        }
        private Nullable<decimal> _condPagValLimiteCond;
    
        [DataMember]
        public string CondPagCodDest
        {
            get { return _condPagCodDest; }
            set
            {
                if (_condPagCodDest != value)
                {
                    ChangeTracker.RecordOriginalValue("CondPagCodDest", _condPagCodDest);
                    if (!IsDeserializing)
                    {
                        if (COND_PAG2 != null && COND_PAG2.CondPagCod != value)
                        {
                            COND_PAG2 = null;
                        }
                    }
                    _condPagCodDest = value;
                    OnPropertyChanged("CondPagCodDest");
                }
            }
        }
        private string _condPagCodDest;
    
        [DataMember]
        public Nullable<short> CONDPAGDTPRIMVENCFINQTDDIAS
        {
            get { return _cONDPAGDTPRIMVENCFINQTDDIAS; }
            set
            {
                if (_cONDPAGDTPRIMVENCFINQTDDIAS != value)
                {
                    _cONDPAGDTPRIMVENCFINQTDDIAS = value;
                    OnPropertyChanged("CONDPAGDTPRIMVENCFINQTDDIAS");
                }
            }
        }
        private Nullable<short> _cONDPAGDTPRIMVENCFINQTDDIAS;
    
        [DataMember]
        public string CONDPAGDTPRIMVENCFINANTDEP
        {
            get { return _cONDPAGDTPRIMVENCFINANTDEP; }
            set
            {
                if (_cONDPAGDTPRIMVENCFINANTDEP != value)
                {
                    _cONDPAGDTPRIMVENCFINANTDEP = value;
                    OnPropertyChanged("CONDPAGDTPRIMVENCFINANTDEP");
                }
            }
        }
        private string _cONDPAGDTPRIMVENCFINANTDEP;
    
        [DataMember]
        public string CondPagVencPartirData
        {
            get { return _condPagVencPartirData; }
            set
            {
                if (_condPagVencPartirData != value)
                {
                    _condPagVencPartirData = value;
                    OnPropertyChanged("CondPagVencPartirData");
                }
            }
        }
        private string _condPagVencPartirData;
    
        [DataMember]
        public Nullable<decimal> condpagpercentradarestur
        {
            get { return _condpagpercentradarestur; }
            set
            {
                if (_condpagpercentradarestur != value)
                {
                    _condpagpercentradarestur = value;
                    OnPropertyChanged("condpagpercentradarestur");
                }
            }
        }
        private Nullable<decimal> _condpagpercentradarestur;
    
        [DataMember]
        public string fxacod
        {
            get { return _fxacod; }
            set
            {
                if (_fxacod != value)
                {
                    _fxacod = value;
                    OnPropertyChanged("fxacod");
                }
            }
        }
        private string _fxacod;
    
        [DataMember]
        public Nullable<decimal> CONDPAGCOEFCOMIS
        {
            get { return _cONDPAGCOEFCOMIS; }
            set
            {
                if (_cONDPAGCOEFCOMIS != value)
                {
                    _cONDPAGCOEFCOMIS = value;
                    OnPropertyChanged("CONDPAGCOEFCOMIS");
                }
            }
        }
        private Nullable<decimal> _cONDPAGCOEFCOMIS;
    
        [DataMember]
        public string CONDPAGCODTAXADU
        {
            get { return _cONDPAGCODTAXADU; }
            set
            {
                if (_cONDPAGCODTAXADU != value)
                {
                    ChangeTracker.RecordOriginalValue("CONDPAGCODTAXADU", _cONDPAGCODTAXADU);
                    if (!IsDeserializing)
                    {
                        if (COND_PAG3 != null && COND_PAG3.CondPagCod != value)
                        {
                            COND_PAG3 = null;
                        }
                    }
                    _cONDPAGCODTAXADU = value;
                    OnPropertyChanged("CONDPAGCODTAXADU");
                }
            }
        }
        private string _cONDPAGCODTAXADU;
    
        [DataMember]
        public string CondPagEntCodRelac
        {
            get { return _condPagEntCodRelac; }
            set
            {
                if (_condPagEntCodRelac != value)
                {
                    ChangeTracker.RecordOriginalValue("CondPagEntCodRelac", _condPagEntCodRelac);
                    if (!IsDeserializing)
                    {
                        if (ENTIDADE1 != null && ENTIDADE1.EntCod != value)
                        {
                            ENTIDADE1 = null;
                        }
                    }
                    _condPagEntCodRelac = value;
                    OnPropertyChanged("CondPagEntCodRelac");
                }
            }
        }
        private string _condPagEntCodRelac;
    
        [DataMember]
        public string CondPagEntTipoFJ
        {
            get { return _condPagEntTipoFJ; }
            set
            {
                if (_condPagEntTipoFJ != value)
                {
                    _condPagEntTipoFJ = value;
                    OnPropertyChanged("CondPagEntTipoFJ");
                }
            }
        }
        private string _condPagEntTipoFJ;
    
        [DataMember]
        public string USERNomeIngles
        {
            get { return _uSERNomeIngles; }
            set
            {
                if (_uSERNomeIngles != value)
                {
                    _uSERNomeIngles = value;
                    OnPropertyChanged("USERNomeIngles");
                }
            }
        }
        private string _uSERNomeIngles;
    
        [DataMember]
        public string USERNomeEspanhol
        {
            get { return _uSERNomeEspanhol; }
            set
            {
                if (_uSERNomeEspanhol != value)
                {
                    _uSERNomeEspanhol = value;
                    OnPropertyChanged("USERNomeEspanhol");
                }
            }
        }
        private string _uSERNomeEspanhol;
    
        [DataMember]
        public string CondPagGerAmortVal
        {
            get { return _condPagGerAmortVal; }
            set
            {
                if (_condPagGerAmortVal != value)
                {
                    _condPagGerAmortVal = value;
                    OnPropertyChanged("CondPagGerAmortVal");
                }
            }
        }
        private string _condPagGerAmortVal;
    
        [DataMember]
        public string CONDPAGENTCODRELACDEST
        {
            get { return _cONDPAGENTCODRELACDEST; }
            set
            {
                if (_cONDPAGENTCODRELACDEST != value)
                {
                    _cONDPAGENTCODRELACDEST = value;
                    OnPropertyChanged("CONDPAGENTCODRELACDEST");
                }
            }
        }
        private string _cONDPAGENTCODRELACDEST;
    
        [DataMember]
        public Nullable<System.DateTime> CondPagDtUltAtualiz
        {
            get { return _condPagDtUltAtualiz; }
            set
            {
                if (_condPagDtUltAtualiz != value)
                {
                    _condPagDtUltAtualiz = value;
                    OnPropertyChanged("CondPagDtUltAtualiz");
                }
            }
        }
        private Nullable<System.DateTime> _condPagDtUltAtualiz;
    
        [DataMember]
        public string CondPagFreteAdicSegParc
        {
            get { return _condPagFreteAdicSegParc; }
            set
            {
                if (_condPagFreteAdicSegParc != value)
                {
                    _condPagFreteAdicSegParc = value;
                    OnPropertyChanged("CondPagFreteAdicSegParc");
                }
            }
        }
        private string _condPagFreteAdicSegParc;
    
        [DataMember]
        public string CondPagHabRatPagReemb
        {
            get { return _condPagHabRatPagReemb; }
            set
            {
                if (_condPagHabRatPagReemb != value)
                {
                    _condPagHabRatPagReemb = value;
                    OnPropertyChanged("CondPagHabRatPagReemb");
                }
            }
        }
        private string _condPagHabRatPagReemb;
    
        [DataMember]
        public string CondPagCompCalcRentRes
        {
            get { return _condPagCompCalcRentRes; }
            set
            {
                if (_condPagCompCalcRentRes != value)
                {
                    _condPagCompCalcRentRes = value;
                    OnPropertyChanged("CondPagCompCalcRentRes");
                }
            }
        }
        private string _condPagCompCalcRentRes;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<COND_PAG> COND_PAG1
        {
            get
            {
                if (_cOND_PAG1 == null)
                {
                    _cOND_PAG1 = new TrackableCollection<COND_PAG>();
                    _cOND_PAG1.CollectionChanged += FixupCOND_PAG1;
                }
                return _cOND_PAG1;
            }
            set
            {
                if (!ReferenceEquals(_cOND_PAG1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cOND_PAG1 != null)
                    {
                        _cOND_PAG1.CollectionChanged -= FixupCOND_PAG1;
                    }
                    _cOND_PAG1 = value;
                    if (_cOND_PAG1 != null)
                    {
                        _cOND_PAG1.CollectionChanged += FixupCOND_PAG1;
                    }
                    OnNavigationPropertyChanged("COND_PAG1");
                }
            }
        }
        private TrackableCollection<COND_PAG> _cOND_PAG1;
    
        [DataMember]
        public COND_PAG COND_PAG2
        {
            get { return _cOND_PAG2; }
            set
            {
                if (!ReferenceEquals(_cOND_PAG2, value))
                {
                    var previousValue = _cOND_PAG2;
                    _cOND_PAG2 = value;
                    FixupCOND_PAG2(previousValue);
                    OnNavigationPropertyChanged("COND_PAG2");
                }
            }
        }
        private COND_PAG _cOND_PAG2;
    
        [DataMember]
        public ENTIDADE1 ENTIDADE1
        {
            get { return _eNTIDADE1; }
            set
            {
                if (!ReferenceEquals(_eNTIDADE1, value))
                {
                    var previousValue = _eNTIDADE1;
                    _eNTIDADE1 = value;
                    FixupENTIDADE1(previousValue);
                    OnNavigationPropertyChanged("ENTIDADE1");
                }
            }
        }
        private ENTIDADE1 _eNTIDADE1;
    
        [DataMember]
        public TrackableCollection<COND_PAG> COND_PAG11
        {
            get
            {
                if (_cOND_PAG11 == null)
                {
                    _cOND_PAG11 = new TrackableCollection<COND_PAG>();
                    _cOND_PAG11.CollectionChanged += FixupCOND_PAG11;
                }
                return _cOND_PAG11;
            }
            set
            {
                if (!ReferenceEquals(_cOND_PAG11, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cOND_PAG11 != null)
                    {
                        _cOND_PAG11.CollectionChanged -= FixupCOND_PAG11;
                    }
                    _cOND_PAG11 = value;
                    if (_cOND_PAG11 != null)
                    {
                        _cOND_PAG11.CollectionChanged += FixupCOND_PAG11;
                    }
                    OnNavigationPropertyChanged("COND_PAG11");
                }
            }
        }
        private TrackableCollection<COND_PAG> _cOND_PAG11;
    
        [DataMember]
        public COND_PAG COND_PAG3
        {
            get { return _cOND_PAG3; }
            set
            {
                if (!ReferenceEquals(_cOND_PAG3, value))
                {
                    var previousValue = _cOND_PAG3;
                    _cOND_PAG3 = value;
                    FixupCOND_PAG3(previousValue);
                    OnNavigationPropertyChanged("COND_PAG3");
                }
            }
        }
        private COND_PAG _cOND_PAG3;
    
        [DataMember]
        public MOTIVO_OCOR MOTIVO_OCOR
        {
            get { return _mOTIVO_OCOR; }
            set
            {
                if (!ReferenceEquals(_mOTIVO_OCOR, value))
                {
                    var previousValue = _mOTIVO_OCOR;
                    _mOTIVO_OCOR = value;
                    FixupMOTIVO_OCOR(previousValue);
                    OnNavigationPropertyChanged("MOTIVO_OCOR");
                }
            }
        }
        private MOTIVO_OCOR _mOTIVO_OCOR;
    
        [DataMember]
        public TrackableCollection<ENTIDADE1> ENTIDADE11
        {
            get
            {
                if (_eNTIDADE11 == null)
                {
                    _eNTIDADE11 = new TrackableCollection<ENTIDADE1>();
                    _eNTIDADE11.CollectionChanged += FixupENTIDADE11;
                }
                return _eNTIDADE11;
            }
            set
            {
                if (!ReferenceEquals(_eNTIDADE11, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_eNTIDADE11 != null)
                    {
                        _eNTIDADE11.CollectionChanged -= FixupENTIDADE11;
                    }
                    _eNTIDADE11 = value;
                    if (_eNTIDADE11 != null)
                    {
                        _eNTIDADE11.CollectionChanged += FixupENTIDADE11;
                    }
                    OnNavigationPropertyChanged("ENTIDADE11");
                }
            }
        }
        private TrackableCollection<ENTIDADE1> _eNTIDADE11;
    
        [DataMember]
        public TrackableCollection<MOV_ESTQ> MOV_ESTQ
        {
            get
            {
                if (_mOV_ESTQ == null)
                {
                    _mOV_ESTQ = new TrackableCollection<MOV_ESTQ>();
                    _mOV_ESTQ.CollectionChanged += FixupMOV_ESTQ;
                }
                return _mOV_ESTQ;
            }
            set
            {
                if (!ReferenceEquals(_mOV_ESTQ, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_mOV_ESTQ != null)
                    {
                        _mOV_ESTQ.CollectionChanged -= FixupMOV_ESTQ;
                    }
                    _mOV_ESTQ = value;
                    if (_mOV_ESTQ != null)
                    {
                        _mOV_ESTQ.CollectionChanged += FixupMOV_ESTQ;
                    }
                    OnNavigationPropertyChanged("MOV_ESTQ");
                }
            }
        }
        private TrackableCollection<MOV_ESTQ> _mOV_ESTQ;
    
        [DataMember]
        public TrackableCollection<MOV_ESTQ> MOV_ESTQ1
        {
            get
            {
                if (_mOV_ESTQ1 == null)
                {
                    _mOV_ESTQ1 = new TrackableCollection<MOV_ESTQ>();
                    _mOV_ESTQ1.CollectionChanged += FixupMOV_ESTQ1;
                }
                return _mOV_ESTQ1;
            }
            set
            {
                if (!ReferenceEquals(_mOV_ESTQ1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_mOV_ESTQ1 != null)
                    {
                        _mOV_ESTQ1.CollectionChanged -= FixupMOV_ESTQ1;
                    }
                    _mOV_ESTQ1 = value;
                    if (_mOV_ESTQ1 != null)
                    {
                        _mOV_ESTQ1.CollectionChanged += FixupMOV_ESTQ1;
                    }
                    OnNavigationPropertyChanged("MOV_ESTQ1");
                }
            }
        }
        private TrackableCollection<MOV_ESTQ> _mOV_ESTQ1;
    
        [DataMember]
        public TrackableCollection<OCORRENCIA> OCORRENCIA
        {
            get
            {
                if (_oCORRENCIA == null)
                {
                    _oCORRENCIA = new TrackableCollection<OCORRENCIA>();
                    _oCORRENCIA.CollectionChanged += FixupOCORRENCIA;
                }
                return _oCORRENCIA;
            }
            set
            {
                if (!ReferenceEquals(_oCORRENCIA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_oCORRENCIA != null)
                    {
                        _oCORRENCIA.CollectionChanged -= FixupOCORRENCIA;
                    }
                    _oCORRENCIA = value;
                    if (_oCORRENCIA != null)
                    {
                        _oCORRENCIA.CollectionChanged += FixupOCORRENCIA;
                    }
                    OnNavigationPropertyChanged("OCORRENCIA");
                }
            }
        }
        private TrackableCollection<OCORRENCIA> _oCORRENCIA;
    
        [DataMember]
        public TrackableCollection<PED_COMP> PED_COMP
        {
            get
            {
                if (_pED_COMP == null)
                {
                    _pED_COMP = new TrackableCollection<PED_COMP>();
                    _pED_COMP.CollectionChanged += FixupPED_COMP;
                }
                return _pED_COMP;
            }
            set
            {
                if (!ReferenceEquals(_pED_COMP, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pED_COMP != null)
                    {
                        _pED_COMP.CollectionChanged -= FixupPED_COMP;
                    }
                    _pED_COMP = value;
                    if (_pED_COMP != null)
                    {
                        _pED_COMP.CollectionChanged += FixupPED_COMP;
                    }
                    OnNavigationPropertyChanged("PED_COMP");
                }
            }
        }
        private TrackableCollection<PED_COMP> _pED_COMP;
    
        [DataMember]
        public TrackableCollection<COND_PAG_PED_COMP> COND_PAG_PED_COMP
        {
            get
            {
                if (_cOND_PAG_PED_COMP == null)
                {
                    _cOND_PAG_PED_COMP = new TrackableCollection<COND_PAG_PED_COMP>();
                    _cOND_PAG_PED_COMP.CollectionChanged += FixupCOND_PAG_PED_COMP;
                }
                return _cOND_PAG_PED_COMP;
            }
            set
            {
                if (!ReferenceEquals(_cOND_PAG_PED_COMP, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cOND_PAG_PED_COMP != null)
                    {
                        _cOND_PAG_PED_COMP.CollectionChanged -= FixupCOND_PAG_PED_COMP;
                    }
                    _cOND_PAG_PED_COMP = value;
                    if (_cOND_PAG_PED_COMP != null)
                    {
                        _cOND_PAG_PED_COMP.CollectionChanged += FixupCOND_PAG_PED_COMP;
                    }
                    OnNavigationPropertyChanged("COND_PAG_PED_COMP");
                }
            }
        }
        private TrackableCollection<COND_PAG_PED_COMP> _cOND_PAG_PED_COMP;
    
        [DataMember]
        public TrackableCollection<DOC_FIN> DOC_FIN
        {
            get
            {
                if (_dOC_FIN == null)
                {
                    _dOC_FIN = new TrackableCollection<DOC_FIN>();
                    _dOC_FIN.CollectionChanged += FixupDOC_FIN;
                }
                return _dOC_FIN;
            }
            set
            {
                if (!ReferenceEquals(_dOC_FIN, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_dOC_FIN != null)
                    {
                        _dOC_FIN.CollectionChanged -= FixupDOC_FIN;
                    }
                    _dOC_FIN = value;
                    if (_dOC_FIN != null)
                    {
                        _dOC_FIN.CollectionChanged += FixupDOC_FIN;
                    }
                    OnNavigationPropertyChanged("DOC_FIN");
                }
            }
        }
        private TrackableCollection<DOC_FIN> _dOC_FIN;
    
        [DataMember]
        public TrackableCollection<ENTIDADE> ENTIDADE
        {
            get
            {
                if (_eNTIDADE == null)
                {
                    _eNTIDADE = new TrackableCollection<ENTIDADE>();
                    _eNTIDADE.CollectionChanged += FixupENTIDADE;
                }
                return _eNTIDADE;
            }
            set
            {
                if (!ReferenceEquals(_eNTIDADE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_eNTIDADE != null)
                    {
                        _eNTIDADE.CollectionChanged -= FixupENTIDADE;
                    }
                    _eNTIDADE = value;
                    if (_eNTIDADE != null)
                    {
                        _eNTIDADE.CollectionChanged += FixupENTIDADE;
                    }
                    OnNavigationPropertyChanged("ENTIDADE");
                }
            }
        }
        private TrackableCollection<ENTIDADE> _eNTIDADE;
    
        [DataMember]
        public TrackableCollection<MOV_ESTQ> MOV_ESTQ2
        {
            get
            {
                if (_mOV_ESTQ2 == null)
                {
                    _mOV_ESTQ2 = new TrackableCollection<MOV_ESTQ>();
                    _mOV_ESTQ2.CollectionChanged += FixupMOV_ESTQ2;
                }
                return _mOV_ESTQ2;
            }
            set
            {
                if (!ReferenceEquals(_mOV_ESTQ2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_mOV_ESTQ2 != null)
                    {
                        _mOV_ESTQ2.CollectionChanged -= FixupMOV_ESTQ2;
                    }
                    _mOV_ESTQ2 = value;
                    if (_mOV_ESTQ2 != null)
                    {
                        _mOV_ESTQ2.CollectionChanged += FixupMOV_ESTQ2;
                    }
                    OnNavigationPropertyChanged("MOV_ESTQ2");
                }
            }
        }
        private TrackableCollection<MOV_ESTQ> _mOV_ESTQ2;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            COND_PAG1.Clear();
            COND_PAG2 = null;
            ENTIDADE1 = null;
            COND_PAG11.Clear();
            COND_PAG3 = null;
            MOTIVO_OCOR = null;
            ENTIDADE11.Clear();
            MOV_ESTQ.Clear();
            MOV_ESTQ1.Clear();
            OCORRENCIA.Clear();
            PED_COMP.Clear();
            COND_PAG_PED_COMP.Clear();
            DOC_FIN.Clear();
            ENTIDADE.Clear();
            MOV_ESTQ2.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupCOND_PAG2(COND_PAG previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.COND_PAG1.Contains(this))
            {
                previousValue.COND_PAG1.Remove(this);
            }
    
            if (COND_PAG2 != null)
            {
                if (!COND_PAG2.COND_PAG1.Contains(this))
                {
                    COND_PAG2.COND_PAG1.Add(this);
                }
    
                CondPagCodDest = COND_PAG2.CondPagCod;
            }
            else if (!skipKeys)
            {
                CondPagCodDest = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("COND_PAG2")
                    && (ChangeTracker.OriginalValues["COND_PAG2"] == COND_PAG2))
                {
                    ChangeTracker.OriginalValues.Remove("COND_PAG2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("COND_PAG2", previousValue);
                }
                if (COND_PAG2 != null && !COND_PAG2.ChangeTracker.ChangeTrackingEnabled)
                {
                    COND_PAG2.StartTracking();
                }
            }
        }
    
        private void FixupENTIDADE1(ENTIDADE1 previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.COND_PAG.Contains(this))
            {
                previousValue.COND_PAG.Remove(this);
            }
    
            if (ENTIDADE1 != null)
            {
                if (!ENTIDADE1.COND_PAG.Contains(this))
                {
                    ENTIDADE1.COND_PAG.Add(this);
                }
    
                CondPagEntCodRelac = ENTIDADE1.EntCod;
            }
            else if (!skipKeys)
            {
                CondPagEntCodRelac = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ENTIDADE1")
                    && (ChangeTracker.OriginalValues["ENTIDADE1"] == ENTIDADE1))
                {
                    ChangeTracker.OriginalValues.Remove("ENTIDADE1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ENTIDADE1", previousValue);
                }
                if (ENTIDADE1 != null && !ENTIDADE1.ChangeTracker.ChangeTrackingEnabled)
                {
                    ENTIDADE1.StartTracking();
                }
            }
        }
    
        private void FixupCOND_PAG3(COND_PAG previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.COND_PAG11.Contains(this))
            {
                previousValue.COND_PAG11.Remove(this);
            }
    
            if (COND_PAG3 != null)
            {
                if (!COND_PAG3.COND_PAG11.Contains(this))
                {
                    COND_PAG3.COND_PAG11.Add(this);
                }
    
                CONDPAGCODTAXADU = COND_PAG3.CondPagCod;
            }
            else if (!skipKeys)
            {
                CONDPAGCODTAXADU = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("COND_PAG3")
                    && (ChangeTracker.OriginalValues["COND_PAG3"] == COND_PAG3))
                {
                    ChangeTracker.OriginalValues.Remove("COND_PAG3");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("COND_PAG3", previousValue);
                }
                if (COND_PAG3 != null && !COND_PAG3.ChangeTracker.ChangeTrackingEnabled)
                {
                    COND_PAG3.StartTracking();
                }
            }
        }
    
        private void FixupMOTIVO_OCOR(MOTIVO_OCOR previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.COND_PAG.Contains(this))
            {
                previousValue.COND_PAG.Remove(this);
            }
    
            if (MOTIVO_OCOR != null)
            {
                if (!MOTIVO_OCOR.COND_PAG.Contains(this))
                {
                    MOTIVO_OCOR.COND_PAG.Add(this);
                }
    
                MotOcorCodEstr = MOTIVO_OCOR.MotOcorCodEstr;
            }
            else if (!skipKeys)
            {
                MotOcorCodEstr = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("MOTIVO_OCOR")
                    && (ChangeTracker.OriginalValues["MOTIVO_OCOR"] == MOTIVO_OCOR))
                {
                    ChangeTracker.OriginalValues.Remove("MOTIVO_OCOR");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("MOTIVO_OCOR", previousValue);
                }
                if (MOTIVO_OCOR != null && !MOTIVO_OCOR.ChangeTracker.ChangeTrackingEnabled)
                {
                    MOTIVO_OCOR.StartTracking();
                }
            }
        }
    
        private void FixupCOND_PAG1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (COND_PAG item in e.NewItems)
                {
                    item.COND_PAG2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("COND_PAG1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (COND_PAG item in e.OldItems)
                {
                    if (ReferenceEquals(item.COND_PAG2, this))
                    {
                        item.COND_PAG2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("COND_PAG1", item);
                    }
                }
            }
        }
    
        private void FixupCOND_PAG11(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (COND_PAG item in e.NewItems)
                {
                    item.COND_PAG3 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("COND_PAG11", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (COND_PAG item in e.OldItems)
                {
                    if (ReferenceEquals(item.COND_PAG3, this))
                    {
                        item.COND_PAG3 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("COND_PAG11", item);
                    }
                }
            }
        }
    
        private void FixupENTIDADE11(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ENTIDADE1 item in e.NewItems)
                {
                    item.COND_PAG1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ENTIDADE11", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ENTIDADE1 item in e.OldItems)
                {
                    if (ReferenceEquals(item.COND_PAG1, this))
                    {
                        item.COND_PAG1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ENTIDADE11", item);
                    }
                }
            }
        }
    
        private void FixupMOV_ESTQ(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (MOV_ESTQ item in e.NewItems)
                {
                    item.COND_PAG = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("MOV_ESTQ", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MOV_ESTQ item in e.OldItems)
                {
                    if (ReferenceEquals(item.COND_PAG, this))
                    {
                        item.COND_PAG = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("MOV_ESTQ", item);
                    }
                }
            }
        }
    
        private void FixupMOV_ESTQ1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (MOV_ESTQ item in e.NewItems)
                {
                    item.COND_PAG1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("MOV_ESTQ1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MOV_ESTQ item in e.OldItems)
                {
                    if (ReferenceEquals(item.COND_PAG1, this))
                    {
                        item.COND_PAG1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("MOV_ESTQ1", item);
                    }
                }
            }
        }
    
        private void FixupOCORRENCIA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (OCORRENCIA item in e.NewItems)
                {
                    item.COND_PAG = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("OCORRENCIA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (OCORRENCIA item in e.OldItems)
                {
                    if (ReferenceEquals(item.COND_PAG, this))
                    {
                        item.COND_PAG = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("OCORRENCIA", item);
                    }
                }
            }
        }
    
        private void FixupPED_COMP(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PED_COMP item in e.NewItems)
                {
                    item.COND_PAG = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PED_COMP", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PED_COMP item in e.OldItems)
                {
                    if (ReferenceEquals(item.COND_PAG, this))
                    {
                        item.COND_PAG = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PED_COMP", item);
                    }
                }
            }
        }
    
        private void FixupCOND_PAG_PED_COMP(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (COND_PAG_PED_COMP item in e.NewItems)
                {
                    item.COND_PAG = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("COND_PAG_PED_COMP", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (COND_PAG_PED_COMP item in e.OldItems)
                {
                    if (ReferenceEquals(item.COND_PAG, this))
                    {
                        item.COND_PAG = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("COND_PAG_PED_COMP", item);
                    }
                }
            }
        }
    
        private void FixupDOC_FIN(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DOC_FIN item in e.NewItems)
                {
                    item.COND_PAG = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DOC_FIN", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DOC_FIN item in e.OldItems)
                {
                    if (ReferenceEquals(item.COND_PAG, this))
                    {
                        item.COND_PAG = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DOC_FIN", item);
                    }
                }
            }
        }
    
        private void FixupENTIDADE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ENTIDADE item in e.NewItems)
                {
                    item.COND_PAG = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ENTIDADE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ENTIDADE item in e.OldItems)
                {
                    if (ReferenceEquals(item.COND_PAG, this))
                    {
                        item.COND_PAG = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ENTIDADE", item);
                    }
                }
            }
        }
    
        private void FixupMOV_ESTQ2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (MOV_ESTQ item in e.NewItems)
                {
                    item.COND_PAG2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("MOV_ESTQ2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MOV_ESTQ item in e.OldItems)
                {
                    if (ReferenceEquals(item.COND_PAG2, this))
                    {
                        item.COND_PAG2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("MOV_ESTQ2", item);
                    }
                }
            }
        }

        #endregion

    }
}

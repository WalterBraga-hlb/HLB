//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHyLinedoBrasil.Models.FormulaPPCP
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(FIC_TEC_PROD))]
    [KnownType(typeof(PRODUTO))]
    [KnownType(typeof(PRODUTO1))]
    [KnownType(typeof(DESCR_TECN_PROD))]
    public partial class PRODUTO1: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public string ProdCodEstr
        {
            get { return _prodCodEstr; }
            set
            {
                if (_prodCodEstr != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ProdCodEstr' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    if (!IsDeserializing)
                    {
                        if (PRODUTO != null && PRODUTO.ProdCodEstr != value)
                        {
                            PRODUTO = null;
                        }
                    }
                    _prodCodEstr = value;
                    OnPropertyChanged("ProdCodEstr");
                }
            }
        }
        private string _prodCodEstr;
    
        [DataMember]
        public string ProdVisPocket
        {
            get { return _prodVisPocket; }
            set
            {
                if (_prodVisPocket != value)
                {
                    _prodVisPocket = value;
                    OnPropertyChanged("ProdVisPocket");
                }
            }
        }
        private string _prodVisPocket;
    
        [DataMember]
        public Nullable<System.DateTime> ProdUltDataMod
        {
            get { return _prodUltDataMod; }
            set
            {
                if (_prodUltDataMod != value)
                {
                    _prodUltDataMod = value;
                    OnPropertyChanged("ProdUltDataMod");
                }
            }
        }
        private Nullable<System.DateTime> _prodUltDataMod;
    
        [DataMember]
        public string ProdServMobilDesmobil
        {
            get { return _prodServMobilDesmobil; }
            set
            {
                if (_prodServMobilDesmobil != value)
                {
                    _prodServMobilDesmobil = value;
                    OnPropertyChanged("ProdServMobilDesmobil");
                }
            }
        }
        private string _prodServMobilDesmobil;
    
        [DataMember]
        public string ProdEntraCalcVerbaProjeto
        {
            get { return _prodEntraCalcVerbaProjeto; }
            set
            {
                if (_prodEntraCalcVerbaProjeto != value)
                {
                    _prodEntraCalcVerbaProjeto = value;
                    OnPropertyChanged("ProdEntraCalcVerbaProjeto");
                }
            }
        }
        private string _prodEntraCalcVerbaProjeto;
    
        [DataMember]
        public string ProdTipoTabPV
        {
            get { return _prodTipoTabPV; }
            set
            {
                if (_prodTipoTabPV != value)
                {
                    _prodTipoTabPV = value;
                    OnPropertyChanged("ProdTipoTabPV");
                }
            }
        }
        private string _prodTipoTabPV;
    
        [DataMember]
        public string ProdCidCodBloq
        {
            get { return _prodCidCodBloq; }
            set
            {
                if (_prodCidCodBloq != value)
                {
                    _prodCidCodBloq = value;
                    OnPropertyChanged("ProdCidCodBloq");
                }
            }
        }
        private string _prodCidCodBloq;
    
        [DataMember]
        public string ProdPrefer
        {
            get { return _prodPrefer; }
            set
            {
                if (_prodPrefer != value)
                {
                    _prodPrefer = value;
                    OnPropertyChanged("ProdPrefer");
                }
            }
        }
        private string _prodPrefer;
    
        [DataMember]
        public string ProdVisualReembOnline
        {
            get { return _prodVisualReembOnline; }
            set
            {
                if (_prodVisualReembOnline != value)
                {
                    _prodVisualReembOnline = value;
                    OnPropertyChanged("ProdVisualReembOnline");
                }
            }
        }
        private string _prodVisualReembOnline;
    
        [DataMember]
        public string ProdRetPermSelManualCarga
        {
            get { return _prodRetPermSelManualCarga; }
            set
            {
                if (_prodRetPermSelManualCarga != value)
                {
                    _prodRetPermSelManualCarga = value;
                    OnPropertyChanged("ProdRetPermSelManualCarga");
                }
            }
        }
        private string _prodRetPermSelManualCarga;
    
        [DataMember]
        public string ProdGeraReqMatTransf
        {
            get { return _prodGeraReqMatTransf; }
            set
            {
                if (_prodGeraReqMatTransf != value)
                {
                    _prodGeraReqMatTransf = value;
                    OnPropertyChanged("ProdGeraReqMatTransf");
                }
            }
        }
        private string _prodGeraReqMatTransf;
    
        [DataMember]
        public string ProdObrigRelacLoteOP
        {
            get { return _prodObrigRelacLoteOP; }
            set
            {
                if (_prodObrigRelacLoteOP != value)
                {
                    _prodObrigRelacLoteOP = value;
                    OnPropertyChanged("ProdObrigRelacLoteOP");
                }
            }
        }
        private string _prodObrigRelacLoteOP;
    
        [DataMember]
        public string ProdModoAtualizacao
        {
            get { return _prodModoAtualizacao; }
            set
            {
                if (_prodModoAtualizacao != value)
                {
                    _prodModoAtualizacao = value;
                    OnPropertyChanged("ProdModoAtualizacao");
                }
            }
        }
        private string _prodModoAtualizacao;
    
        [DataMember]
        public string ProdPossuiTarget
        {
            get { return _prodPossuiTarget; }
            set
            {
                if (_prodPossuiTarget != value)
                {
                    _prodPossuiTarget = value;
                    OnPropertyChanged("ProdPossuiTarget");
                }
            }
        }
        private string _prodPossuiTarget;
    
        [DataMember]
        public string ProdCalcQtdPorParticipItOS
        {
            get { return _prodCalcQtdPorParticipItOS; }
            set
            {
                if (_prodCalcQtdPorParticipItOS != value)
                {
                    _prodCalcQtdPorParticipItOS = value;
                    OnPropertyChanged("ProdCalcQtdPorParticipItOS");
                }
            }
        }
        private string _prodCalcQtdPorParticipItOS;
    
        [DataMember]
        public string ProdCorteDedo
        {
            get { return _prodCorteDedo; }
            set
            {
                if (_prodCorteDedo != value)
                {
                    _prodCorteDedo = value;
                    OnPropertyChanged("ProdCorteDedo");
                }
            }
        }
        private string _prodCorteDedo;
    
        [DataMember]
        public string ProdCodEnquadIPI
        {
            get { return _prodCodEnquadIPI; }
            set
            {
                if (_prodCodEnquadIPI != value)
                {
                    _prodCodEnquadIPI = value;
                    OnPropertyChanged("ProdCodEnquadIPI");
                }
            }
        }
        private string _prodCodEnquadIPI;
    
        [DataMember]
        public string ProdCodSeloControleIPI
        {
            get { return _prodCodSeloControleIPI; }
            set
            {
                if (_prodCodSeloControleIPI != value)
                {
                    _prodCodSeloControleIPI = value;
                    OnPropertyChanged("ProdCodSeloControleIPI");
                }
            }
        }
        private string _prodCodSeloControleIPI;
    
        [DataMember]
        public string ProdEntraRegInventSpedSinteg
        {
            get { return _prodEntraRegInventSpedSinteg; }
            set
            {
                if (_prodEntraRegInventSpedSinteg != value)
                {
                    _prodEntraRegInventSpedSinteg = value;
                    OnPropertyChanged("ProdEntraRegInventSpedSinteg");
                }
            }
        }
        private string _prodEntraRegInventSpedSinteg;
    
        [DataMember]
        public string ProdCodEstrProdPaiProj
        {
            get { return _prodCodEstrProdPaiProj; }
            set
            {
                if (_prodCodEstrProdPaiProj != value)
                {
                    ChangeTracker.RecordOriginalValue("ProdCodEstrProdPaiProj", _prodCodEstrProdPaiProj);
                    if (!IsDeserializing)
                    {
                        if (PRODUTO12 != null && PRODUTO12.ProdCodEstr != value)
                        {
                            PRODUTO12 = null;
                        }
                    }
                    _prodCodEstrProdPaiProj = value;
                    OnPropertyChanged("ProdCodEstrProdPaiProj");
                }
            }
        }
        private string _prodCodEstrProdPaiProj;
    
        [DataMember]
        public string ProdImprimeNumSerNFe
        {
            get { return _prodImprimeNumSerNFe; }
            set
            {
                if (_prodImprimeNumSerNFe != value)
                {
                    _prodImprimeNumSerNFe = value;
                    OnPropertyChanged("ProdImprimeNumSerNFe");
                }
            }
        }
        private string _prodImprimeNumSerNFe;
    
        [DataMember]
        public string ProdTabIncidPisCofinsCod
        {
            get { return _prodTabIncidPisCofinsCod; }
            set
            {
                if (_prodTabIncidPisCofinsCod != value)
                {
                    _prodTabIncidPisCofinsCod = value;
                    OnPropertyChanged("ProdTabIncidPisCofinsCod");
                }
            }
        }
        private string _prodTabIncidPisCofinsCod;
    
        [DataMember]
        public string ProdCodGrupoIncidPisCofins
        {
            get { return _prodCodGrupoIncidPisCofins; }
            set
            {
                if (_prodCodGrupoIncidPisCofins != value)
                {
                    _prodCodGrupoIncidPisCofins = value;
                    OnPropertyChanged("ProdCodGrupoIncidPisCofins");
                }
            }
        }
        private string _prodCodGrupoIncidPisCofins;
    
        [DataMember]
        public string ProdMarcaComerc
        {
            get { return _prodMarcaComerc; }
            set
            {
                if (_prodMarcaComerc != value)
                {
                    _prodMarcaComerc = value;
                    OnPropertyChanged("ProdMarcaComerc");
                }
            }
        }
        private string _prodMarcaComerc;
    
        [DataMember]
        public string ProdTaxaDuBruLiq
        {
            get { return _prodTaxaDuBruLiq; }
            set
            {
                if (_prodTaxaDuBruLiq != value)
                {
                    _prodTaxaDuBruLiq = value;
                    OnPropertyChanged("ProdTaxaDuBruLiq");
                }
            }
        }
        private string _prodTaxaDuBruLiq;
    
        [DataMember]
        public string MarcaProdCodObjVend
        {
            get { return _marcaProdCodObjVend; }
            set
            {
                if (_marcaProdCodObjVend != value)
                {
                    _marcaProdCodObjVend = value;
                    OnPropertyChanged("MarcaProdCodObjVend");
                }
            }
        }
        private string _marcaProdCodObjVend;
    
        [DataMember]
        public string GrpProdCodObjVend
        {
            get { return _grpProdCodObjVend; }
            set
            {
                if (_grpProdCodObjVend != value)
                {
                    _grpProdCodObjVend = value;
                    OnPropertyChanged("GrpProdCodObjVend");
                }
            }
        }
        private string _grpProdCodObjVend;
    
        [DataMember]
        public string ProdCtrlCustoFIFO
        {
            get { return _prodCtrlCustoFIFO; }
            set
            {
                if (_prodCtrlCustoFIFO != value)
                {
                    _prodCtrlCustoFIFO = value;
                    OnPropertyChanged("ProdCtrlCustoFIFO");
                }
            }
        }
        private string _prodCtrlCustoFIFO;
    
        [DataMember]
        public string ProdDeduzICMSSegCusto
        {
            get { return _prodDeduzICMSSegCusto; }
            set
            {
                if (_prodDeduzICMSSegCusto != value)
                {
                    _prodDeduzICMSSegCusto = value;
                    OnPropertyChanged("ProdDeduzICMSSegCusto");
                }
            }
        }
        private string _prodDeduzICMSSegCusto;
    
        [DataMember]
        public string ProdDeduzICMSSTSegCusto
        {
            get { return _prodDeduzICMSSTSegCusto; }
            set
            {
                if (_prodDeduzICMSSTSegCusto != value)
                {
                    _prodDeduzICMSSTSegCusto = value;
                    OnPropertyChanged("ProdDeduzICMSSTSegCusto");
                }
            }
        }
        private string _prodDeduzICMSSTSegCusto;
    
        [DataMember]
        public string ProdDeduzIPISegCusto
        {
            get { return _prodDeduzIPISegCusto; }
            set
            {
                if (_prodDeduzIPISegCusto != value)
                {
                    _prodDeduzIPISegCusto = value;
                    OnPropertyChanged("ProdDeduzIPISegCusto");
                }
            }
        }
        private string _prodDeduzIPISegCusto;
    
        [DataMember]
        public string ProdDeduzPISSegCusto
        {
            get { return _prodDeduzPISSegCusto; }
            set
            {
                if (_prodDeduzPISSegCusto != value)
                {
                    _prodDeduzPISSegCusto = value;
                    OnPropertyChanged("ProdDeduzPISSegCusto");
                }
            }
        }
        private string _prodDeduzPISSegCusto;
    
        [DataMember]
        public string ProdDeduzCOFINSSegCusto
        {
            get { return _prodDeduzCOFINSSegCusto; }
            set
            {
                if (_prodDeduzCOFINSSegCusto != value)
                {
                    _prodDeduzCOFINSSegCusto = value;
                    OnPropertyChanged("ProdDeduzCOFINSSegCusto");
                }
            }
        }
        private string _prodDeduzCOFINSSegCusto;
    
        [DataMember]
        public string ProdCertificado
        {
            get { return _prodCertificado; }
            set
            {
                if (_prodCertificado != value)
                {
                    _prodCertificado = value;
                    OnPropertyChanged("ProdCertificado");
                }
            }
        }
        private string _prodCertificado;
    
        [DataMember]
        public string ProdTurDataBase
        {
            get { return _prodTurDataBase; }
            set
            {
                if (_prodTurDataBase != value)
                {
                    _prodTurDataBase = value;
                    OnPropertyChanged("ProdTurDataBase");
                }
            }
        }
        private string _prodTurDataBase;
    
        [DataMember]
        public string ProdBloqVendConectExterno
        {
            get { return _prodBloqVendConectExterno; }
            set
            {
                if (_prodBloqVendConectExterno != value)
                {
                    _prodBloqVendConectExterno = value;
                    OnPropertyChanged("ProdBloqVendConectExterno");
                }
            }
        }
        private string _prodBloqVendConectExterno;
    
        [DataMember]
        public string ProdCodMS
        {
            get { return _prodCodMS; }
            set
            {
                if (_prodCodMS != value)
                {
                    _prodCodMS = value;
                    OnPropertyChanged("ProdCodMS");
                }
            }
        }
        private string _prodCodMS;
    
        [DataMember]
        public string ProdEntraCalcQtdTotVenda
        {
            get { return _prodEntraCalcQtdTotVenda; }
            set
            {
                if (_prodEntraCalcQtdTotVenda != value)
                {
                    _prodEntraCalcQtdTotVenda = value;
                    OnPropertyChanged("ProdEntraCalcQtdTotVenda");
                }
            }
        }
        private string _prodEntraCalcQtdTotVenda;
    
        [DataMember]
        public string ProdCodART
        {
            get { return _prodCodART; }
            set
            {
                if (_prodCodART != value)
                {
                    _prodCodART = value;
                    OnPropertyChanged("ProdCodART");
                }
            }
        }
        private string _prodCodART;
    
        [DataMember]
        public string ProdVacina
        {
            get { return _prodVacina; }
            set
            {
                if (_prodVacina != value)
                {
                    _prodVacina = value;
                    OnPropertyChanged("ProdVacina");
                }
            }
        }
        private string _prodVacina;
    
        [DataMember]
        public string ProdNecessitaCA
        {
            get { return _prodNecessitaCA; }
            set
            {
                if (_prodNecessitaCA != value)
                {
                    _prodNecessitaCA = value;
                    OnPropertyChanged("ProdNecessitaCA");
                }
            }
        }
        private string _prodNecessitaCA;
    
        [DataMember]
        public string RegraPagtoEntCod
        {
            get { return _regraPagtoEntCod; }
            set
            {
                if (_regraPagtoEntCod != value)
                {
                    _regraPagtoEntCod = value;
                    OnPropertyChanged("RegraPagtoEntCod");
                }
            }
        }
        private string _regraPagtoEntCod;
    
        [DataMember]
        public string DesCodEstr
        {
            get { return _desCodEstr; }
            set
            {
                if (_desCodEstr != value)
                {
                    _desCodEstr = value;
                    OnPropertyChanged("DesCodEstr");
                }
            }
        }
        private string _desCodEstr;
    
        [DataMember]
        public string ProdEntEstqApontUltOper
        {
            get { return _prodEntEstqApontUltOper; }
            set
            {
                if (_prodEntEstqApontUltOper != value)
                {
                    _prodEntEstqApontUltOper = value;
                    OnPropertyChanged("ProdEntEstqApontUltOper");
                }
            }
        }
        private string _prodEntEstqApontUltOper;
    
        [DataMember]
        public Nullable<decimal> ProdPercTotAproxImpost
        {
            get { return _prodPercTotAproxImpost; }
            set
            {
                if (_prodPercTotAproxImpost != value)
                {
                    _prodPercTotAproxImpost = value;
                    OnPropertyChanged("ProdPercTotAproxImpost");
                }
            }
        }
        private Nullable<decimal> _prodPercTotAproxImpost;
    
        [DataMember]
        public string PRODSTATDMI
        {
            get { return _pRODSTATDMI; }
            set
            {
                if (_pRODSTATDMI != value)
                {
                    _pRODSTATDMI = value;
                    OnPropertyChanged("PRODSTATDMI");
                }
            }
        }
        private string _pRODSTATDMI;
    
        [DataMember]
        public string RefPautaCod
        {
            get { return _refPautaCod; }
            set
            {
                if (_refPautaCod != value)
                {
                    _refPautaCod = value;
                    OnPropertyChanged("RefPautaCod");
                }
            }
        }
        private string _refPautaCod;
    
        [DataMember]
        public string ProdFabricProp
        {
            get { return _prodFabricProp; }
            set
            {
                if (_prodFabricProp != value)
                {
                    _prodFabricProp = value;
                    OnPropertyChanged("ProdFabricProp");
                }
            }
        }
        private string _prodFabricProp;
    
        [DataMember]
        public string ProdBenefic
        {
            get { return _prodBenefic; }
            set
            {
                if (_prodBenefic != value)
                {
                    _prodBenefic = value;
                    OnPropertyChanged("ProdBenefic");
                }
            }
        }
        private string _prodBenefic;
    
        [DataMember]
        public Nullable<decimal> ProdHotelQtdEstrela
        {
            get { return _prodHotelQtdEstrela; }
            set
            {
                if (_prodHotelQtdEstrela != value)
                {
                    _prodHotelQtdEstrela = value;
                    OnPropertyChanged("ProdHotelQtdEstrela");
                }
            }
        }
        private Nullable<decimal> _prodHotelQtdEstrela;
    
        [DataMember]
        public string ProdTerc
        {
            get { return _prodTerc; }
            set
            {
                if (_prodTerc != value)
                {
                    _prodTerc = value;
                    OnPropertyChanged("ProdTerc");
                }
            }
        }
        private string _prodTerc;
    
        [DataMember]
        public string PRODCTRLCARGAORDEMIMPRESS
        {
            get { return _pRODCTRLCARGAORDEMIMPRESS; }
            set
            {
                if (_pRODCTRLCARGAORDEMIMPRESS != value)
                {
                    _pRODCTRLCARGAORDEMIMPRESS = value;
                    OnPropertyChanged("PRODCTRLCARGAORDEMIMPRESS");
                }
            }
        }
        private string _pRODCTRLCARGAORDEMIMPRESS;
    
        [DataMember]
        public Nullable<System.DateTime> ProdDtUltAtualiz
        {
            get { return _prodDtUltAtualiz; }
            set
            {
                if (_prodDtUltAtualiz != value)
                {
                    _prodDtUltAtualiz = value;
                    OnPropertyChanged("ProdDtUltAtualiz");
                }
            }
        }
        private Nullable<System.DateTime> _prodDtUltAtualiz;
    
        [DataMember]
        public Nullable<decimal> ProdPesoFixoMaximo
        {
            get { return _prodPesoFixoMaximo; }
            set
            {
                if (_prodPesoFixoMaximo != value)
                {
                    _prodPesoFixoMaximo = value;
                    OnPropertyChanged("ProdPesoFixoMaximo");
                }
            }
        }
        private Nullable<decimal> _prodPesoFixoMaximo;
    
        [DataMember]
        public string ProdObrigEmbAtendPv
        {
            get { return _prodObrigEmbAtendPv; }
            set
            {
                if (_prodObrigEmbAtendPv != value)
                {
                    _prodObrigEmbAtendPv = value;
                    OnPropertyChanged("ProdObrigEmbAtendPv");
                }
            }
        }
        private string _prodObrigEmbAtendPv;
    
        [DataMember]
        public string ProdNomeRelat
        {
            get { return _prodNomeRelat; }
            set
            {
                if (_prodNomeRelat != value)
                {
                    _prodNomeRelat = value;
                    OnPropertyChanged("ProdNomeRelat");
                }
            }
        }
        private string _prodNomeRelat;
    
        [DataMember]
        public string ProdNecessitaSSCC
        {
            get { return _prodNecessitaSSCC; }
            set
            {
                if (_prodNecessitaSSCC != value)
                {
                    _prodNecessitaSSCC = value;
                    OnPropertyChanged("ProdNecessitaSSCC");
                }
            }
        }
        private string _prodNecessitaSSCC;
    
        [DataMember]
        public string ProdDesconsidPesagem
        {
            get { return _prodDesconsidPesagem; }
            set
            {
                if (_prodDesconsidPesagem != value)
                {
                    _prodDesconsidPesagem = value;
                    OnPropertyChanged("ProdDesconsidPesagem");
                }
            }
        }
        private string _prodDesconsidPesagem;
    
        [DataMember]
        public string PRODNOMERELAT2
        {
            get { return _pRODNOMERELAT2; }
            set
            {
                if (_pRODNOMERELAT2 != value)
                {
                    _pRODNOMERELAT2 = value;
                    OnPropertyChanged("PRODNOMERELAT2");
                }
            }
        }
        private string _pRODNOMERELAT2;
    
        [DataMember]
        public string PRODPATHARQUIVO2
        {
            get { return _pRODPATHARQUIVO2; }
            set
            {
                if (_pRODPATHARQUIVO2 != value)
                {
                    _pRODPATHARQUIVO2 = value;
                    OnPropertyChanged("PRODPATHARQUIVO2");
                }
            }
        }
        private string _pRODPATHARQUIVO2;
    
        [DataMember]
        public string PRODOPFINALIZAPONTQTDNEC
        {
            get { return _pRODOPFINALIZAPONTQTDNEC; }
            set
            {
                if (_pRODOPFINALIZAPONTQTDNEC != value)
                {
                    _pRODOPFINALIZAPONTQTDNEC = value;
                    OnPropertyChanged("PRODOPFINALIZAPONTQTDNEC");
                }
            }
        }
        private string _pRODOPFINALIZAPONTQTDNEC;
    
        [DataMember]
        public string USERCodigoCHIC
        {
            get { return _uSERCodigoCHIC; }
            set
            {
                if (_uSERCodigoCHIC != value)
                {
                    _uSERCodigoCHIC = value;
                    OnPropertyChanged("USERCodigoCHIC");
                }
            }
        }
        private string _uSERCodigoCHIC;
    
        [DataMember]
        public string USEREmpresaLinha
        {
            get { return _uSEREmpresaLinha; }
            set
            {
                if (_uSEREmpresaLinha != value)
                {
                    _uSEREmpresaLinha = value;
                    OnPropertyChanged("USEREmpresaLinha");
                }
            }
        }
        private string _uSEREmpresaLinha;
    
        [DataMember]
        public string USERLinhagemRRC
        {
            get { return _uSERLinhagemRRC; }
            set
            {
                if (_uSERLinhagemRRC != value)
                {
                    _uSERLinhagemRRC = value;
                    OnPropertyChanged("USERLinhagemRRC");
                }
            }
        }
        private string _uSERLinhagemRRC;
    
        [DataMember]
        public Nullable<short> USERNumFormula
        {
            get { return _uSERNumFormula; }
            set
            {
                if (_uSERNumFormula != value)
                {
                    _uSERNumFormula = value;
                    OnPropertyChanged("USERNumFormula");
                }
            }
        }
        private Nullable<short> _uSERNumFormula;
    
        [DataMember]
        public Nullable<decimal> USERPpcpKg01Batida
        {
            get { return _uSERPpcpKg01Batida; }
            set
            {
                if (_uSERPpcpKg01Batida != value)
                {
                    _uSERPpcpKg01Batida = value;
                    OnPropertyChanged("USERPpcpKg01Batida");
                }
            }
        }
        private Nullable<decimal> _uSERPpcpKg01Batida;
    
        [DataMember]
        public string USERPRODCODICMSST
        {
            get { return _uSERPRODCODICMSST; }
            set
            {
                if (_uSERPRODCODICMSST != value)
                {
                    _uSERPRODCODICMSST = value;
                    OnPropertyChanged("USERPRODCODICMSST");
                }
            }
        }
        private string _uSERPRODCODICMSST;
    
        [DataMember]
        public Nullable<System.DateTime> USERPRODDATAICMSST
        {
            get { return _uSERPRODDATAICMSST; }
            set
            {
                if (_uSERPRODDATAICMSST != value)
                {
                    _uSERPRODDATAICMSST = value;
                    OnPropertyChanged("USERPRODDATAICMSST");
                }
            }
        }
        private Nullable<System.DateTime> _uSERPRODDATAICMSST;
    
        [DataMember]
        public string USERTipoLancEntradaProd
        {
            get { return _uSERTipoLancEntradaProd; }
            set
            {
                if (_uSERTipoLancEntradaProd != value)
                {
                    _uSERTipoLancEntradaProd = value;
                    OnPropertyChanged("USERTipoLancEntradaProd");
                }
            }
        }
        private string _uSERTipoLancEntradaProd;
    
        [DataMember]
        public string USERTipoLancSaidaProd
        {
            get { return _uSERTipoLancSaidaProd; }
            set
            {
                if (_uSERTipoLancSaidaProd != value)
                {
                    _uSERTipoLancSaidaProd = value;
                    OnPropertyChanged("USERTipoLancSaidaProd");
                }
            }
        }
        private string _uSERTipoLancSaidaProd;
    
        [DataMember]
        public string USERTipoLinha
        {
            get { return _uSERTipoLinha; }
            set
            {
                if (_uSERTipoLinha != value)
                {
                    _uSERTipoLinha = value;
                    OnPropertyChanged("USERTipoLinha");
                }
            }
        }
        private string _uSERTipoLinha;
    
        [DataMember]
        public string USERTLBaixaAdicProd
        {
            get { return _uSERTLBaixaAdicProd; }
            set
            {
                if (_uSERTLBaixaAdicProd != value)
                {
                    _uSERTLBaixaAdicProd = value;
                    OnPropertyChanged("USERTLBaixaAdicProd");
                }
            }
        }
        private string _uSERTLBaixaAdicProd;
    
        [DataMember]
        public string ProdIndEscRelev
        {
            get { return _prodIndEscRelev; }
            set
            {
                if (_prodIndEscRelev != value)
                {
                    _prodIndEscRelev = value;
                    OnPropertyChanged("ProdIndEscRelev");
                }
            }
        }
        private string _prodIndEscRelev;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<FIC_TEC_PROD> FIC_TEC_PROD
        {
            get
            {
                if (_fIC_TEC_PROD == null)
                {
                    _fIC_TEC_PROD = new TrackableCollection<FIC_TEC_PROD>();
                    _fIC_TEC_PROD.CollectionChanged += FixupFIC_TEC_PROD;
                }
                return _fIC_TEC_PROD;
            }
            set
            {
                if (!ReferenceEquals(_fIC_TEC_PROD, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_fIC_TEC_PROD != null)
                    {
                        _fIC_TEC_PROD.CollectionChanged -= FixupFIC_TEC_PROD;
                        // This is the principal end in an association that performs cascade deletes.
                        // Remove the cascade delete event handler for any entities in the current collection.
                        foreach (FIC_TEC_PROD item in _fIC_TEC_PROD)
                        {
                            ChangeTracker.ObjectStateChanging -= item.HandleCascadeDelete;
                        }
                    }
                    _fIC_TEC_PROD = value;
                    if (_fIC_TEC_PROD != null)
                    {
                        _fIC_TEC_PROD.CollectionChanged += FixupFIC_TEC_PROD;
                        // This is the principal end in an association that performs cascade deletes.
                        // Add the cascade delete event handler for any entities that are already in the new collection.
                        foreach (FIC_TEC_PROD item in _fIC_TEC_PROD)
                        {
                            ChangeTracker.ObjectStateChanging += item.HandleCascadeDelete;
                        }
                    }
                    OnNavigationPropertyChanged("FIC_TEC_PROD");
                }
            }
        }
        private TrackableCollection<FIC_TEC_PROD> _fIC_TEC_PROD;
    
        [DataMember]
        public PRODUTO PRODUTO
        {
            get { return _pRODUTO; }
            set
            {
                if (!ReferenceEquals(_pRODUTO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added && value != null)
                    {
                        // This the dependent end of an identifying relationship, so the principal end cannot be changed if it is already set,
                        // otherwise it can only be set to an entity with a primary key that is the same value as the dependent's foreign key.
                        if (ProdCodEstr != value.ProdCodEstr)
                        {
                            throw new InvalidOperationException("The principal end of an identifying relationship can only be changed when the dependent end is in the Added state.");
                        }
                    }
                    var previousValue = _pRODUTO;
                    _pRODUTO = value;
                    FixupPRODUTO(previousValue);
                    OnNavigationPropertyChanged("PRODUTO");
                }
            }
        }
        private PRODUTO _pRODUTO;
    
        [DataMember]
        public TrackableCollection<PRODUTO1> PRODUTO11
        {
            get
            {
                if (_pRODUTO11 == null)
                {
                    _pRODUTO11 = new TrackableCollection<PRODUTO1>();
                    _pRODUTO11.CollectionChanged += FixupPRODUTO11;
                }
                return _pRODUTO11;
            }
            set
            {
                if (!ReferenceEquals(_pRODUTO11, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pRODUTO11 != null)
                    {
                        _pRODUTO11.CollectionChanged -= FixupPRODUTO11;
                    }
                    _pRODUTO11 = value;
                    if (_pRODUTO11 != null)
                    {
                        _pRODUTO11.CollectionChanged += FixupPRODUTO11;
                    }
                    OnNavigationPropertyChanged("PRODUTO11");
                }
            }
        }
        private TrackableCollection<PRODUTO1> _pRODUTO11;
    
        [DataMember]
        public PRODUTO1 PRODUTO12
        {
            get { return _pRODUTO12; }
            set
            {
                if (!ReferenceEquals(_pRODUTO12, value))
                {
                    var previousValue = _pRODUTO12;
                    _pRODUTO12 = value;
                    FixupPRODUTO12(previousValue);
                    OnNavigationPropertyChanged("PRODUTO12");
                }
            }
        }
        private PRODUTO1 _pRODUTO12;
    
        [DataMember]
        public TrackableCollection<DESCR_TECN_PROD> DESCR_TECN_PROD
        {
            get
            {
                if (_dESCR_TECN_PROD == null)
                {
                    _dESCR_TECN_PROD = new TrackableCollection<DESCR_TECN_PROD>();
                    _dESCR_TECN_PROD.CollectionChanged += FixupDESCR_TECN_PROD;
                }
                return _dESCR_TECN_PROD;
            }
            set
            {
                if (!ReferenceEquals(_dESCR_TECN_PROD, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_dESCR_TECN_PROD != null)
                    {
                        _dESCR_TECN_PROD.CollectionChanged -= FixupDESCR_TECN_PROD;
                        // This is the principal end in an association that performs cascade deletes.
                        // Remove the cascade delete event handler for any entities in the current collection.
                        foreach (DESCR_TECN_PROD item in _dESCR_TECN_PROD)
                        {
                            ChangeTracker.ObjectStateChanging -= item.HandleCascadeDelete;
                        }
                    }
                    _dESCR_TECN_PROD = value;
                    if (_dESCR_TECN_PROD != null)
                    {
                        _dESCR_TECN_PROD.CollectionChanged += FixupDESCR_TECN_PROD;
                        // This is the principal end in an association that performs cascade deletes.
                        // Add the cascade delete event handler for any entities that are already in the new collection.
                        foreach (DESCR_TECN_PROD item in _dESCR_TECN_PROD)
                        {
                            ChangeTracker.ObjectStateChanging += item.HandleCascadeDelete;
                        }
                    }
                    OnNavigationPropertyChanged("DESCR_TECN_PROD");
                }
            }
        }
        private TrackableCollection<DESCR_TECN_PROD> _dESCR_TECN_PROD;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        // This entity type is the dependent end in at least one association that performs cascade deletes.
        // This event handler will process notifications that occur when the principal end is deleted.
        internal void HandleCascadeDelete(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                this.MarkAsDeleted();
            }
        }
    
        protected virtual void ClearNavigationProperties()
        {
            FIC_TEC_PROD.Clear();
            PRODUTO = null;
            PRODUTO11.Clear();
            PRODUTO12 = null;
            DESCR_TECN_PROD.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupPRODUTO(PRODUTO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && ReferenceEquals(previousValue.PRODUTO14, this))
            {
                previousValue.PRODUTO14 = null;
            }
    
            if (PRODUTO != null)
            {
                PRODUTO.PRODUTO14 = this;
                ProdCodEstr = PRODUTO.ProdCodEstr;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("PRODUTO")
                    && (ChangeTracker.OriginalValues["PRODUTO"] == PRODUTO))
                {
                    ChangeTracker.OriginalValues.Remove("PRODUTO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("PRODUTO", previousValue);
                }
                if (PRODUTO != null && !PRODUTO.ChangeTracker.ChangeTrackingEnabled)
                {
                    PRODUTO.StartTracking();
                }
            }
        }
    
        private void FixupPRODUTO12(PRODUTO1 previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.PRODUTO11.Contains(this))
            {
                previousValue.PRODUTO11.Remove(this);
            }
    
            if (PRODUTO12 != null)
            {
                if (!PRODUTO12.PRODUTO11.Contains(this))
                {
                    PRODUTO12.PRODUTO11.Add(this);
                }
    
                ProdCodEstrProdPaiProj = PRODUTO12.ProdCodEstr;
            }
            else if (!skipKeys)
            {
                ProdCodEstrProdPaiProj = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("PRODUTO12")
                    && (ChangeTracker.OriginalValues["PRODUTO12"] == PRODUTO12))
                {
                    ChangeTracker.OriginalValues.Remove("PRODUTO12");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("PRODUTO12", previousValue);
                }
                if (PRODUTO12 != null && !PRODUTO12.ChangeTracker.ChangeTrackingEnabled)
                {
                    PRODUTO12.StartTracking();
                }
            }
        }
    
        private void FixupFIC_TEC_PROD(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FIC_TEC_PROD item in e.NewItems)
                {
                    item.PRODUTO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FIC_TEC_PROD", item);
                    }
                    // This is the principal end in an association that performs cascade deletes.
                    // Update the event listener to refer to the new dependent.
                    ChangeTracker.ObjectStateChanging += item.HandleCascadeDelete;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FIC_TEC_PROD item in e.OldItems)
                {
                    if (ReferenceEquals(item.PRODUTO1, this))
                    {
                        item.PRODUTO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FIC_TEC_PROD", item);
                        // Delete the dependent end of this identifying association. If the current state is Added,
                        // allow the relationship to be changed without causing the dependent to be deleted.
                        if (item.ChangeTracker.State != ObjectState.Added)
                        {
                            item.MarkAsDeleted();
                        }
                    }
                    // This is the principal end in an association that performs cascade deletes.
                    // Remove the previous dependent from the event listener.
                    ChangeTracker.ObjectStateChanging -= item.HandleCascadeDelete;
                }
            }
        }
    
        private void FixupPRODUTO11(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PRODUTO1 item in e.NewItems)
                {
                    item.PRODUTO12 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PRODUTO11", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PRODUTO1 item in e.OldItems)
                {
                    if (ReferenceEquals(item.PRODUTO12, this))
                    {
                        item.PRODUTO12 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PRODUTO11", item);
                    }
                }
            }
        }
    
        private void FixupDESCR_TECN_PROD(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DESCR_TECN_PROD item in e.NewItems)
                {
                    item.PRODUTO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DESCR_TECN_PROD", item);
                    }
                    // This is the principal end in an association that performs cascade deletes.
                    // Update the event listener to refer to the new dependent.
                    ChangeTracker.ObjectStateChanging += item.HandleCascadeDelete;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DESCR_TECN_PROD item in e.OldItems)
                {
                    if (ReferenceEquals(item.PRODUTO1, this))
                    {
                        item.PRODUTO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DESCR_TECN_PROD", item);
                        // Delete the dependent end of this identifying association. If the current state is Added,
                        // allow the relationship to be changed without causing the dependent to be deleted.
                        if (item.ChangeTracker.State != ObjectState.Added)
                        {
                            item.MarkAsDeleted();
                        }
                    }
                    // This is the principal end in an association that performs cascade deletes.
                    // Remove the previous dependent from the event listener.
                    ChangeTracker.ObjectStateChanging -= item.HandleCascadeDelete;
                }
            }
        }

        #endregion

    }
}

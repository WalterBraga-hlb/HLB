//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHyLinedoBrasil.Models
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(COB_BANC))]
    [KnownType(typeof(PARC_DOC_FIN))]
    public partial class ITEM_COB_BANC: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public string EmpCod
        {
            get { return _empCod; }
            set
            {
                if (_empCod != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'EmpCod' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    if (!IsDeserializing)
                    {
                        if (COB_BANC != null && COB_BANC.EmpCod != value)
                        {
                            COB_BANC = null;
                        }
                    }
                    _empCod = value;
                    OnPropertyChanged("EmpCod");
                }
            }
        }
        private string _empCod;
    
        [DataMember]
        public string BcoNum
        {
            get { return _bcoNum; }
            set
            {
                if (_bcoNum != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'BcoNum' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    if (!IsDeserializing)
                    {
                        if (COB_BANC != null && COB_BANC.BcoNum != value)
                        {
                            COB_BANC = null;
                        }
                    }
                    _bcoNum = value;
                    OnPropertyChanged("BcoNum");
                }
            }
        }
        private string _bcoNum;
    
        [DataMember]
        public string CobBancTipo
        {
            get { return _cobBancTipo; }
            set
            {
                if (_cobBancTipo != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'CobBancTipo' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    if (!IsDeserializing)
                    {
                        if (COB_BANC != null && COB_BANC.CobBancTipo != value)
                        {
                            COB_BANC = null;
                        }
                    }
                    _cobBancTipo = value;
                    OnPropertyChanged("CobBancTipo");
                }
            }
        }
        private string _cobBancTipo;
    
        [DataMember]
        public string CobBancRemNum
        {
            get { return _cobBancRemNum; }
            set
            {
                if (_cobBancRemNum != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'CobBancRemNum' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    if (!IsDeserializing)
                    {
                        if (COB_BANC != null && COB_BANC.CobBancRemNum != value)
                        {
                            COB_BANC = null;
                        }
                    }
                    _cobBancRemNum = value;
                    OnPropertyChanged("CobBancRemNum");
                }
            }
        }
        private string _cobBancRemNum;
    
        [DataMember]
        public int DocFinChv
        {
            get { return _docFinChv; }
            set
            {
                if (_docFinChv != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'DocFinChv' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    if (!IsDeserializing)
                    {
                        if (PARC_DOC_FIN != null && PARC_DOC_FIN.DocFinChv != value)
                        {
                            PARC_DOC_FIN = null;
                        }
                    }
                    _docFinChv = value;
                    OnPropertyChanged("DocFinChv");
                }
            }
        }
        private int _docFinChv;
    
        [DataMember]
        public short ParcDocFinSeq
        {
            get { return _parcDocFinSeq; }
            set
            {
                if (_parcDocFinSeq != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ParcDocFinSeq' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    if (!IsDeserializing)
                    {
                        if (PARC_DOC_FIN != null && PARC_DOC_FIN.ParcDocFinSeq != value)
                        {
                            PARC_DOC_FIN = null;
                        }
                    }
                    _parcDocFinSeq = value;
                    OnPropertyChanged("ParcDocFinSeq");
                }
            }
        }
        private short _parcDocFinSeq;
    
        [DataMember]
        public short ParcDocFinDesmPag
        {
            get { return _parcDocFinDesmPag; }
            set
            {
                if (_parcDocFinDesmPag != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ParcDocFinDesmPag' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    if (!IsDeserializing)
                    {
                        if (PARC_DOC_FIN != null && PARC_DOC_FIN.ParcDocFinDesmPag != value)
                        {
                            PARC_DOC_FIN = null;
                        }
                    }
                    _parcDocFinDesmPag = value;
                    OnPropertyChanged("ParcDocFinDesmPag");
                }
            }
        }
        private short _parcDocFinDesmPag;
    
        [DataMember]
        public string TipoRemCobBancCod
        {
            get { return _tipoRemCobBancCod; }
            set
            {
                if (_tipoRemCobBancCod != value)
                {
                    _tipoRemCobBancCod = value;
                    OnPropertyChanged("TipoRemCobBancCod");
                }
            }
        }
        private string _tipoRemCobBancCod;
    
        [DataMember]
        public string ItCobBancAceite
        {
            get { return _itCobBancAceite; }
            set
            {
                if (_itCobBancAceite != value)
                {
                    _itCobBancAceite = value;
                    OnPropertyChanged("ItCobBancAceite");
                }
            }
        }
        private string _itCobBancAceite;
    
        [DataMember]
        public string CartCobCod
        {
            get { return _cartCobCod; }
            set
            {
                if (_cartCobCod != value)
                {
                    _cartCobCod = value;
                    OnPropertyChanged("CartCobCod");
                }
            }
        }
        private string _cartCobCod;
    
        [DataMember]
        public string ComCobCodRem
        {
            get { return _comCobCodRem; }
            set
            {
                if (_comCobCodRem != value)
                {
                    _comCobCodRem = value;
                    OnPropertyChanged("ComCobCodRem");
                }
            }
        }
        private string _comCobCodRem;
    
        [DataMember]
        public string ComCobRem
        {
            get { return _comCobRem; }
            set
            {
                if (_comCobRem != value)
                {
                    _comCobRem = value;
                    OnPropertyChanged("ComCobRem");
                }
            }
        }
        private string _comCobRem;
    
        [DataMember]
        public string ComCobCodRet
        {
            get { return _comCobCodRet; }
            set
            {
                if (_comCobCodRet != value)
                {
                    _comCobCodRet = value;
                    OnPropertyChanged("ComCobCodRet");
                }
            }
        }
        private string _comCobCodRet;
    
        [DataMember]
        public string ComCobRet
        {
            get { return _comCobRet; }
            set
            {
                if (_comCobRet != value)
                {
                    _comCobRet = value;
                    OnPropertyChanged("ComCobRet");
                }
            }
        }
        private string _comCobRet;
    
        [DataMember]
        public string EspecTitCod
        {
            get { return _especTitCod; }
            set
            {
                if (_especTitCod != value)
                {
                    _especTitCod = value;
                    OnPropertyChanged("EspecTitCod");
                }
            }
        }
        private string _especTitCod;
    
        [DataMember]
        public string ItCobBancInstCobCod1
        {
            get { return _itCobBancInstCobCod1; }
            set
            {
                if (_itCobBancInstCobCod1 != value)
                {
                    _itCobBancInstCobCod1 = value;
                    OnPropertyChanged("ItCobBancInstCobCod1");
                }
            }
        }
        private string _itCobBancInstCobCod1;
    
        [DataMember]
        public string ItCobBancInstCobCod2
        {
            get { return _itCobBancInstCobCod2; }
            set
            {
                if (_itCobBancInstCobCod2 != value)
                {
                    _itCobBancInstCobCod2 = value;
                    OnPropertyChanged("ItCobBancInstCobCod2");
                }
            }
        }
        private string _itCobBancInstCobCod2;
    
        [DataMember]
        public string ItCobBancNossoNum
        {
            get { return _itCobBancNossoNum; }
            set
            {
                if (_itCobBancNossoNum != value)
                {
                    _itCobBancNossoNum = value;
                    OnPropertyChanged("ItCobBancNossoNum");
                }
            }
        }
        private string _itCobBancNossoNum;
    
        [DataMember]
        public string MovCtrlBancNum
        {
            get { return _movCtrlBancNum; }
            set
            {
                if (_movCtrlBancNum != value)
                {
                    _movCtrlBancNum = value;
                    OnPropertyChanged("MovCtrlBancNum");
                }
            }
        }
        private string _movCtrlBancNum;
    
        [DataMember]
        public string EmpCodParc
        {
            get { return _empCodParc; }
            set
            {
                if (_empCodParc != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'EmpCodParc' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    if (!IsDeserializing)
                    {
                        if (PARC_DOC_FIN != null && PARC_DOC_FIN.EmpCod != value)
                        {
                            PARC_DOC_FIN = null;
                        }
                    }
                    _empCodParc = value;
                    OnPropertyChanged("EmpCodParc");
                }
            }
        }
        private string _empCodParc;
    
        [DataMember]
        public string AgNum
        {
            get { return _agNum; }
            set
            {
                if (_agNum != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'AgNum' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    if (!IsDeserializing)
                    {
                        if (COB_BANC != null && COB_BANC.AgNum != value)
                        {
                            COB_BANC = null;
                        }
                    }
                    _agNum = value;
                    OnPropertyChanged("AgNum");
                }
            }
        }
        private string _agNum;
    
        [DataMember]
        public string ItCobBancEstornado
        {
            get { return _itCobBancEstornado; }
            set
            {
                if (_itCobBancEstornado != value)
                {
                    _itCobBancEstornado = value;
                    OnPropertyChanged("ItCobBancEstornado");
                }
            }
        }
        private string _itCobBancEstornado;
    
        [DataMember]
        public Nullable<System.DateTime> ItCobBancEstData
        {
            get { return _itCobBancEstData; }
            set
            {
                if (_itCobBancEstData != value)
                {
                    _itCobBancEstData = value;
                    OnPropertyChanged("ItCobBancEstData");
                }
            }
        }
        private Nullable<System.DateTime> _itCobBancEstData;
    
        [DataMember]
        public string ItCobBancEstMotivo
        {
            get { return _itCobBancEstMotivo; }
            set
            {
                if (_itCobBancEstMotivo != value)
                {
                    _itCobBancEstMotivo = value;
                    OnPropertyChanged("ItCobBancEstMotivo");
                }
            }
        }
        private string _itCobBancEstMotivo;
    
        [DataMember]
        public Nullable<decimal> ItCobBancValOrig
        {
            get { return _itCobBancValOrig; }
            set
            {
                if (_itCobBancValOrig != value)
                {
                    _itCobBancValOrig = value;
                    OnPropertyChanged("ItCobBancValOrig");
                }
            }
        }
        private Nullable<decimal> _itCobBancValOrig;
    
        [DataMember]
        public Nullable<decimal> ItCobBancValFinal
        {
            get { return _itCobBancValFinal; }
            set
            {
                if (_itCobBancValFinal != value)
                {
                    _itCobBancValFinal = value;
                    OnPropertyChanged("ItCobBancValFinal");
                }
            }
        }
        private Nullable<decimal> _itCobBancValFinal;
    
        [DataMember]
        public Nullable<System.DateTime> ItCobBancDataVenc
        {
            get { return _itCobBancDataVenc; }
            set
            {
                if (_itCobBancDataVenc != value)
                {
                    _itCobBancDataVenc = value;
                    OnPropertyChanged("ItCobBancDataVenc");
                }
            }
        }
        private Nullable<System.DateTime> _itCobBancDataVenc;
    
        [DataMember]
        public Nullable<short> ItCobBancQtdDias
        {
            get { return _itCobBancQtdDias; }
            set
            {
                if (_itCobBancQtdDias != value)
                {
                    _itCobBancQtdDias = value;
                    OnPropertyChanged("ItCobBancQtdDias");
                }
            }
        }
        private Nullable<short> _itCobBancQtdDias;
    
        [DataMember]
        public Nullable<decimal> ItCobBancValTxaDesc
        {
            get { return _itCobBancValTxaDesc; }
            set
            {
                if (_itCobBancValTxaDesc != value)
                {
                    _itCobBancValTxaDesc = value;
                    OnPropertyChanged("ItCobBancValTxaDesc");
                }
            }
        }
        private Nullable<decimal> _itCobBancValTxaDesc;
    
        [DataMember]
        public Nullable<decimal> ItCobBancValJuros
        {
            get { return _itCobBancValJuros; }
            set
            {
                if (_itCobBancValJuros != value)
                {
                    _itCobBancValJuros = value;
                    OnPropertyChanged("ItCobBancValJuros");
                }
            }
        }
        private Nullable<decimal> _itCobBancValJuros;
    
        [DataMember]
        public Nullable<decimal> ItCobBancValTxaBoleto
        {
            get { return _itCobBancValTxaBoleto; }
            set
            {
                if (_itCobBancValTxaBoleto != value)
                {
                    _itCobBancValTxaBoleto = value;
                    OnPropertyChanged("ItCobBancValTxaBoleto");
                }
            }
        }
        private Nullable<decimal> _itCobBancValTxaBoleto;
    
        [DataMember]
        public Nullable<decimal> ItCobBancValIof
        {
            get { return _itCobBancValIof; }
            set
            {
                if (_itCobBancValIof != value)
                {
                    _itCobBancValIof = value;
                    OnPropertyChanged("ItCobBancValIof");
                }
            }
        }
        private Nullable<decimal> _itCobBancValIof;
    
        [DataMember]
        public Nullable<decimal> ItCobBancValCpmf
        {
            get { return _itCobBancValCpmf; }
            set
            {
                if (_itCobBancValCpmf != value)
                {
                    _itCobBancValCpmf = value;
                    OnPropertyChanged("ItCobBancValCpmf");
                }
            }
        }
        private Nullable<decimal> _itCobBancValCpmf;
    
        [DataMember]
        public Nullable<System.DateTime> USERCobBancRetData
        {
            get { return _uSERCobBancRetData; }
            set
            {
                if (_uSERCobBancRetData != value)
                {
                    _uSERCobBancRetData = value;
                    OnPropertyChanged("USERCobBancRetData");
                }
            }
        }
        private Nullable<System.DateTime> _uSERCobBancRetData;
    
        [DataMember]
        public string ComCobTipo
        {
            get { return _comCobTipo; }
            set
            {
                if (_comCobTipo != value)
                {
                    _comCobTipo = value;
                    OnPropertyChanged("ComCobTipo");
                }
            }
        }
        private string _comCobTipo;
    
        [DataMember]
        public string FormaPagBancoCod
        {
            get { return _formaPagBancoCod; }
            set
            {
                if (_formaPagBancoCod != value)
                {
                    _formaPagBancoCod = value;
                    OnPropertyChanged("FormaPagBancoCod");
                }
            }
        }
        private string _formaPagBancoCod;
    
        [DataMember]
        public string TipoPagBancoCod
        {
            get { return _tipoPagBancoCod; }
            set
            {
                if (_tipoPagBancoCod != value)
                {
                    _tipoPagBancoCod = value;
                    OnPropertyChanged("TipoPagBancoCod");
                }
            }
        }
        private string _tipoPagBancoCod;
    
        [DataMember]
        public string USERRemessaGravada
        {
            get { return _uSERRemessaGravada; }
            set
            {
                if (_uSERRemessaGravada != value)
                {
                    _uSERRemessaGravada = value;
                    OnPropertyChanged("USERRemessaGravada");
                }
            }
        }
        private string _uSERRemessaGravada;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public COB_BANC COB_BANC
        {
            get { return _cOB_BANC; }
            set
            {
                if (!ReferenceEquals(_cOB_BANC, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added && value != null)
                    {
                        // This the dependent end of an identifying relationship, so the principal end cannot be changed if it is already set,
                        // otherwise it can only be set to an entity with a primary key that is the same value as the dependent's foreign key.
                        if (EmpCod != value.EmpCod || BcoNum != value.BcoNum || CobBancTipo != value.CobBancTipo || CobBancRemNum != value.CobBancRemNum || AgNum != value.AgNum)
                        {
                            throw new InvalidOperationException("The principal end of an identifying relationship can only be changed when the dependent end is in the Added state.");
                        }
                    }
                    var previousValue = _cOB_BANC;
                    _cOB_BANC = value;
                    FixupCOB_BANC(previousValue);
                    OnNavigationPropertyChanged("COB_BANC");
                }
            }
        }
        private COB_BANC _cOB_BANC;
    
        [DataMember]
        public PARC_DOC_FIN PARC_DOC_FIN
        {
            get { return _pARC_DOC_FIN; }
            set
            {
                if (!ReferenceEquals(_pARC_DOC_FIN, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added && value != null)
                    {
                        // This the dependent end of an identifying relationship, so the principal end cannot be changed if it is already set,
                        // otherwise it can only be set to an entity with a primary key that is the same value as the dependent's foreign key.
                        if (EmpCodParc != value.EmpCod || DocFinChv != value.DocFinChv || ParcDocFinSeq != value.ParcDocFinSeq || ParcDocFinDesmPag != value.ParcDocFinDesmPag)
                        {
                            throw new InvalidOperationException("The principal end of an identifying relationship can only be changed when the dependent end is in the Added state.");
                        }
                    }
                    var previousValue = _pARC_DOC_FIN;
                    _pARC_DOC_FIN = value;
                    FixupPARC_DOC_FIN(previousValue);
                    OnNavigationPropertyChanged("PARC_DOC_FIN");
                }
            }
        }
        private PARC_DOC_FIN _pARC_DOC_FIN;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        // This entity type is the dependent end in at least one association that performs cascade deletes.
        // This event handler will process notifications that occur when the principal end is deleted.
        internal void HandleCascadeDelete(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                this.MarkAsDeleted();
            }
        }
    
        protected virtual void ClearNavigationProperties()
        {
            COB_BANC = null;
            PARC_DOC_FIN = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupCOB_BANC(COB_BANC previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ITEM_COB_BANC.Contains(this))
            {
                previousValue.ITEM_COB_BANC.Remove(this);
            }
    
            if (COB_BANC != null)
            {
                if (!COB_BANC.ITEM_COB_BANC.Contains(this))
                {
                    COB_BANC.ITEM_COB_BANC.Add(this);
                }
    
                EmpCod = COB_BANC.EmpCod;
                BcoNum = COB_BANC.BcoNum;
                CobBancTipo = COB_BANC.CobBancTipo;
                CobBancRemNum = COB_BANC.CobBancRemNum;
                AgNum = COB_BANC.AgNum;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("COB_BANC")
                    && (ChangeTracker.OriginalValues["COB_BANC"] == COB_BANC))
                {
                    ChangeTracker.OriginalValues.Remove("COB_BANC");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("COB_BANC", previousValue);
                }
                if (COB_BANC != null && !COB_BANC.ChangeTracker.ChangeTrackingEnabled)
                {
                    COB_BANC.StartTracking();
                }
            }
        }
    
        private void FixupPARC_DOC_FIN(PARC_DOC_FIN previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ITEM_COB_BANC.Contains(this))
            {
                previousValue.ITEM_COB_BANC.Remove(this);
            }
    
            if (PARC_DOC_FIN != null)
            {
                if (!PARC_DOC_FIN.ITEM_COB_BANC.Contains(this))
                {
                    PARC_DOC_FIN.ITEM_COB_BANC.Add(this);
                }
    
                EmpCodParc = PARC_DOC_FIN.EmpCod;
                DocFinChv = PARC_DOC_FIN.DocFinChv;
                ParcDocFinSeq = PARC_DOC_FIN.ParcDocFinSeq;
                ParcDocFinDesmPag = PARC_DOC_FIN.ParcDocFinDesmPag;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("PARC_DOC_FIN")
                    && (ChangeTracker.OriginalValues["PARC_DOC_FIN"] == PARC_DOC_FIN))
                {
                    ChangeTracker.OriginalValues.Remove("PARC_DOC_FIN");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("PARC_DOC_FIN", previousValue);
                }
                if (PARC_DOC_FIN != null && !PARC_DOC_FIN.ChangeTracker.ChangeTrackingEnabled)
                {
                    PARC_DOC_FIN.StartTracking();
                }
            }
        }

        #endregion

    }
}

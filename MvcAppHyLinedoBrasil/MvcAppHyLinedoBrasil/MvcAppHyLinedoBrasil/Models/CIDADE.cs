//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHyLinedoBrasil.Models
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(CIDADE))]
    [KnownType(typeof(EMPRESA_FILIAL))]
    [KnownType(typeof(MOV_ESTQ))]
    [KnownType(typeof(ENTIDADE))]
    [KnownType(typeof(DOC_FIN))]
    [KnownType(typeof(PRODUTO1))]
    [KnownType(typeof(EQUIPAMENTO))]
    [KnownType(typeof(ENT_CONTATO))]
    public partial class CIDADE: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public string CidCod
        {
            get { return _cidCod; }
            set
            {
                if (_cidCod != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'CidCod' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _cidCod = value;
                    OnPropertyChanged("CidCod");
                }
            }
        }
        private string _cidCod;
    
        [DataMember]
        public string CidNome
        {
            get { return _cidNome; }
            set
            {
                if (_cidNome != value)
                {
                    _cidNome = value;
                    OnPropertyChanged("CidNome");
                }
            }
        }
        private string _cidNome;
    
        [DataMember]
        public string CidNomeComp
        {
            get { return _cidNomeComp; }
            set
            {
                if (_cidNomeComp != value)
                {
                    _cidNomeComp = value;
                    OnPropertyChanged("CidNomeComp");
                }
            }
        }
        private string _cidNomeComp;
    
        [DataMember]
        public string PaisSigla
        {
            get { return _paisSigla; }
            set
            {
                if (_paisSigla != value)
                {
                    _paisSigla = value;
                    OnPropertyChanged("PaisSigla");
                }
            }
        }
        private string _paisSigla;
    
        [DataMember]
        public string UfSigla
        {
            get { return _ufSigla; }
            set
            {
                if (_ufSigla != value)
                {
                    _ufSigla = value;
                    OnPropertyChanged("UfSigla");
                }
            }
        }
        private string _ufSigla;
    
        [DataMember]
        public string CidZonaFranca
        {
            get { return _cidZonaFranca; }
            set
            {
                if (_cidZonaFranca != value)
                {
                    _cidZonaFranca = value;
                    OnPropertyChanged("CidZonaFranca");
                }
            }
        }
        private string _cidZonaFranca;
    
        [DataMember]
        public Nullable<decimal> CidPercIss
        {
            get { return _cidPercIss; }
            set
            {
                if (_cidPercIss != value)
                {
                    _cidPercIss = value;
                    OnPropertyChanged("CidPercIss");
                }
            }
        }
        private Nullable<decimal> _cidPercIss;
    
        [DataMember]
        public string CidDDD
        {
            get { return _cidDDD; }
            set
            {
                if (_cidDDD != value)
                {
                    _cidDDD = value;
                    OnPropertyChanged("CidDDD");
                }
            }
        }
        private string _cidDDD;
    
        [DataMember]
        public string CidSiglaGDS
        {
            get { return _cidSiglaGDS; }
            set
            {
                if (_cidSiglaGDS != value)
                {
                    _cidSiglaGDS = value;
                    OnPropertyChanged("CidSiglaGDS");
                }
            }
        }
        private string _cidSiglaGDS;
    
        [DataMember]
        public string CidEntraPesqInternet
        {
            get { return _cidEntraPesqInternet; }
            set
            {
                if (_cidEntraPesqInternet != value)
                {
                    _cidEntraPesqInternet = value;
                    OnPropertyChanged("CidEntraPesqInternet");
                }
            }
        }
        private string _cidEntraPesqInternet;
    
        [DataMember]
        public string CidNatur
        {
            get { return _cidNatur; }
            set
            {
                if (_cidNatur != value)
                {
                    _cidNatur = value;
                    OnPropertyChanged("CidNatur");
                }
            }
        }
        private string _cidNatur;
    
        [DataMember]
        public string FxaCod
        {
            get { return _fxaCod; }
            set
            {
                if (_fxaCod != value)
                {
                    _fxaCod = value;
                    OnPropertyChanged("FxaCod");
                }
            }
        }
        private string _fxaCod;
    
        [DataMember]
        public string CidEntCodISS
        {
            get { return _cidEntCodISS; }
            set
            {
                if (_cidEntCodISS != value)
                {
                    ChangeTracker.RecordOriginalValue("CidEntCodISS", _cidEntCodISS);
                    if (!IsDeserializing)
                    {
                        if (ENTIDADE != null && ENTIDADE.EntCod != value)
                        {
                            ENTIDADE = null;
                        }
                    }
                    _cidEntCodISS = value;
                    OnPropertyChanged("CidEntCodISS");
                }
            }
        }
        private string _cidEntCodISS;
    
        [DataMember]
        public string TipoDiariaCod
        {
            get { return _tipoDiariaCod; }
            set
            {
                if (_tipoDiariaCod != value)
                {
                    _tipoDiariaCod = value;
                    OnPropertyChanged("TipoDiariaCod");
                }
            }
        }
        private string _tipoDiariaCod;
    
        [DataMember]
        public string CidCodMunGia
        {
            get { return _cidCodMunGia; }
            set
            {
                if (_cidCodMunGia != value)
                {
                    _cidCodMunGia = value;
                    OnPropertyChanged("CidCodMunGia");
                }
            }
        }
        private string _cidCodMunGia;
    
        [DataMember]
        public string CidCodMunZFMGia
        {
            get { return _cidCodMunZFMGia; }
            set
            {
                if (_cidCodMunZFMGia != value)
                {
                    _cidCodMunZFMGia = value;
                    OnPropertyChanged("CidCodMunZFMGia");
                }
            }
        }
        private string _cidCodMunZFMGia;
    
        [DataMember]
        public Nullable<int> CidCodMix
        {
            get { return _cidCodMix; }
            set
            {
                if (_cidCodMix != value)
                {
                    _cidCodMix = value;
                    OnPropertyChanged("CidCodMix");
                }
            }
        }
        private Nullable<int> _cidCodMix;
    
        [DataMember]
        public string CidCodRais
        {
            get { return _cidCodRais; }
            set
            {
                if (_cidCodRais != value)
                {
                    _cidCodRais = value;
                    OnPropertyChanged("CidCodRais");
                }
            }
        }
        private string _cidCodRais;
    
        [DataMember]
        public string CidDescEntraBaseCalcIss
        {
            get { return _cidDescEntraBaseCalcIss; }
            set
            {
                if (_cidDescEntraBaseCalcIss != value)
                {
                    _cidDescEntraBaseCalcIss = value;
                    OnPropertyChanged("CidDescEntraBaseCalcIss");
                }
            }
        }
        private string _cidDescEntraBaseCalcIss;
    
        [DataMember]
        public Nullable<decimal> CidValTetoRetIss
        {
            get { return _cidValTetoRetIss; }
            set
            {
                if (_cidValTetoRetIss != value)
                {
                    _cidValTetoRetIss = value;
                    OnPropertyChanged("CidValTetoRetIss");
                }
            }
        }
        private Nullable<decimal> _cidValTetoRetIss;
    
        [DataMember]
        public string cidtexto
        {
            get { return _cidtexto; }
            set
            {
                if (_cidtexto != value)
                {
                    _cidtexto = value;
                    OnPropertyChanged("cidtexto");
                }
            }
        }
        private string _cidtexto;
    
        [DataMember]
        public string CidPathRelGuiaRecIssRet
        {
            get { return _cidPathRelGuiaRecIssRet; }
            set
            {
                if (_cidPathRelGuiaRecIssRet != value)
                {
                    _cidPathRelGuiaRecIssRet = value;
                    OnPropertyChanged("CidPathRelGuiaRecIssRet");
                }
            }
        }
        private string _cidPathRelGuiaRecIssRet;
    
        [DataMember]
        public string RegCodEstr
        {
            get { return _regCodEstr; }
            set
            {
                if (_regCodEstr != value)
                {
                    _regCodEstr = value;
                    OnPropertyChanged("RegCodEstr");
                }
            }
        }
        private string _regCodEstr;
    
        [DataMember]
        public string CidCodMunDipj
        {
            get { return _cidCodMunDipj; }
            set
            {
                if (_cidCodMunDipj != value)
                {
                    _cidCodMunDipj = value;
                    OnPropertyChanged("CidCodMunDipj");
                }
            }
        }
        private string _cidCodMunDipj;
    
        [DataMember]
        public string CidAderenteSimples
        {
            get { return _cidAderenteSimples; }
            set
            {
                if (_cidAderenteSimples != value)
                {
                    _cidAderenteSimples = value;
                    OnPropertyChanged("CidAderenteSimples");
                }
            }
        }
        private string _cidAderenteSimples;
    
        [DataMember]
        public string CidISSIsenPrestServEntGovMun
        {
            get { return _cidISSIsenPrestServEntGovMun; }
            set
            {
                if (_cidISSIsenPrestServEntGovMun != value)
                {
                    _cidISSIsenPrestServEntGovMun = value;
                    OnPropertyChanged("CidISSIsenPrestServEntGovMun");
                }
            }
        }
        private string _cidISSIsenPrestServEntGovMun;
    
        [DataMember]
        public string CidCodAlt
        {
            get { return _cidCodAlt; }
            set
            {
                if (_cidCodAlt != value)
                {
                    _cidCodAlt = value;
                    OnPropertyChanged("CidCodAlt");
                }
            }
        }
        private string _cidCodAlt;
    
        [DataMember]
        public string CidRegExportado
        {
            get { return _cidRegExportado; }
            set
            {
                if (_cidRegExportado != value)
                {
                    _cidRegExportado = value;
                    OnPropertyChanged("CidRegExportado");
                }
            }
        }
        private string _cidRegExportado;
    
        [DataMember]
        public string CidCodSiafi
        {
            get { return _cidCodSiafi; }
            set
            {
                if (_cidCodSiafi != value)
                {
                    _cidCodSiafi = value;
                    OnPropertyChanged("CidCodSiafi");
                }
            }
        }
        private string _cidCodSiafi;
    
        [DataMember]
        public Nullable<short> CIDFUSOHOR
        {
            get { return _cIDFUSOHOR; }
            set
            {
                if (_cIDFUSOHOR != value)
                {
                    _cIDFUSOHOR = value;
                    OnPropertyChanged("CIDFUSOHOR");
                }
            }
        }
        private Nullable<short> _cIDFUSOHOR;
    
        [DataMember]
        public Nullable<int> CidTotHabit
        {
            get { return _cidTotHabit; }
            set
            {
                if (_cidTotHabit != value)
                {
                    _cidTotHabit = value;
                    OnPropertyChanged("CidTotHabit");
                }
            }
        }
        private Nullable<int> _cidTotHabit;
    
        [DataMember]
        public string UsuCod
        {
            get { return _usuCod; }
            set
            {
                if (_usuCod != value)
                {
                    _usuCod = value;
                    OnPropertyChanged("UsuCod");
                }
            }
        }
        private string _usuCod;
    
        [DataMember]
        public Nullable<int> CidQtdPontVenda
        {
            get { return _cidQtdPontVenda; }
            set
            {
                if (_cidQtdPontVenda != value)
                {
                    _cidQtdPontVenda = value;
                    OnPropertyChanged("CidQtdPontVenda");
                }
            }
        }
        private Nullable<int> _cidQtdPontVenda;
    
        [DataMember]
        public string CidCodMunRef
        {
            get { return _cidCodMunRef; }
            set
            {
                if (_cidCodMunRef != value)
                {
                    ChangeTracker.RecordOriginalValue("CidCodMunRef", _cidCodMunRef);
                    if (!IsDeserializing)
                    {
                        if (CIDADE2 != null && CIDADE2.CidCod != value)
                        {
                            CIDADE2 = null;
                        }
                    }
                    _cidCodMunRef = value;
                    OnPropertyChanged("CidCodMunRef");
                }
            }
        }
        private string _cidCodMunRef;
    
        [DataMember]
        public string USERBolsaoLT
        {
            get { return _uSERBolsaoLT; }
            set
            {
                if (_uSERBolsaoLT != value)
                {
                    _uSERBolsaoLT = value;
                    OnPropertyChanged("USERBolsaoLT");
                }
            }
        }
        private string _uSERBolsaoLT;
    
        [DataMember]
        public Nullable<System.DateTime> CidDtUltAtualiz
        {
            get { return _cidDtUltAtualiz; }
            set
            {
                if (_cidDtUltAtualiz != value)
                {
                    _cidDtUltAtualiz = value;
                    OnPropertyChanged("CidDtUltAtualiz");
                }
            }
        }
        private Nullable<System.DateTime> _cidDtUltAtualiz;
    
        [DataMember]
        public Nullable<decimal> CidLongitudeDecimal
        {
            get { return _cidLongitudeDecimal; }
            set
            {
                if (_cidLongitudeDecimal != value)
                {
                    _cidLongitudeDecimal = value;
                    OnPropertyChanged("CidLongitudeDecimal");
                }
            }
        }
        private Nullable<decimal> _cidLongitudeDecimal;
    
        [DataMember]
        public string CidLongitudePadrao
        {
            get { return _cidLongitudePadrao; }
            set
            {
                if (_cidLongitudePadrao != value)
                {
                    _cidLongitudePadrao = value;
                    OnPropertyChanged("CidLongitudePadrao");
                }
            }
        }
        private string _cidLongitudePadrao;
    
        [DataMember]
        public Nullable<decimal> CidLatitudeDecimal
        {
            get { return _cidLatitudeDecimal; }
            set
            {
                if (_cidLatitudeDecimal != value)
                {
                    _cidLatitudeDecimal = value;
                    OnPropertyChanged("CidLatitudeDecimal");
                }
            }
        }
        private Nullable<decimal> _cidLatitudeDecimal;
    
        [DataMember]
        public string CidLatitudePadrao
        {
            get { return _cidLatitudePadrao; }
            set
            {
                if (_cidLatitudePadrao != value)
                {
                    _cidLatitudePadrao = value;
                    OnPropertyChanged("CidLatitudePadrao");
                }
            }
        }
        private string _cidLatitudePadrao;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<CIDADE> CIDADE1
        {
            get
            {
                if (_cIDADE1 == null)
                {
                    _cIDADE1 = new TrackableCollection<CIDADE>();
                    _cIDADE1.CollectionChanged += FixupCIDADE1;
                }
                return _cIDADE1;
            }
            set
            {
                if (!ReferenceEquals(_cIDADE1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cIDADE1 != null)
                    {
                        _cIDADE1.CollectionChanged -= FixupCIDADE1;
                    }
                    _cIDADE1 = value;
                    if (_cIDADE1 != null)
                    {
                        _cIDADE1.CollectionChanged += FixupCIDADE1;
                    }
                    OnNavigationPropertyChanged("CIDADE1");
                }
            }
        }
        private TrackableCollection<CIDADE> _cIDADE1;
    
        [DataMember]
        public CIDADE CIDADE2
        {
            get { return _cIDADE2; }
            set
            {
                if (!ReferenceEquals(_cIDADE2, value))
                {
                    var previousValue = _cIDADE2;
                    _cIDADE2 = value;
                    FixupCIDADE2(previousValue);
                    OnNavigationPropertyChanged("CIDADE2");
                }
            }
        }
        private CIDADE _cIDADE2;
    
        [DataMember]
        public TrackableCollection<EMPRESA_FILIAL> EMPRESA_FILIAL
        {
            get
            {
                if (_eMPRESA_FILIAL == null)
                {
                    _eMPRESA_FILIAL = new TrackableCollection<EMPRESA_FILIAL>();
                    _eMPRESA_FILIAL.CollectionChanged += FixupEMPRESA_FILIAL;
                }
                return _eMPRESA_FILIAL;
            }
            set
            {
                if (!ReferenceEquals(_eMPRESA_FILIAL, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_eMPRESA_FILIAL != null)
                    {
                        _eMPRESA_FILIAL.CollectionChanged -= FixupEMPRESA_FILIAL;
                    }
                    _eMPRESA_FILIAL = value;
                    if (_eMPRESA_FILIAL != null)
                    {
                        _eMPRESA_FILIAL.CollectionChanged += FixupEMPRESA_FILIAL;
                    }
                    OnNavigationPropertyChanged("EMPRESA_FILIAL");
                }
            }
        }
        private TrackableCollection<EMPRESA_FILIAL> _eMPRESA_FILIAL;
    
        [DataMember]
        public TrackableCollection<MOV_ESTQ> MOV_ESTQ
        {
            get
            {
                if (_mOV_ESTQ == null)
                {
                    _mOV_ESTQ = new TrackableCollection<MOV_ESTQ>();
                    _mOV_ESTQ.CollectionChanged += FixupMOV_ESTQ;
                }
                return _mOV_ESTQ;
            }
            set
            {
                if (!ReferenceEquals(_mOV_ESTQ, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_mOV_ESTQ != null)
                    {
                        _mOV_ESTQ.CollectionChanged -= FixupMOV_ESTQ;
                    }
                    _mOV_ESTQ = value;
                    if (_mOV_ESTQ != null)
                    {
                        _mOV_ESTQ.CollectionChanged += FixupMOV_ESTQ;
                    }
                    OnNavigationPropertyChanged("MOV_ESTQ");
                }
            }
        }
        private TrackableCollection<MOV_ESTQ> _mOV_ESTQ;
    
        [DataMember]
        public TrackableCollection<MOV_ESTQ> MOV_ESTQ1
        {
            get
            {
                if (_mOV_ESTQ1 == null)
                {
                    _mOV_ESTQ1 = new TrackableCollection<MOV_ESTQ>();
                    _mOV_ESTQ1.CollectionChanged += FixupMOV_ESTQ1;
                }
                return _mOV_ESTQ1;
            }
            set
            {
                if (!ReferenceEquals(_mOV_ESTQ1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_mOV_ESTQ1 != null)
                    {
                        _mOV_ESTQ1.CollectionChanged -= FixupMOV_ESTQ1;
                    }
                    _mOV_ESTQ1 = value;
                    if (_mOV_ESTQ1 != null)
                    {
                        _mOV_ESTQ1.CollectionChanged += FixupMOV_ESTQ1;
                    }
                    OnNavigationPropertyChanged("MOV_ESTQ1");
                }
            }
        }
        private TrackableCollection<MOV_ESTQ> _mOV_ESTQ1;
    
        [DataMember]
        public ENTIDADE ENTIDADE
        {
            get { return _eNTIDADE; }
            set
            {
                if (!ReferenceEquals(_eNTIDADE, value))
                {
                    var previousValue = _eNTIDADE;
                    _eNTIDADE = value;
                    FixupENTIDADE(previousValue);
                    OnNavigationPropertyChanged("ENTIDADE");
                }
            }
        }
        private ENTIDADE _eNTIDADE;
    
        [DataMember]
        public TrackableCollection<ENTIDADE> ENTIDADE1
        {
            get
            {
                if (_eNTIDADE1 == null)
                {
                    _eNTIDADE1 = new TrackableCollection<ENTIDADE>();
                    _eNTIDADE1.CollectionChanged += FixupENTIDADE1;
                }
                return _eNTIDADE1;
            }
            set
            {
                if (!ReferenceEquals(_eNTIDADE1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_eNTIDADE1 != null)
                    {
                        _eNTIDADE1.CollectionChanged -= FixupENTIDADE1;
                    }
                    _eNTIDADE1 = value;
                    if (_eNTIDADE1 != null)
                    {
                        _eNTIDADE1.CollectionChanged += FixupENTIDADE1;
                    }
                    OnNavigationPropertyChanged("ENTIDADE1");
                }
            }
        }
        private TrackableCollection<ENTIDADE> _eNTIDADE1;
    
        [DataMember]
        public TrackableCollection<ENTIDADE> ENTIDADE2
        {
            get
            {
                if (_eNTIDADE2 == null)
                {
                    _eNTIDADE2 = new TrackableCollection<ENTIDADE>();
                    _eNTIDADE2.CollectionChanged += FixupENTIDADE2;
                }
                return _eNTIDADE2;
            }
            set
            {
                if (!ReferenceEquals(_eNTIDADE2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_eNTIDADE2 != null)
                    {
                        _eNTIDADE2.CollectionChanged -= FixupENTIDADE2;
                    }
                    _eNTIDADE2 = value;
                    if (_eNTIDADE2 != null)
                    {
                        _eNTIDADE2.CollectionChanged += FixupENTIDADE2;
                    }
                    OnNavigationPropertyChanged("ENTIDADE2");
                }
            }
        }
        private TrackableCollection<ENTIDADE> _eNTIDADE2;
    
        [DataMember]
        public TrackableCollection<DOC_FIN> DOC_FIN
        {
            get
            {
                if (_dOC_FIN == null)
                {
                    _dOC_FIN = new TrackableCollection<DOC_FIN>();
                    _dOC_FIN.CollectionChanged += FixupDOC_FIN;
                }
                return _dOC_FIN;
            }
            set
            {
                if (!ReferenceEquals(_dOC_FIN, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_dOC_FIN != null)
                    {
                        _dOC_FIN.CollectionChanged -= FixupDOC_FIN;
                    }
                    _dOC_FIN = value;
                    if (_dOC_FIN != null)
                    {
                        _dOC_FIN.CollectionChanged += FixupDOC_FIN;
                    }
                    OnNavigationPropertyChanged("DOC_FIN");
                }
            }
        }
        private TrackableCollection<DOC_FIN> _dOC_FIN;
    
        [DataMember]
        public TrackableCollection<DOC_FIN> DOC_FIN1
        {
            get
            {
                if (_dOC_FIN1 == null)
                {
                    _dOC_FIN1 = new TrackableCollection<DOC_FIN>();
                    _dOC_FIN1.CollectionChanged += FixupDOC_FIN1;
                }
                return _dOC_FIN1;
            }
            set
            {
                if (!ReferenceEquals(_dOC_FIN1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_dOC_FIN1 != null)
                    {
                        _dOC_FIN1.CollectionChanged -= FixupDOC_FIN1;
                    }
                    _dOC_FIN1 = value;
                    if (_dOC_FIN1 != null)
                    {
                        _dOC_FIN1.CollectionChanged += FixupDOC_FIN1;
                    }
                    OnNavigationPropertyChanged("DOC_FIN1");
                }
            }
        }
        private TrackableCollection<DOC_FIN> _dOC_FIN1;
    
        [DataMember]
        public TrackableCollection<DOC_FIN> DOC_FIN2
        {
            get
            {
                if (_dOC_FIN2 == null)
                {
                    _dOC_FIN2 = new TrackableCollection<DOC_FIN>();
                    _dOC_FIN2.CollectionChanged += FixupDOC_FIN2;
                }
                return _dOC_FIN2;
            }
            set
            {
                if (!ReferenceEquals(_dOC_FIN2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_dOC_FIN2 != null)
                    {
                        _dOC_FIN2.CollectionChanged -= FixupDOC_FIN2;
                    }
                    _dOC_FIN2 = value;
                    if (_dOC_FIN2 != null)
                    {
                        _dOC_FIN2.CollectionChanged += FixupDOC_FIN2;
                    }
                    OnNavigationPropertyChanged("DOC_FIN2");
                }
            }
        }
        private TrackableCollection<DOC_FIN> _dOC_FIN2;
    
        [DataMember]
        public TrackableCollection<MOV_ESTQ> MOV_ESTQ2
        {
            get
            {
                if (_mOV_ESTQ2 == null)
                {
                    _mOV_ESTQ2 = new TrackableCollection<MOV_ESTQ>();
                    _mOV_ESTQ2.CollectionChanged += FixupMOV_ESTQ2;
                }
                return _mOV_ESTQ2;
            }
            set
            {
                if (!ReferenceEquals(_mOV_ESTQ2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_mOV_ESTQ2 != null)
                    {
                        _mOV_ESTQ2.CollectionChanged -= FixupMOV_ESTQ2;
                    }
                    _mOV_ESTQ2 = value;
                    if (_mOV_ESTQ2 != null)
                    {
                        _mOV_ESTQ2.CollectionChanged += FixupMOV_ESTQ2;
                    }
                    OnNavigationPropertyChanged("MOV_ESTQ2");
                }
            }
        }
        private TrackableCollection<MOV_ESTQ> _mOV_ESTQ2;
    
        [DataMember]
        public TrackableCollection<MOV_ESTQ> MOV_ESTQ3
        {
            get
            {
                if (_mOV_ESTQ3 == null)
                {
                    _mOV_ESTQ3 = new TrackableCollection<MOV_ESTQ>();
                    _mOV_ESTQ3.CollectionChanged += FixupMOV_ESTQ3;
                }
                return _mOV_ESTQ3;
            }
            set
            {
                if (!ReferenceEquals(_mOV_ESTQ3, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_mOV_ESTQ3 != null)
                    {
                        _mOV_ESTQ3.CollectionChanged -= FixupMOV_ESTQ3;
                    }
                    _mOV_ESTQ3 = value;
                    if (_mOV_ESTQ3 != null)
                    {
                        _mOV_ESTQ3.CollectionChanged += FixupMOV_ESTQ3;
                    }
                    OnNavigationPropertyChanged("MOV_ESTQ3");
                }
            }
        }
        private TrackableCollection<MOV_ESTQ> _mOV_ESTQ3;
    
        [DataMember]
        public TrackableCollection<PRODUTO1> PRODUTO1
        {
            get
            {
                if (_pRODUTO1 == null)
                {
                    _pRODUTO1 = new TrackableCollection<PRODUTO1>();
                    _pRODUTO1.CollectionChanged += FixupPRODUTO1;
                }
                return _pRODUTO1;
            }
            set
            {
                if (!ReferenceEquals(_pRODUTO1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pRODUTO1 != null)
                    {
                        _pRODUTO1.CollectionChanged -= FixupPRODUTO1;
                    }
                    _pRODUTO1 = value;
                    if (_pRODUTO1 != null)
                    {
                        _pRODUTO1.CollectionChanged += FixupPRODUTO1;
                    }
                    OnNavigationPropertyChanged("PRODUTO1");
                }
            }
        }
        private TrackableCollection<PRODUTO1> _pRODUTO1;
    
        [DataMember]
        public TrackableCollection<EQUIPAMENTO> EQUIPAMENTO
        {
            get
            {
                if (_eQUIPAMENTO == null)
                {
                    _eQUIPAMENTO = new TrackableCollection<EQUIPAMENTO>();
                    _eQUIPAMENTO.CollectionChanged += FixupEQUIPAMENTO;
                }
                return _eQUIPAMENTO;
            }
            set
            {
                if (!ReferenceEquals(_eQUIPAMENTO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_eQUIPAMENTO != null)
                    {
                        _eQUIPAMENTO.CollectionChanged -= FixupEQUIPAMENTO;
                    }
                    _eQUIPAMENTO = value;
                    if (_eQUIPAMENTO != null)
                    {
                        _eQUIPAMENTO.CollectionChanged += FixupEQUIPAMENTO;
                    }
                    OnNavigationPropertyChanged("EQUIPAMENTO");
                }
            }
        }
        private TrackableCollection<EQUIPAMENTO> _eQUIPAMENTO;
    
        [DataMember]
        public TrackableCollection<EQUIPAMENTO> EQUIPAMENTO1
        {
            get
            {
                if (_eQUIPAMENTO1 == null)
                {
                    _eQUIPAMENTO1 = new TrackableCollection<EQUIPAMENTO>();
                    _eQUIPAMENTO1.CollectionChanged += FixupEQUIPAMENTO1;
                }
                return _eQUIPAMENTO1;
            }
            set
            {
                if (!ReferenceEquals(_eQUIPAMENTO1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_eQUIPAMENTO1 != null)
                    {
                        _eQUIPAMENTO1.CollectionChanged -= FixupEQUIPAMENTO1;
                    }
                    _eQUIPAMENTO1 = value;
                    if (_eQUIPAMENTO1 != null)
                    {
                        _eQUIPAMENTO1.CollectionChanged += FixupEQUIPAMENTO1;
                    }
                    OnNavigationPropertyChanged("EQUIPAMENTO1");
                }
            }
        }
        private TrackableCollection<EQUIPAMENTO> _eQUIPAMENTO1;
    
        [DataMember]
        public TrackableCollection<ENT_CONTATO> ENT_CONTATO
        {
            get
            {
                if (_eNT_CONTATO == null)
                {
                    _eNT_CONTATO = new TrackableCollection<ENT_CONTATO>();
                    _eNT_CONTATO.CollectionChanged += FixupENT_CONTATO;
                }
                return _eNT_CONTATO;
            }
            set
            {
                if (!ReferenceEquals(_eNT_CONTATO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_eNT_CONTATO != null)
                    {
                        _eNT_CONTATO.CollectionChanged -= FixupENT_CONTATO;
                    }
                    _eNT_CONTATO = value;
                    if (_eNT_CONTATO != null)
                    {
                        _eNT_CONTATO.CollectionChanged += FixupENT_CONTATO;
                    }
                    OnNavigationPropertyChanged("ENT_CONTATO");
                }
            }
        }
        private TrackableCollection<ENT_CONTATO> _eNT_CONTATO;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            CIDADE1.Clear();
            CIDADE2 = null;
            EMPRESA_FILIAL.Clear();
            MOV_ESTQ.Clear();
            MOV_ESTQ1.Clear();
            ENTIDADE = null;
            ENTIDADE1.Clear();
            ENTIDADE2.Clear();
            DOC_FIN.Clear();
            DOC_FIN1.Clear();
            DOC_FIN2.Clear();
            MOV_ESTQ2.Clear();
            MOV_ESTQ3.Clear();
            PRODUTO1.Clear();
            EQUIPAMENTO.Clear();
            EQUIPAMENTO1.Clear();
            ENT_CONTATO.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupCIDADE2(CIDADE previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CIDADE1.Contains(this))
            {
                previousValue.CIDADE1.Remove(this);
            }
    
            if (CIDADE2 != null)
            {
                if (!CIDADE2.CIDADE1.Contains(this))
                {
                    CIDADE2.CIDADE1.Add(this);
                }
    
                CidCodMunRef = CIDADE2.CidCod;
            }
            else if (!skipKeys)
            {
                CidCodMunRef = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("CIDADE2")
                    && (ChangeTracker.OriginalValues["CIDADE2"] == CIDADE2))
                {
                    ChangeTracker.OriginalValues.Remove("CIDADE2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("CIDADE2", previousValue);
                }
                if (CIDADE2 != null && !CIDADE2.ChangeTracker.ChangeTrackingEnabled)
                {
                    CIDADE2.StartTracking();
                }
            }
        }
    
        private void FixupENTIDADE(ENTIDADE previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CIDADE.Contains(this))
            {
                previousValue.CIDADE.Remove(this);
            }
    
            if (ENTIDADE != null)
            {
                if (!ENTIDADE.CIDADE.Contains(this))
                {
                    ENTIDADE.CIDADE.Add(this);
                }
    
                CidEntCodISS = ENTIDADE.EntCod;
            }
            else if (!skipKeys)
            {
                CidEntCodISS = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ENTIDADE")
                    && (ChangeTracker.OriginalValues["ENTIDADE"] == ENTIDADE))
                {
                    ChangeTracker.OriginalValues.Remove("ENTIDADE");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ENTIDADE", previousValue);
                }
                if (ENTIDADE != null && !ENTIDADE.ChangeTracker.ChangeTrackingEnabled)
                {
                    ENTIDADE.StartTracking();
                }
            }
        }
    
        private void FixupCIDADE1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CIDADE item in e.NewItems)
                {
                    item.CIDADE2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CIDADE1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CIDADE item in e.OldItems)
                {
                    if (ReferenceEquals(item.CIDADE2, this))
                    {
                        item.CIDADE2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CIDADE1", item);
                    }
                }
            }
        }
    
        private void FixupEMPRESA_FILIAL(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (EMPRESA_FILIAL item in e.NewItems)
                {
                    item.CIDADE = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("EMPRESA_FILIAL", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EMPRESA_FILIAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.CIDADE, this))
                    {
                        item.CIDADE = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("EMPRESA_FILIAL", item);
                    }
                }
            }
        }
    
        private void FixupMOV_ESTQ(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (MOV_ESTQ item in e.NewItems)
                {
                    item.CIDADE = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("MOV_ESTQ", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MOV_ESTQ item in e.OldItems)
                {
                    if (ReferenceEquals(item.CIDADE, this))
                    {
                        item.CIDADE = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("MOV_ESTQ", item);
                    }
                }
            }
        }
    
        private void FixupMOV_ESTQ1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (MOV_ESTQ item in e.NewItems)
                {
                    item.CIDADE1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("MOV_ESTQ1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MOV_ESTQ item in e.OldItems)
                {
                    if (ReferenceEquals(item.CIDADE1, this))
                    {
                        item.CIDADE1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("MOV_ESTQ1", item);
                    }
                }
            }
        }
    
        private void FixupENTIDADE1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ENTIDADE item in e.NewItems)
                {
                    item.CIDADE1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ENTIDADE1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ENTIDADE item in e.OldItems)
                {
                    if (ReferenceEquals(item.CIDADE1, this))
                    {
                        item.CIDADE1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ENTIDADE1", item);
                    }
                }
            }
        }
    
        private void FixupENTIDADE2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ENTIDADE item in e.NewItems)
                {
                    item.CIDADE2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ENTIDADE2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ENTIDADE item in e.OldItems)
                {
                    if (ReferenceEquals(item.CIDADE2, this))
                    {
                        item.CIDADE2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ENTIDADE2", item);
                    }
                }
            }
        }
    
        private void FixupDOC_FIN(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DOC_FIN item in e.NewItems)
                {
                    item.CIDADE = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DOC_FIN", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DOC_FIN item in e.OldItems)
                {
                    if (ReferenceEquals(item.CIDADE, this))
                    {
                        item.CIDADE = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DOC_FIN", item);
                    }
                }
            }
        }
    
        private void FixupDOC_FIN1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DOC_FIN item in e.NewItems)
                {
                    item.CIDADE1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DOC_FIN1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DOC_FIN item in e.OldItems)
                {
                    if (ReferenceEquals(item.CIDADE1, this))
                    {
                        item.CIDADE1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DOC_FIN1", item);
                    }
                }
            }
        }
    
        private void FixupDOC_FIN2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DOC_FIN item in e.NewItems)
                {
                    item.CIDADE2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DOC_FIN2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DOC_FIN item in e.OldItems)
                {
                    if (ReferenceEquals(item.CIDADE2, this))
                    {
                        item.CIDADE2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DOC_FIN2", item);
                    }
                }
            }
        }
    
        private void FixupMOV_ESTQ2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (MOV_ESTQ item in e.NewItems)
                {
                    item.CIDADE2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("MOV_ESTQ2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MOV_ESTQ item in e.OldItems)
                {
                    if (ReferenceEquals(item.CIDADE2, this))
                    {
                        item.CIDADE2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("MOV_ESTQ2", item);
                    }
                }
            }
        }
    
        private void FixupMOV_ESTQ3(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (MOV_ESTQ item in e.NewItems)
                {
                    item.CIDADE3 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("MOV_ESTQ3", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MOV_ESTQ item in e.OldItems)
                {
                    if (ReferenceEquals(item.CIDADE3, this))
                    {
                        item.CIDADE3 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("MOV_ESTQ3", item);
                    }
                }
            }
        }
    
        private void FixupPRODUTO1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PRODUTO1 item in e.NewItems)
                {
                    item.CIDADE = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PRODUTO1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PRODUTO1 item in e.OldItems)
                {
                    if (ReferenceEquals(item.CIDADE, this))
                    {
                        item.CIDADE = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PRODUTO1", item);
                    }
                }
            }
        }
    
        private void FixupEQUIPAMENTO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (EQUIPAMENTO item in e.NewItems)
                {
                    item.CIDADE = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("EQUIPAMENTO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EQUIPAMENTO item in e.OldItems)
                {
                    if (ReferenceEquals(item.CIDADE, this))
                    {
                        item.CIDADE = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("EQUIPAMENTO", item);
                    }
                }
            }
        }
    
        private void FixupEQUIPAMENTO1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (EQUIPAMENTO item in e.NewItems)
                {
                    item.CIDADE1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("EQUIPAMENTO1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EQUIPAMENTO item in e.OldItems)
                {
                    if (ReferenceEquals(item.CIDADE1, this))
                    {
                        item.CIDADE1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("EQUIPAMENTO1", item);
                    }
                }
            }
        }
    
        private void FixupENT_CONTATO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ENT_CONTATO item in e.NewItems)
                {
                    item.CIDADE = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ENT_CONTATO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ENT_CONTATO item in e.OldItems)
                {
                    if (ReferenceEquals(item.CIDADE, this))
                    {
                        item.CIDADE = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ENT_CONTATO", item);
                    }
                }
            }
        }

        #endregion

    }
}

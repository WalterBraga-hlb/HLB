//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHyLinedoBrasil.Models
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(CLAS_FISCAL_AUX))]
    [KnownType(typeof(DOC_FIN))]
    [KnownType(typeof(MOV_ESTQ))]
    [KnownType(typeof(NAT_OPERACAO))]
    [KnownType(typeof(ITEM_MOV_ESTQ))]
    public partial class NAT_OPERACAO: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public string NatOpCodEstr
        {
            get { return _natOpCodEstr; }
            set
            {
                if (_natOpCodEstr != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'NatOpCodEstr' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _natOpCodEstr = value;
                    OnPropertyChanged("NatOpCodEstr");
                }
            }
        }
        private string _natOpCodEstr;
    
        [DataMember]
        public string NatOpNome
        {
            get { return _natOpNome; }
            set
            {
                if (_natOpNome != value)
                {
                    _natOpNome = value;
                    OnPropertyChanged("NatOpNome");
                }
            }
        }
        private string _natOpNome;
    
        [DataMember]
        public string NatOpCodEstrNiv
        {
            get { return _natOpCodEstrNiv; }
            set
            {
                if (_natOpCodEstrNiv != value)
                {
                    _natOpCodEstrNiv = value;
                    OnPropertyChanged("NatOpCodEstrNiv");
                }
            }
        }
        private string _natOpCodEstrNiv;
    
        [DataMember]
        public string NatOpGrupo
        {
            get { return _natOpGrupo; }
            set
            {
                if (_natOpGrupo != value)
                {
                    _natOpGrupo = value;
                    OnPropertyChanged("NatOpGrupo");
                }
            }
        }
        private string _natOpGrupo;
    
        [DataMember]
        public string TipoLancCod
        {
            get { return _tipoLancCod; }
            set
            {
                if (_tipoLancCod != value)
                {
                    _tipoLancCod = value;
                    OnPropertyChanged("TipoLancCod");
                }
            }
        }
        private string _tipoLancCod;
    
        [DataMember]
        public string NatOpNecLibFat
        {
            get { return _natOpNecLibFat; }
            set
            {
                if (_natOpNecLibFat != value)
                {
                    _natOpNecLibFat = value;
                    OnPropertyChanged("NatOpNecLibFat");
                }
            }
        }
        private string _natOpNecLibFat;
    
        [DataMember]
        public string NatOpConsidQtdMinFat
        {
            get { return _natOpConsidQtdMinFat; }
            set
            {
                if (_natOpConsidQtdMinFat != value)
                {
                    _natOpConsidQtdMinFat = value;
                    OnPropertyChanged("NatOpConsidQtdMinFat");
                }
            }
        }
        private string _natOpConsidQtdMinFat;
    
        [DataMember]
        public string NatOpIcmsIss
        {
            get { return _natOpIcmsIss; }
            set
            {
                if (_natOpIcmsIss != value)
                {
                    _natOpIcmsIss = value;
                    OnPropertyChanged("NatOpIcmsIss");
                }
            }
        }
        private string _natOpIcmsIss;
    
        [DataMember]
        public string NatOpCodEstrFisc
        {
            get { return _natOpCodEstrFisc; }
            set
            {
                if (_natOpCodEstrFisc != value)
                {
                    ChangeTracker.RecordOriginalValue("NatOpCodEstrFisc", _natOpCodEstrFisc);
                    if (!IsDeserializing)
                    {
                        if (NAT_OPERACAO2 != null && NAT_OPERACAO2.NatOpCodEstr != value)
                        {
                            NAT_OPERACAO2 = null;
                        }
                    }
                    _natOpCodEstrFisc = value;
                    OnPropertyChanged("NatOpCodEstrFisc");
                }
            }
        }
        private string _natOpCodEstrFisc;
    
        [DataMember]
        public string NatOpIncideCofins
        {
            get { return _natOpIncideCofins; }
            set
            {
                if (_natOpIncideCofins != value)
                {
                    _natOpIncideCofins = value;
                    OnPropertyChanged("NatOpIncideCofins");
                }
            }
        }
        private string _natOpIncideCofins;
    
        [DataMember]
        public string NatOpIncidePis
        {
            get { return _natOpIncidePis; }
            set
            {
                if (_natOpIncidePis != value)
                {
                    _natOpIncidePis = value;
                    OnPropertyChanged("NatOpIncidePis");
                }
            }
        }
        private string _natOpIncidePis;
    
        [DataMember]
        public string TribBCod
        {
            get { return _tribBCod; }
            set
            {
                if (_tribBCod != value)
                {
                    _tribBCod = value;
                    OnPropertyChanged("TribBCod");
                }
            }
        }
        private string _tribBCod;
    
        [DataMember]
        public string NatOpCfopSubst
        {
            get { return _natOpCfopSubst; }
            set
            {
                if (_natOpCfopSubst != value)
                {
                    _natOpCfopSubst = value;
                    OnPropertyChanged("NatOpCfopSubst");
                }
            }
        }
        private string _natOpCfopSubst;
    
        [DataMember]
        public Nullable<System.DateTime> NatOpDataValidInic
        {
            get { return _natOpDataValidInic; }
            set
            {
                if (_natOpDataValidInic != value)
                {
                    _natOpDataValidInic = value;
                    OnPropertyChanged("NatOpDataValidInic");
                }
            }
        }
        private Nullable<System.DateTime> _natOpDataValidInic;
    
        [DataMember]
        public Nullable<System.DateTime> NatOpDataValidFim
        {
            get { return _natOpDataValidFim; }
            set
            {
                if (_natOpDataValidFim != value)
                {
                    _natOpDataValidFim = value;
                    OnPropertyChanged("NatOpDataValidFim");
                }
            }
        }
        private Nullable<System.DateTime> _natOpDataValidFim;
    
        [DataMember]
        public string NatOpIpiSit
        {
            get { return _natOpIpiSit; }
            set
            {
                if (_natOpIpiSit != value)
                {
                    _natOpIpiSit = value;
                    OnPropertyChanged("NatOpIpiSit");
                }
            }
        }
        private string _natOpIpiSit;
    
        [DataMember]
        public string NatOpIpiMensCod1
        {
            get { return _natOpIpiMensCod1; }
            set
            {
                if (_natOpIpiMensCod1 != value)
                {
                    _natOpIpiMensCod1 = value;
                    OnPropertyChanged("NatOpIpiMensCod1");
                }
            }
        }
        private string _natOpIpiMensCod1;
    
        [DataMember]
        public string NatOpIpiMensCod1NF
        {
            get { return _natOpIpiMensCod1NF; }
            set
            {
                if (_natOpIpiMensCod1NF != value)
                {
                    _natOpIpiMensCod1NF = value;
                    OnPropertyChanged("NatOpIpiMensCod1NF");
                }
            }
        }
        private string _natOpIpiMensCod1NF;
    
        [DataMember]
        public string NatOpIpiMensCod1Livro
        {
            get { return _natOpIpiMensCod1Livro; }
            set
            {
                if (_natOpIpiMensCod1Livro != value)
                {
                    _natOpIpiMensCod1Livro = value;
                    OnPropertyChanged("NatOpIpiMensCod1Livro");
                }
            }
        }
        private string _natOpIpiMensCod1Livro;
    
        [DataMember]
        public string NatOpIpiMensCod2
        {
            get { return _natOpIpiMensCod2; }
            set
            {
                if (_natOpIpiMensCod2 != value)
                {
                    _natOpIpiMensCod2 = value;
                    OnPropertyChanged("NatOpIpiMensCod2");
                }
            }
        }
        private string _natOpIpiMensCod2;
    
        [DataMember]
        public string NatOpIpiMensCod2NF
        {
            get { return _natOpIpiMensCod2NF; }
            set
            {
                if (_natOpIpiMensCod2NF != value)
                {
                    _natOpIpiMensCod2NF = value;
                    OnPropertyChanged("NatOpIpiMensCod2NF");
                }
            }
        }
        private string _natOpIpiMensCod2NF;
    
        [DataMember]
        public string NatOpIpiMensCod2Livro
        {
            get { return _natOpIpiMensCod2Livro; }
            set
            {
                if (_natOpIpiMensCod2Livro != value)
                {
                    _natOpIpiMensCod2Livro = value;
                    OnPropertyChanged("NatOpIpiMensCod2Livro");
                }
            }
        }
        private string _natOpIpiMensCod2Livro;
    
        [DataMember]
        public string NatOpIcmsMensCod1
        {
            get { return _natOpIcmsMensCod1; }
            set
            {
                if (_natOpIcmsMensCod1 != value)
                {
                    _natOpIcmsMensCod1 = value;
                    OnPropertyChanged("NatOpIcmsMensCod1");
                }
            }
        }
        private string _natOpIcmsMensCod1;
    
        [DataMember]
        public string NatOpIcmsMensCod1NF
        {
            get { return _natOpIcmsMensCod1NF; }
            set
            {
                if (_natOpIcmsMensCod1NF != value)
                {
                    _natOpIcmsMensCod1NF = value;
                    OnPropertyChanged("NatOpIcmsMensCod1NF");
                }
            }
        }
        private string _natOpIcmsMensCod1NF;
    
        [DataMember]
        public string NatOpIcmsMensCod1Livro
        {
            get { return _natOpIcmsMensCod1Livro; }
            set
            {
                if (_natOpIcmsMensCod1Livro != value)
                {
                    _natOpIcmsMensCod1Livro = value;
                    OnPropertyChanged("NatOpIcmsMensCod1Livro");
                }
            }
        }
        private string _natOpIcmsMensCod1Livro;
    
        [DataMember]
        public string NatOpIcmsMensCod2
        {
            get { return _natOpIcmsMensCod2; }
            set
            {
                if (_natOpIcmsMensCod2 != value)
                {
                    _natOpIcmsMensCod2 = value;
                    OnPropertyChanged("NatOpIcmsMensCod2");
                }
            }
        }
        private string _natOpIcmsMensCod2;
    
        [DataMember]
        public string NatOpIcmsMensCod2NF
        {
            get { return _natOpIcmsMensCod2NF; }
            set
            {
                if (_natOpIcmsMensCod2NF != value)
                {
                    _natOpIcmsMensCod2NF = value;
                    OnPropertyChanged("NatOpIcmsMensCod2NF");
                }
            }
        }
        private string _natOpIcmsMensCod2NF;
    
        [DataMember]
        public string NatOpIcmsMensCod2Livro
        {
            get { return _natOpIcmsMensCod2Livro; }
            set
            {
                if (_natOpIcmsMensCod2Livro != value)
                {
                    _natOpIcmsMensCod2Livro = value;
                    OnPropertyChanged("NatOpIcmsMensCod2Livro");
                }
            }
        }
        private string _natOpIcmsMensCod2Livro;
    
        [DataMember]
        public string NatOpTipoLancCodVenda
        {
            get { return _natOpTipoLancCodVenda; }
            set
            {
                if (_natOpTipoLancCodVenda != value)
                {
                    _natOpTipoLancCodVenda = value;
                    OnPropertyChanged("NatOpTipoLancCodVenda");
                }
            }
        }
        private string _natOpTipoLancCodVenda;
    
        [DataMember]
        public string NatOpUsaRotNatOpDefClasFisc
        {
            get { return _natOpUsaRotNatOpDefClasFisc; }
            set
            {
                if (_natOpUsaRotNatOpDefClasFisc != value)
                {
                    _natOpUsaRotNatOpDefClasFisc = value;
                    OnPropertyChanged("NatOpUsaRotNatOpDefClasFisc");
                }
            }
        }
        private string _natOpUsaRotNatOpDefClasFisc;
    
        [DataMember]
        public Nullable<short> NatOpQtdCaracLinhaProd
        {
            get { return _natOpQtdCaracLinhaProd; }
            set
            {
                if (_natOpQtdCaracLinhaProd != value)
                {
                    _natOpQtdCaracLinhaProd = value;
                    OnPropertyChanged("NatOpQtdCaracLinhaProd");
                }
            }
        }
        private Nullable<short> _natOpQtdCaracLinhaProd;
    
        [DataMember]
        public Nullable<short> NatOpQtdCaracLinhaServ
        {
            get { return _natOpQtdCaracLinhaServ; }
            set
            {
                if (_natOpQtdCaracLinhaServ != value)
                {
                    _natOpQtdCaracLinhaServ = value;
                    OnPropertyChanged("NatOpQtdCaracLinhaServ");
                }
            }
        }
        private Nullable<short> _natOpQtdCaracLinhaServ;
    
        [DataMember]
        public string NatOpIcmsIncluso
        {
            get { return _natOpIcmsIncluso; }
            set
            {
                if (_natOpIcmsIncluso != value)
                {
                    _natOpIcmsIncluso = value;
                    OnPropertyChanged("NatOpIcmsIncluso");
                }
            }
        }
        private string _natOpIcmsIncluso;
    
        [DataMember]
        public string NatOpPisIncluso
        {
            get { return _natOpPisIncluso; }
            set
            {
                if (_natOpPisIncluso != value)
                {
                    _natOpPisIncluso = value;
                    OnPropertyChanged("NatOpPisIncluso");
                }
            }
        }
        private string _natOpPisIncluso;
    
        [DataMember]
        public string NatOpCofinsIncluso
        {
            get { return _natOpCofinsIncluso; }
            set
            {
                if (_natOpCofinsIncluso != value)
                {
                    _natOpCofinsIncluso = value;
                    OnPropertyChanged("NatOpCofinsIncluso");
                }
            }
        }
        private string _natOpCofinsIncluso;
    
        [DataMember]
        public string NatOpIssIncluso
        {
            get { return _natOpIssIncluso; }
            set
            {
                if (_natOpIssIncluso != value)
                {
                    _natOpIssIncluso = value;
                    OnPropertyChanged("NatOpIssIncluso");
                }
            }
        }
        private string _natOpIssIncluso;
    
        [DataMember]
        public string NatOpIpiIncluso
        {
            get { return _natOpIpiIncluso; }
            set
            {
                if (_natOpIpiIncluso != value)
                {
                    _natOpIpiIncluso = value;
                    OnPropertyChanged("NatOpIpiIncluso");
                }
            }
        }
        private string _natOpIpiIncluso;
    
        [DataMember]
        public string NatOpVerImpIncluso
        {
            get { return _natOpVerImpIncluso; }
            set
            {
                if (_natOpVerImpIncluso != value)
                {
                    _natOpVerImpIncluso = value;
                    OnPropertyChanged("NatOpVerImpIncluso");
                }
            }
        }
        private string _natOpVerImpIncluso;
    
        [DataMember]
        public string NatOpEntraRelVenda
        {
            get { return _natOpEntraRelVenda; }
            set
            {
                if (_natOpEntraRelVenda != value)
                {
                    _natOpEntraRelVenda = value;
                    OnPropertyChanged("NatOpEntraRelVenda");
                }
            }
        }
        private string _natOpEntraRelVenda;
    
        [DataMember]
        public string AplicCodEstr
        {
            get { return _aplicCodEstr; }
            set
            {
                if (_aplicCodEstr != value)
                {
                    _aplicCodEstr = value;
                    OnPropertyChanged("AplicCodEstr");
                }
            }
        }
        private string _aplicCodEstr;
    
        [DataMember]
        public string NatOpAtualizaInformProd
        {
            get { return _natOpAtualizaInformProd; }
            set
            {
                if (_natOpAtualizaInformProd != value)
                {
                    _natOpAtualizaInformProd = value;
                    OnPropertyChanged("NatOpAtualizaInformProd");
                }
            }
        }
        private string _natOpAtualizaInformProd;
    
        [DataMember]
        public string NatOpNomeCompl
        {
            get { return _natOpNomeCompl; }
            set
            {
                if (_natOpNomeCompl != value)
                {
                    _natOpNomeCompl = value;
                    OnPropertyChanged("NatOpNomeCompl");
                }
            }
        }
        private string _natOpNomeCompl;
    
        [DataMember]
        public string NatOpUsaCtrlAtendPed
        {
            get { return _natOpUsaCtrlAtendPed; }
            set
            {
                if (_natOpUsaCtrlAtendPed != value)
                {
                    _natOpUsaCtrlAtendPed = value;
                    OnPropertyChanged("NatOpUsaCtrlAtendPed");
                }
            }
        }
        private string _natOpUsaCtrlAtendPed;
    
        [DataMember]
        public string NatOpCodEstrCfps
        {
            get { return _natOpCodEstrCfps; }
            set
            {
                if (_natOpCodEstrCfps != value)
                {
                    _natOpCodEstrCfps = value;
                    OnPropertyChanged("NatOpCodEstrCfps");
                }
            }
        }
        private string _natOpCodEstrCfps;
    
        [DataMember]
        public string NatOpDocConjugado
        {
            get { return _natOpDocConjugado; }
            set
            {
                if (_natOpDocConjugado != value)
                {
                    _natOpDocConjugado = value;
                    OnPropertyChanged("NatOpDocConjugado");
                }
            }
        }
        private string _natOpDocConjugado;
    
        [DataMember]
        public string NatOpRetOSLab
        {
            get { return _natOpRetOSLab; }
            set
            {
                if (_natOpRetOSLab != value)
                {
                    _natOpRetOSLab = value;
                    OnPropertyChanged("NatOpRetOSLab");
                }
            }
        }
        private string _natOpRetOSLab;
    
        [DataMember]
        public string NatOpCobOSLab
        {
            get { return _natOpCobOSLab; }
            set
            {
                if (_natOpCobOSLab != value)
                {
                    _natOpCobOSLab = value;
                    OnPropertyChanged("NatOpCobOSLab");
                }
            }
        }
        private string _natOpCobOSLab;
    
        [DataMember]
        public string NatOpCodAnp
        {
            get { return _natOpCodAnp; }
            set
            {
                if (_natOpCodAnp != value)
                {
                    _natOpCodAnp = value;
                    OnPropertyChanged("NatOpCodAnp");
                }
            }
        }
        private string _natOpCodAnp;
    
        [DataMember]
        public string NatOpObrigCodif
        {
            get { return _natOpObrigCodif; }
            set
            {
                if (_natOpObrigCodif != value)
                {
                    _natOpObrigCodif = value;
                    OnPropertyChanged("NatOpObrigCodif");
                }
            }
        }
        private string _natOpObrigCodif;
    
        [DataMember]
        public string NatOpExpDadosCodContab
        {
            get { return _natOpExpDadosCodContab; }
            set
            {
                if (_natOpExpDadosCodContab != value)
                {
                    _natOpExpDadosCodContab = value;
                    OnPropertyChanged("NatOpExpDadosCodContab");
                }
            }
        }
        private string _natOpExpDadosCodContab;
    
        [DataMember]
        public string NatOpConcatCNPJDescrIt
        {
            get { return _natOpConcatCNPJDescrIt; }
            set
            {
                if (_natOpConcatCNPJDescrIt != value)
                {
                    _natOpConcatCNPJDescrIt = value;
                    OnPropertyChanged("NatOpConcatCNPJDescrIt");
                }
            }
        }
        private string _natOpConcatCNPJDescrIt;
    
        [DataMember]
        public string NatOpConfTribTipoIpi
        {
            get { return _natOpConfTribTipoIpi; }
            set
            {
                if (_natOpConfTribTipoIpi != value)
                {
                    _natOpConfTribTipoIpi = value;
                    OnPropertyChanged("NatOpConfTribTipoIpi");
                }
            }
        }
        private string _natOpConfTribTipoIpi;
    
        [DataMember]
        public string NatOpConfTribTipoPis
        {
            get { return _natOpConfTribTipoPis; }
            set
            {
                if (_natOpConfTribTipoPis != value)
                {
                    _natOpConfTribTipoPis = value;
                    OnPropertyChanged("NatOpConfTribTipoPis");
                }
            }
        }
        private string _natOpConfTribTipoPis;
    
        [DataMember]
        public string NatOpConfTribTipoCofins
        {
            get { return _natOpConfTribTipoCofins; }
            set
            {
                if (_natOpConfTribTipoCofins != value)
                {
                    _natOpConfTribTipoCofins = value;
                    OnPropertyChanged("NatOpConfTribTipoCofins");
                }
            }
        }
        private string _natOpConfTribTipoCofins;
    
        [DataMember]
        public string NatOpConfTribIpiCod
        {
            get { return _natOpConfTribIpiCod; }
            set
            {
                if (_natOpConfTribIpiCod != value)
                {
                    _natOpConfTribIpiCod = value;
                    OnPropertyChanged("NatOpConfTribIpiCod");
                }
            }
        }
        private string _natOpConfTribIpiCod;
    
        [DataMember]
        public string NatOpConfTribPisCod
        {
            get { return _natOpConfTribPisCod; }
            set
            {
                if (_natOpConfTribPisCod != value)
                {
                    _natOpConfTribPisCod = value;
                    OnPropertyChanged("NatOpConfTribPisCod");
                }
            }
        }
        private string _natOpConfTribPisCod;
    
        [DataMember]
        public string NatOpConfTribCofinsCod
        {
            get { return _natOpConfTribCofinsCod; }
            set
            {
                if (_natOpConfTribCofinsCod != value)
                {
                    _natOpConfTribCofinsCod = value;
                    OnPropertyChanged("NatOpConfTribCofinsCod");
                }
            }
        }
        private string _natOpConfTribCofinsCod;
    
        [DataMember]
        public string NATOPESCALACRESC
        {
            get { return _nATOPESCALACRESC; }
            set
            {
                if (_nATOPESCALACRESC != value)
                {
                    _nATOPESCALACRESC = value;
                    OnPropertyChanged("NATOPESCALACRESC");
                }
            }
        }
        private string _nATOPESCALACRESC;
    
        [DataMember]
        public string NatOpCalcTaxaManuseio
        {
            get { return _natOpCalcTaxaManuseio; }
            set
            {
                if (_natOpCalcTaxaManuseio != value)
                {
                    _natOpCalcTaxaManuseio = value;
                    OnPropertyChanged("NatOpCalcTaxaManuseio");
                }
            }
        }
        private string _natOpCalcTaxaManuseio;
    
        [DataMember]
        public string NatOpUsaCtrlExpedPedVenda
        {
            get { return _natOpUsaCtrlExpedPedVenda; }
            set
            {
                if (_natOpUsaCtrlExpedPedVenda != value)
                {
                    _natOpUsaCtrlExpedPedVenda = value;
                    OnPropertyChanged("NatOpUsaCtrlExpedPedVenda");
                }
            }
        }
        private string _natOpUsaCtrlExpedPedVenda;
    
        [DataMember]
        public string ConfTribSimpNacCod
        {
            get { return _confTribSimpNacCod; }
            set
            {
                if (_confTribSimpNacCod != value)
                {
                    _confTribSimpNacCod = value;
                    OnPropertyChanged("ConfTribSimpNacCod");
                }
            }
        }
        private string _confTribSimpNacCod;
    
        [DataMember]
        public string NatOpAtualObjMeta
        {
            get { return _natOpAtualObjMeta; }
            set
            {
                if (_natOpAtualObjMeta != value)
                {
                    _natOpAtualObjMeta = value;
                    OnPropertyChanged("NatOpAtualObjMeta");
                }
            }
        }
        private string _natOpAtualObjMeta;
    
        [DataMember]
        public string NatOpDestMensCredSimpNac
        {
            get { return _natOpDestMensCredSimpNac; }
            set
            {
                if (_natOpDestMensCredSimpNac != value)
                {
                    _natOpDestMensCredSimpNac = value;
                    OnPropertyChanged("NatOpDestMensCredSimpNac");
                }
            }
        }
        private string _natOpDestMensCredSimpNac;
    
        [DataMember]
        public string NatOpDaeGnrePagar
        {
            get { return _natOpDaeGnrePagar; }
            set
            {
                if (_natOpDaeGnrePagar != value)
                {
                    _natOpDaeGnrePagar = value;
                    OnPropertyChanged("NatOpDaeGnrePagar");
                }
            }
        }
        private string _natOpDaeGnrePagar;
    
        [DataMember]
        public string NatOpCalcMargLucAjust
        {
            get { return _natOpCalcMargLucAjust; }
            set
            {
                if (_natOpCalcMargLucAjust != value)
                {
                    _natOpCalcMargLucAjust = value;
                    OnPropertyChanged("NatOpCalcMargLucAjust");
                }
            }
        }
        private string _natOpCalcMargLucAjust;
    
        [DataMember]
        public string GrpFatCod
        {
            get { return _grpFatCod; }
            set
            {
                if (_grpFatCod != value)
                {
                    _grpFatCod = value;
                    OnPropertyChanged("GrpFatCod");
                }
            }
        }
        private string _grpFatCod;
    
        [DataMember]
        public string NatOpExigeMotBonificacao
        {
            get { return _natOpExigeMotBonificacao; }
            set
            {
                if (_natOpExigeMotBonificacao != value)
                {
                    _natOpExigeMotBonificacao = value;
                    OnPropertyChanged("NatOpExigeMotBonificacao");
                }
            }
        }
        private string _natOpExigeMotBonificacao;
    
        [DataMember]
        public string EFDBaseCalcCredCod
        {
            get { return _eFDBaseCalcCredCod; }
            set
            {
                if (_eFDBaseCalcCredCod != value)
                {
                    _eFDBaseCalcCredCod = value;
                    OnPropertyChanged("EFDBaseCalcCredCod");
                }
            }
        }
        private string _eFDBaseCalcCredCod;
    
        [DataMember]
        public string NatOpCalcFatorMensal
        {
            get { return _natOpCalcFatorMensal; }
            set
            {
                if (_natOpCalcFatorMensal != value)
                {
                    _natOpCalcFatorMensal = value;
                    OnPropertyChanged("NatOpCalcFatorMensal");
                }
            }
        }
        private string _natOpCalcFatorMensal;
    
        [DataMember]
        public string NatOpDeduzIPIValorContab
        {
            get { return _natOpDeduzIPIValorContab; }
            set
            {
                if (_natOpDeduzIPIValorContab != value)
                {
                    _natOpDeduzIPIValorContab = value;
                    OnPropertyChanged("NatOpDeduzIPIValorContab");
                }
            }
        }
        private string _natOpDeduzIPIValorContab;
    
        [DataMember]
        public string NatOpDeduzSTValorContab
        {
            get { return _natOpDeduzSTValorContab; }
            set
            {
                if (_natOpDeduzSTValorContab != value)
                {
                    _natOpDeduzSTValorContab = value;
                    OnPropertyChanged("NatOpDeduzSTValorContab");
                }
            }
        }
        private string _natOpDeduzSTValorContab;
    
        [DataMember]
        public string NatOpTribICMSEnfDecl
        {
            get { return _natOpTribICMSEnfDecl; }
            set
            {
                if (_natOpTribICMSEnfDecl != value)
                {
                    _natOpTribICMSEnfDecl = value;
                    OnPropertyChanged("NatOpTribICMSEnfDecl");
                }
            }
        }
        private string _natOpTribICMSEnfDecl;
    
        [DataMember]
        public string NatOpDesonICMS
        {
            get { return _natOpDesonICMS; }
            set
            {
                if (_natOpDesonICMS != value)
                {
                    _natOpDesonICMS = value;
                    OnPropertyChanged("NatOpDesonICMS");
                }
            }
        }
        private string _natOpDesonICMS;
    
        [DataMember]
        public string NatOpEntraAcordo
        {
            get { return _natOpEntraAcordo; }
            set
            {
                if (_natOpEntraAcordo != value)
                {
                    _natOpEntraAcordo = value;
                    OnPropertyChanged("NatOpEntraAcordo");
                }
            }
        }
        private string _natOpEntraAcordo;
    
        [DataMember]
        public string NatOpIntegCat1582015
        {
            get { return _natOpIntegCat1582015; }
            set
            {
                if (_natOpIntegCat1582015 != value)
                {
                    _natOpIntegCat1582015 = value;
                    OnPropertyChanged("NatOpIntegCat1582015");
                }
            }
        }
        private string _natOpIntegCat1582015;
    
        [DataMember]
        public string NatOpAgrupPedMovSimb
        {
            get { return _natOpAgrupPedMovSimb; }
            set
            {
                if (_natOpAgrupPedMovSimb != value)
                {
                    _natOpAgrupPedMovSimb = value;
                    OnPropertyChanged("NatOpAgrupPedMovSimb");
                }
            }
        }
        private string _natOpAgrupPedMovSimb;
    
        [DataMember]
        public string NatOpStatFreteVenda
        {
            get { return _natOpStatFreteVenda; }
            set
            {
                if (_natOpStatFreteVenda != value)
                {
                    _natOpStatFreteVenda = value;
                    OnPropertyChanged("NatOpStatFreteVenda");
                }
            }
        }
        private string _natOpStatFreteVenda;
    
        [DataMember]
        public string MotEnqLegIPICod
        {
            get { return _motEnqLegIPICod; }
            set
            {
                if (_motEnqLegIPICod != value)
                {
                    _motEnqLegIPICod = value;
                    OnPropertyChanged("MotEnqLegIPICod");
                }
            }
        }
        private string _motEnqLegIPICod;
    
        [DataMember]
        public string NatOpCEST
        {
            get { return _natOpCEST; }
            set
            {
                if (_natOpCEST != value)
                {
                    _natOpCEST = value;
                    OnPropertyChanged("NatOpCEST");
                }
            }
        }
        private string _natOpCEST;
    
        [DataMember]
        public string NatOpRestricAimRsVrCont
        {
            get { return _natOpRestricAimRsVrCont; }
            set
            {
                if (_natOpRestricAimRsVrCont != value)
                {
                    _natOpRestricAimRsVrCont = value;
                    OnPropertyChanged("NatOpRestricAimRsVrCont");
                }
            }
        }
        private string _natOpRestricAimRsVrCont;
    
        [DataMember]
        public string NatOpRestricAimRsIsentas
        {
            get { return _natOpRestricAimRsIsentas; }
            set
            {
                if (_natOpRestricAimRsIsentas != value)
                {
                    _natOpRestricAimRsIsentas = value;
                    OnPropertyChanged("NatOpRestricAimRsIsentas");
                }
            }
        }
        private string _natOpRestricAimRsIsentas;
    
        [DataMember]
        public string NatOpRestricAimRsImportExcl
        {
            get { return _natOpRestricAimRsImportExcl; }
            set
            {
                if (_natOpRestricAimRsImportExcl != value)
                {
                    _natOpRestricAimRsImportExcl = value;
                    OnPropertyChanged("NatOpRestricAimRsImportExcl");
                }
            }
        }
        private string _natOpRestricAimRsImportExcl;
    
        [DataMember]
        public string NatOpRestricAimRsBaseCalc
        {
            get { return _natOpRestricAimRsBaseCalc; }
            set
            {
                if (_natOpRestricAimRsBaseCalc != value)
                {
                    _natOpRestricAimRsBaseCalc = value;
                    OnPropertyChanged("NatOpRestricAimRsBaseCalc");
                }
            }
        }
        private string _natOpRestricAimRsBaseCalc;
    
        [DataMember]
        public string NatOpRestricAimRsOutras
        {
            get { return _natOpRestricAimRsOutras; }
            set
            {
                if (_natOpRestricAimRsOutras != value)
                {
                    _natOpRestricAimRsOutras = value;
                    OnPropertyChanged("NatOpRestricAimRsOutras");
                }
            }
        }
        private string _natOpRestricAimRsOutras;
    
        [DataMember]
        public Nullable<System.DateTime> NatOpDtUltAtualiz
        {
            get { return _natOpDtUltAtualiz; }
            set
            {
                if (_natOpDtUltAtualiz != value)
                {
                    _natOpDtUltAtualiz = value;
                    OnPropertyChanged("NatOpDtUltAtualiz");
                }
            }
        }
        private Nullable<System.DateTime> _natOpDtUltAtualiz;
    
        [DataMember]
        public string NatOpOperacao
        {
            get { return _natOpOperacao; }
            set
            {
                if (_natOpOperacao != value)
                {
                    _natOpOperacao = value;
                    OnPropertyChanged("NatOpOperacao");
                }
            }
        }
        private string _natOpOperacao;
    
        [DataMember]
        public string NatOpNaturezaST
        {
            get { return _natOpNaturezaST; }
            set
            {
                if (_natOpNaturezaST != value)
                {
                    _natOpNaturezaST = value;
                    OnPropertyChanged("NatOpNaturezaST");
                }
            }
        }
        private string _natOpNaturezaST;
    
        [DataMember]
        public string NatOperDIPAM
        {
            get { return _natOperDIPAM; }
            set
            {
                if (_natOperDIPAM != value)
                {
                    _natOperDIPAM = value;
                    OnPropertyChanged("NatOperDIPAM");
                }
            }
        }
        private string _natOperDIPAM;
    
        [DataMember]
        public string NatOperCategArqMag
        {
            get { return _natOperCategArqMag; }
            set
            {
                if (_natOperCategArqMag != value)
                {
                    _natOperCategArqMag = value;
                    OnPropertyChanged("NatOperCategArqMag");
                }
            }
        }
        private string _natOperCategArqMag;
    
        [DataMember]
        public string NatOperObrigFCI
        {
            get { return _natOperObrigFCI; }
            set
            {
                if (_natOperObrigFCI != value)
                {
                    _natOperObrigFCI = value;
                    OnPropertyChanged("NatOperObrigFCI");
                }
            }
        }
        private string _natOperObrigFCI;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<CLAS_FISCAL_AUX> CLAS_FISCAL_AUX
        {
            get
            {
                if (_cLAS_FISCAL_AUX == null)
                {
                    _cLAS_FISCAL_AUX = new TrackableCollection<CLAS_FISCAL_AUX>();
                    _cLAS_FISCAL_AUX.CollectionChanged += FixupCLAS_FISCAL_AUX;
                }
                return _cLAS_FISCAL_AUX;
            }
            set
            {
                if (!ReferenceEquals(_cLAS_FISCAL_AUX, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cLAS_FISCAL_AUX != null)
                    {
                        _cLAS_FISCAL_AUX.CollectionChanged -= FixupCLAS_FISCAL_AUX;
                    }
                    _cLAS_FISCAL_AUX = value;
                    if (_cLAS_FISCAL_AUX != null)
                    {
                        _cLAS_FISCAL_AUX.CollectionChanged += FixupCLAS_FISCAL_AUX;
                    }
                    OnNavigationPropertyChanged("CLAS_FISCAL_AUX");
                }
            }
        }
        private TrackableCollection<CLAS_FISCAL_AUX> _cLAS_FISCAL_AUX;
    
        [DataMember]
        public TrackableCollection<CLAS_FISCAL_AUX> CLAS_FISCAL_AUX1
        {
            get
            {
                if (_cLAS_FISCAL_AUX1 == null)
                {
                    _cLAS_FISCAL_AUX1 = new TrackableCollection<CLAS_FISCAL_AUX>();
                    _cLAS_FISCAL_AUX1.CollectionChanged += FixupCLAS_FISCAL_AUX1;
                }
                return _cLAS_FISCAL_AUX1;
            }
            set
            {
                if (!ReferenceEquals(_cLAS_FISCAL_AUX1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cLAS_FISCAL_AUX1 != null)
                    {
                        _cLAS_FISCAL_AUX1.CollectionChanged -= FixupCLAS_FISCAL_AUX1;
                    }
                    _cLAS_FISCAL_AUX1 = value;
                    if (_cLAS_FISCAL_AUX1 != null)
                    {
                        _cLAS_FISCAL_AUX1.CollectionChanged += FixupCLAS_FISCAL_AUX1;
                    }
                    OnNavigationPropertyChanged("CLAS_FISCAL_AUX1");
                }
            }
        }
        private TrackableCollection<CLAS_FISCAL_AUX> _cLAS_FISCAL_AUX1;
    
        [DataMember]
        public TrackableCollection<CLAS_FISCAL_AUX> CLAS_FISCAL_AUX2
        {
            get
            {
                if (_cLAS_FISCAL_AUX2 == null)
                {
                    _cLAS_FISCAL_AUX2 = new TrackableCollection<CLAS_FISCAL_AUX>();
                    _cLAS_FISCAL_AUX2.CollectionChanged += FixupCLAS_FISCAL_AUX2;
                }
                return _cLAS_FISCAL_AUX2;
            }
            set
            {
                if (!ReferenceEquals(_cLAS_FISCAL_AUX2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cLAS_FISCAL_AUX2 != null)
                    {
                        _cLAS_FISCAL_AUX2.CollectionChanged -= FixupCLAS_FISCAL_AUX2;
                    }
                    _cLAS_FISCAL_AUX2 = value;
                    if (_cLAS_FISCAL_AUX2 != null)
                    {
                        _cLAS_FISCAL_AUX2.CollectionChanged += FixupCLAS_FISCAL_AUX2;
                    }
                    OnNavigationPropertyChanged("CLAS_FISCAL_AUX2");
                }
            }
        }
        private TrackableCollection<CLAS_FISCAL_AUX> _cLAS_FISCAL_AUX2;
    
        [DataMember]
        public TrackableCollection<CLAS_FISCAL_AUX> CLAS_FISCAL_AUX3
        {
            get
            {
                if (_cLAS_FISCAL_AUX3 == null)
                {
                    _cLAS_FISCAL_AUX3 = new TrackableCollection<CLAS_FISCAL_AUX>();
                    _cLAS_FISCAL_AUX3.CollectionChanged += FixupCLAS_FISCAL_AUX3;
                }
                return _cLAS_FISCAL_AUX3;
            }
            set
            {
                if (!ReferenceEquals(_cLAS_FISCAL_AUX3, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cLAS_FISCAL_AUX3 != null)
                    {
                        _cLAS_FISCAL_AUX3.CollectionChanged -= FixupCLAS_FISCAL_AUX3;
                    }
                    _cLAS_FISCAL_AUX3 = value;
                    if (_cLAS_FISCAL_AUX3 != null)
                    {
                        _cLAS_FISCAL_AUX3.CollectionChanged += FixupCLAS_FISCAL_AUX3;
                    }
                    OnNavigationPropertyChanged("CLAS_FISCAL_AUX3");
                }
            }
        }
        private TrackableCollection<CLAS_FISCAL_AUX> _cLAS_FISCAL_AUX3;
    
        [DataMember]
        public TrackableCollection<DOC_FIN> DOC_FIN
        {
            get
            {
                if (_dOC_FIN == null)
                {
                    _dOC_FIN = new TrackableCollection<DOC_FIN>();
                    _dOC_FIN.CollectionChanged += FixupDOC_FIN;
                }
                return _dOC_FIN;
            }
            set
            {
                if (!ReferenceEquals(_dOC_FIN, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_dOC_FIN != null)
                    {
                        _dOC_FIN.CollectionChanged -= FixupDOC_FIN;
                    }
                    _dOC_FIN = value;
                    if (_dOC_FIN != null)
                    {
                        _dOC_FIN.CollectionChanged += FixupDOC_FIN;
                    }
                    OnNavigationPropertyChanged("DOC_FIN");
                }
            }
        }
        private TrackableCollection<DOC_FIN> _dOC_FIN;
    
        [DataMember]
        public TrackableCollection<MOV_ESTQ> MOV_ESTQ
        {
            get
            {
                if (_mOV_ESTQ == null)
                {
                    _mOV_ESTQ = new TrackableCollection<MOV_ESTQ>();
                    _mOV_ESTQ.CollectionChanged += FixupMOV_ESTQ;
                }
                return _mOV_ESTQ;
            }
            set
            {
                if (!ReferenceEquals(_mOV_ESTQ, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_mOV_ESTQ != null)
                    {
                        _mOV_ESTQ.CollectionChanged -= FixupMOV_ESTQ;
                    }
                    _mOV_ESTQ = value;
                    if (_mOV_ESTQ != null)
                    {
                        _mOV_ESTQ.CollectionChanged += FixupMOV_ESTQ;
                    }
                    OnNavigationPropertyChanged("MOV_ESTQ");
                }
            }
        }
        private TrackableCollection<MOV_ESTQ> _mOV_ESTQ;
    
        [DataMember]
        public TrackableCollection<NAT_OPERACAO> NAT_OPERACAO1
        {
            get
            {
                if (_nAT_OPERACAO1 == null)
                {
                    _nAT_OPERACAO1 = new TrackableCollection<NAT_OPERACAO>();
                    _nAT_OPERACAO1.CollectionChanged += FixupNAT_OPERACAO1;
                }
                return _nAT_OPERACAO1;
            }
            set
            {
                if (!ReferenceEquals(_nAT_OPERACAO1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_nAT_OPERACAO1 != null)
                    {
                        _nAT_OPERACAO1.CollectionChanged -= FixupNAT_OPERACAO1;
                    }
                    _nAT_OPERACAO1 = value;
                    if (_nAT_OPERACAO1 != null)
                    {
                        _nAT_OPERACAO1.CollectionChanged += FixupNAT_OPERACAO1;
                    }
                    OnNavigationPropertyChanged("NAT_OPERACAO1");
                }
            }
        }
        private TrackableCollection<NAT_OPERACAO> _nAT_OPERACAO1;
    
        [DataMember]
        public NAT_OPERACAO NAT_OPERACAO2
        {
            get { return _nAT_OPERACAO2; }
            set
            {
                if (!ReferenceEquals(_nAT_OPERACAO2, value))
                {
                    var previousValue = _nAT_OPERACAO2;
                    _nAT_OPERACAO2 = value;
                    FixupNAT_OPERACAO2(previousValue);
                    OnNavigationPropertyChanged("NAT_OPERACAO2");
                }
            }
        }
        private NAT_OPERACAO _nAT_OPERACAO2;
    
        [DataMember]
        public TrackableCollection<ITEM_MOV_ESTQ> ITEM_MOV_ESTQ
        {
            get
            {
                if (_iTEM_MOV_ESTQ == null)
                {
                    _iTEM_MOV_ESTQ = new TrackableCollection<ITEM_MOV_ESTQ>();
                    _iTEM_MOV_ESTQ.CollectionChanged += FixupITEM_MOV_ESTQ;
                }
                return _iTEM_MOV_ESTQ;
            }
            set
            {
                if (!ReferenceEquals(_iTEM_MOV_ESTQ, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_iTEM_MOV_ESTQ != null)
                    {
                        _iTEM_MOV_ESTQ.CollectionChanged -= FixupITEM_MOV_ESTQ;
                    }
                    _iTEM_MOV_ESTQ = value;
                    if (_iTEM_MOV_ESTQ != null)
                    {
                        _iTEM_MOV_ESTQ.CollectionChanged += FixupITEM_MOV_ESTQ;
                    }
                    OnNavigationPropertyChanged("ITEM_MOV_ESTQ");
                }
            }
        }
        private TrackableCollection<ITEM_MOV_ESTQ> _iTEM_MOV_ESTQ;
    
        [DataMember]
        public TrackableCollection<ITEM_MOV_ESTQ> ITEM_MOV_ESTQ1
        {
            get
            {
                if (_iTEM_MOV_ESTQ1 == null)
                {
                    _iTEM_MOV_ESTQ1 = new TrackableCollection<ITEM_MOV_ESTQ>();
                    _iTEM_MOV_ESTQ1.CollectionChanged += FixupITEM_MOV_ESTQ1;
                }
                return _iTEM_MOV_ESTQ1;
            }
            set
            {
                if (!ReferenceEquals(_iTEM_MOV_ESTQ1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_iTEM_MOV_ESTQ1 != null)
                    {
                        _iTEM_MOV_ESTQ1.CollectionChanged -= FixupITEM_MOV_ESTQ1;
                    }
                    _iTEM_MOV_ESTQ1 = value;
                    if (_iTEM_MOV_ESTQ1 != null)
                    {
                        _iTEM_MOV_ESTQ1.CollectionChanged += FixupITEM_MOV_ESTQ1;
                    }
                    OnNavigationPropertyChanged("ITEM_MOV_ESTQ1");
                }
            }
        }
        private TrackableCollection<ITEM_MOV_ESTQ> _iTEM_MOV_ESTQ1;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            CLAS_FISCAL_AUX.Clear();
            CLAS_FISCAL_AUX1.Clear();
            CLAS_FISCAL_AUX2.Clear();
            CLAS_FISCAL_AUX3.Clear();
            DOC_FIN.Clear();
            MOV_ESTQ.Clear();
            NAT_OPERACAO1.Clear();
            NAT_OPERACAO2 = null;
            ITEM_MOV_ESTQ.Clear();
            ITEM_MOV_ESTQ1.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupNAT_OPERACAO2(NAT_OPERACAO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.NAT_OPERACAO1.Contains(this))
            {
                previousValue.NAT_OPERACAO1.Remove(this);
            }
    
            if (NAT_OPERACAO2 != null)
            {
                if (!NAT_OPERACAO2.NAT_OPERACAO1.Contains(this))
                {
                    NAT_OPERACAO2.NAT_OPERACAO1.Add(this);
                }
    
                NatOpCodEstrFisc = NAT_OPERACAO2.NatOpCodEstr;
            }
            else if (!skipKeys)
            {
                NatOpCodEstrFisc = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("NAT_OPERACAO2")
                    && (ChangeTracker.OriginalValues["NAT_OPERACAO2"] == NAT_OPERACAO2))
                {
                    ChangeTracker.OriginalValues.Remove("NAT_OPERACAO2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("NAT_OPERACAO2", previousValue);
                }
                if (NAT_OPERACAO2 != null && !NAT_OPERACAO2.ChangeTracker.ChangeTrackingEnabled)
                {
                    NAT_OPERACAO2.StartTracking();
                }
            }
        }
    
        private void FixupCLAS_FISCAL_AUX(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CLAS_FISCAL_AUX item in e.NewItems)
                {
                    item.NAT_OPERACAO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CLAS_FISCAL_AUX", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CLAS_FISCAL_AUX item in e.OldItems)
                {
                    if (ReferenceEquals(item.NAT_OPERACAO, this))
                    {
                        item.NAT_OPERACAO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CLAS_FISCAL_AUX", item);
                    }
                }
            }
        }
    
        private void FixupCLAS_FISCAL_AUX1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CLAS_FISCAL_AUX item in e.NewItems)
                {
                    item.NAT_OPERACAO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CLAS_FISCAL_AUX1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CLAS_FISCAL_AUX item in e.OldItems)
                {
                    if (ReferenceEquals(item.NAT_OPERACAO1, this))
                    {
                        item.NAT_OPERACAO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CLAS_FISCAL_AUX1", item);
                    }
                }
            }
        }
    
        private void FixupCLAS_FISCAL_AUX2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CLAS_FISCAL_AUX item in e.NewItems)
                {
                    item.NAT_OPERACAO2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CLAS_FISCAL_AUX2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CLAS_FISCAL_AUX item in e.OldItems)
                {
                    if (ReferenceEquals(item.NAT_OPERACAO2, this))
                    {
                        item.NAT_OPERACAO2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CLAS_FISCAL_AUX2", item);
                    }
                }
            }
        }
    
        private void FixupCLAS_FISCAL_AUX3(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CLAS_FISCAL_AUX item in e.NewItems)
                {
                    item.NAT_OPERACAO3 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CLAS_FISCAL_AUX3", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CLAS_FISCAL_AUX item in e.OldItems)
                {
                    if (ReferenceEquals(item.NAT_OPERACAO3, this))
                    {
                        item.NAT_OPERACAO3 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CLAS_FISCAL_AUX3", item);
                    }
                }
            }
        }
    
        private void FixupDOC_FIN(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DOC_FIN item in e.NewItems)
                {
                    item.NAT_OPERACAO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DOC_FIN", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DOC_FIN item in e.OldItems)
                {
                    if (ReferenceEquals(item.NAT_OPERACAO, this))
                    {
                        item.NAT_OPERACAO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DOC_FIN", item);
                    }
                }
            }
        }
    
        private void FixupMOV_ESTQ(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (MOV_ESTQ item in e.NewItems)
                {
                    item.NAT_OPERACAO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("MOV_ESTQ", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MOV_ESTQ item in e.OldItems)
                {
                    if (ReferenceEquals(item.NAT_OPERACAO, this))
                    {
                        item.NAT_OPERACAO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("MOV_ESTQ", item);
                    }
                }
            }
        }
    
        private void FixupNAT_OPERACAO1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NAT_OPERACAO item in e.NewItems)
                {
                    item.NAT_OPERACAO2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NAT_OPERACAO1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NAT_OPERACAO item in e.OldItems)
                {
                    if (ReferenceEquals(item.NAT_OPERACAO2, this))
                    {
                        item.NAT_OPERACAO2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NAT_OPERACAO1", item);
                    }
                }
            }
        }
    
        private void FixupITEM_MOV_ESTQ(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ITEM_MOV_ESTQ item in e.NewItems)
                {
                    item.NAT_OPERACAO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ITEM_MOV_ESTQ", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ITEM_MOV_ESTQ item in e.OldItems)
                {
                    if (ReferenceEquals(item.NAT_OPERACAO, this))
                    {
                        item.NAT_OPERACAO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ITEM_MOV_ESTQ", item);
                    }
                }
            }
        }
    
        private void FixupITEM_MOV_ESTQ1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ITEM_MOV_ESTQ item in e.NewItems)
                {
                    item.NAT_OPERACAO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ITEM_MOV_ESTQ1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ITEM_MOV_ESTQ item in e.OldItems)
                {
                    if (ReferenceEquals(item.NAT_OPERACAO1, this))
                    {
                        item.NAT_OPERACAO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ITEM_MOV_ESTQ1", item);
                    }
                }
            }
        }

        #endregion

    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHyLinedoBrasil.Models.DiarioProducaoRacao
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(OPER_ORD_PRODUC))]
    [KnownType(typeof(ORD_PRODUC))]
    [KnownType(typeof(ITEM_REQ_MAT))]
    [KnownType(typeof(REQ_MAT))]
    [KnownType(typeof(ESTQ_LOC_ARMAZ))]
    [KnownType(typeof(LOC_ARMAZ))]
    public partial class LOC_ARMAZ: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public string LocArmazCodEstr
        {
            get { return _locArmazCodEstr; }
            set
            {
                if (_locArmazCodEstr != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'LocArmazCodEstr' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _locArmazCodEstr = value;
                    OnPropertyChanged("LocArmazCodEstr");
                }
            }
        }
        private string _locArmazCodEstr;
    
        [DataMember]
        public string LocArmazNome
        {
            get { return _locArmazNome; }
            set
            {
                if (_locArmazNome != value)
                {
                    _locArmazNome = value;
                    OnPropertyChanged("LocArmazNome");
                }
            }
        }
        private string _locArmazNome;
    
        [DataMember]
        public string LocArmazCodEstrNiv
        {
            get { return _locArmazCodEstrNiv; }
            set
            {
                if (_locArmazCodEstrNiv != value)
                {
                    _locArmazCodEstrNiv = value;
                    OnPropertyChanged("LocArmazCodEstrNiv");
                }
            }
        }
        private string _locArmazCodEstrNiv;
    
        [DataMember]
        public string LocArmazGrupo
        {
            get { return _locArmazGrupo; }
            set
            {
                if (_locArmazGrupo != value)
                {
                    _locArmazGrupo = value;
                    OnPropertyChanged("LocArmazGrupo");
                }
            }
        }
        private string _locArmazGrupo;
    
        [DataMember]
        public string LocArmazCodRed
        {
            get { return _locArmazCodRed; }
            set
            {
                if (_locArmazCodRed != value)
                {
                    _locArmazCodRed = value;
                    OnPropertyChanged("LocArmazCodRed");
                }
            }
        }
        private string _locArmazCodRed;
    
        [DataMember]
        public string LocArmazCodAlt
        {
            get { return _locArmazCodAlt; }
            set
            {
                if (_locArmazCodAlt != value)
                {
                    _locArmazCodAlt = value;
                    OnPropertyChanged("LocArmazCodAlt");
                }
            }
        }
        private string _locArmazCodAlt;
    
        [DataMember]
        public string LocArmazStat
        {
            get { return _locArmazStat; }
            set
            {
                if (_locArmazStat != value)
                {
                    _locArmazStat = value;
                    OnPropertyChanged("LocArmazStat");
                }
            }
        }
        private string _locArmazStat;
    
        [DataMember]
        public string LocArmazRelatorio
        {
            get { return _locArmazRelatorio; }
            set
            {
                if (_locArmazRelatorio != value)
                {
                    _locArmazRelatorio = value;
                    OnPropertyChanged("LocArmazRelatorio");
                }
            }
        }
        private string _locArmazRelatorio;
    
        [DataMember]
        public string LocArmazInservivel
        {
            get { return _locArmazInservivel; }
            set
            {
                if (_locArmazInservivel != value)
                {
                    _locArmazInservivel = value;
                    OnPropertyChanged("LocArmazInservivel");
                }
            }
        }
        private string _locArmazInservivel;
    
        [DataMember]
        public Nullable<System.DateTime> LocArmazUltDataMod
        {
            get { return _locArmazUltDataMod; }
            set
            {
                if (_locArmazUltDataMod != value)
                {
                    _locArmazUltDataMod = value;
                    OnPropertyChanged("LocArmazUltDataMod");
                }
            }
        }
        private Nullable<System.DateTime> _locArmazUltDataMod;
    
        [DataMember]
        public string LocArmazPermiteRepasse
        {
            get { return _locArmazPermiteRepasse; }
            set
            {
                if (_locArmazPermiteRepasse != value)
                {
                    _locArmazPermiteRepasse = value;
                    OnPropertyChanged("LocArmazPermiteRepasse");
                }
            }
        }
        private string _locArmazPermiteRepasse;
    
        [DataMember]
        public string USERCodigoFLIP
        {
            get { return _uSERCodigoFLIP; }
            set
            {
                if (_uSERCodigoFLIP != value)
                {
                    _uSERCodigoFLIP = value;
                    OnPropertyChanged("USERCodigoFLIP");
                }
            }
        }
        private string _uSERCodigoFLIP;
    
        [DataMember]
        public string USERGeracaoFLIP
        {
            get { return _uSERGeracaoFLIP; }
            set
            {
                if (_uSERGeracaoFLIP != value)
                {
                    _uSERGeracaoFLIP = value;
                    OnPropertyChanged("USERGeracaoFLIP");
                }
            }
        }
        private string _uSERGeracaoFLIP;
    
        [DataMember]
        public string USERLocalEstoqueIncub
        {
            get { return _uSERLocalEstoqueIncub; }
            set
            {
                if (_uSERLocalEstoqueIncub != value)
                {
                    _uSERLocalEstoqueIncub = value;
                    OnPropertyChanged("USERLocalEstoqueIncub");
                }
            }
        }
        private string _uSERLocalEstoqueIncub;
    
        [DataMember]
        public string USERTipoLancSaidaAjuste
        {
            get { return _uSERTipoLancSaidaAjuste; }
            set
            {
                if (_uSERTipoLancSaidaAjuste != value)
                {
                    _uSERTipoLancSaidaAjuste = value;
                    OnPropertyChanged("USERTipoLancSaidaAjuste");
                }
            }
        }
        private string _uSERTipoLancSaidaAjuste;
    
        [DataMember]
        public string USERTipoLancSaidaCom
        {
            get { return _uSERTipoLancSaidaCom; }
            set
            {
                if (_uSERTipoLancSaidaCom != value)
                {
                    _uSERTipoLancSaidaCom = value;
                    OnPropertyChanged("USERTipoLancSaidaCom");
                }
            }
        }
        private string _uSERTipoLancSaidaCom;
    
        [DataMember]
        public string USERTipoLancSaidaInc
        {
            get { return _uSERTipoLancSaidaInc; }
            set
            {
                if (_uSERTipoLancSaidaInc != value)
                {
                    _uSERTipoLancSaidaInc = value;
                    OnPropertyChanged("USERTipoLancSaidaInc");
                }
            }
        }
        private string _uSERTipoLancSaidaInc;
    
        [DataMember]
        public string USERTipoProduto
        {
            get { return _uSERTipoProduto; }
            set
            {
                if (_uSERTipoProduto != value)
                {
                    _uSERTipoProduto = value;
                    OnPropertyChanged("USERTipoProduto");
                }
            }
        }
        private string _uSERTipoProduto;
    
        [DataMember]
        public string USERTitRQRelDEO
        {
            get { return _uSERTitRQRelDEO; }
            set
            {
                if (_uSERTitRQRelDEO != value)
                {
                    _uSERTitRQRelDEO = value;
                    OnPropertyChanged("USERTitRQRelDEO");
                }
            }
        }
        private string _uSERTitRQRelDEO;
    
        [DataMember]
        public string USEREntraPlanProdRacao
        {
            get { return _uSEREntraPlanProdRacao; }
            set
            {
                if (_uSEREntraPlanProdRacao != value)
                {
                    _uSEREntraPlanProdRacao = value;
                    OnPropertyChanged("USEREntraPlanProdRacao");
                }
            }
        }
        private string _uSEREntraPlanProdRacao;
    
        [DataMember]
        public string LocArmazEntCod
        {
            get { return _locArmazEntCod; }
            set
            {
                if (_locArmazEntCod != value)
                {
                    _locArmazEntCod = value;
                    OnPropertyChanged("LocArmazEntCod");
                }
            }
        }
        private string _locArmazEntCod;
    
        [DataMember]
        public string LOCARMAZCODESTREXPEDICAO
        {
            get { return _lOCARMAZCODESTREXPEDICAO; }
            set
            {
                if (_lOCARMAZCODESTREXPEDICAO != value)
                {
                    ChangeTracker.RecordOriginalValue("LOCARMAZCODESTREXPEDICAO", _lOCARMAZCODESTREXPEDICAO);
                    if (!IsDeserializing)
                    {
                        if (LOC_ARMAZ2 != null && LOC_ARMAZ2.LocArmazCodEstr != value)
                        {
                            LOC_ARMAZ2 = null;
                        }
                    }
                    _lOCARMAZCODESTREXPEDICAO = value;
                    OnPropertyChanged("LOCARMAZCODESTREXPEDICAO");
                }
            }
        }
        private string _lOCARMAZCODESTREXPEDICAO;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<OPER_ORD_PRODUC> OPER_ORD_PRODUC
        {
            get
            {
                if (_oPER_ORD_PRODUC == null)
                {
                    _oPER_ORD_PRODUC = new TrackableCollection<OPER_ORD_PRODUC>();
                    _oPER_ORD_PRODUC.CollectionChanged += FixupOPER_ORD_PRODUC;
                }
                return _oPER_ORD_PRODUC;
            }
            set
            {
                if (!ReferenceEquals(_oPER_ORD_PRODUC, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_oPER_ORD_PRODUC != null)
                    {
                        _oPER_ORD_PRODUC.CollectionChanged -= FixupOPER_ORD_PRODUC;
                    }
                    _oPER_ORD_PRODUC = value;
                    if (_oPER_ORD_PRODUC != null)
                    {
                        _oPER_ORD_PRODUC.CollectionChanged += FixupOPER_ORD_PRODUC;
                    }
                    OnNavigationPropertyChanged("OPER_ORD_PRODUC");
                }
            }
        }
        private TrackableCollection<OPER_ORD_PRODUC> _oPER_ORD_PRODUC;
    
        [DataMember]
        public TrackableCollection<ORD_PRODUC> ORD_PRODUC
        {
            get
            {
                if (_oRD_PRODUC == null)
                {
                    _oRD_PRODUC = new TrackableCollection<ORD_PRODUC>();
                    _oRD_PRODUC.CollectionChanged += FixupORD_PRODUC;
                }
                return _oRD_PRODUC;
            }
            set
            {
                if (!ReferenceEquals(_oRD_PRODUC, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_oRD_PRODUC != null)
                    {
                        _oRD_PRODUC.CollectionChanged -= FixupORD_PRODUC;
                    }
                    _oRD_PRODUC = value;
                    if (_oRD_PRODUC != null)
                    {
                        _oRD_PRODUC.CollectionChanged += FixupORD_PRODUC;
                    }
                    OnNavigationPropertyChanged("ORD_PRODUC");
                }
            }
        }
        private TrackableCollection<ORD_PRODUC> _oRD_PRODUC;
    
        [DataMember]
        public TrackableCollection<ITEM_REQ_MAT> ITEM_REQ_MAT
        {
            get
            {
                if (_iTEM_REQ_MAT == null)
                {
                    _iTEM_REQ_MAT = new TrackableCollection<ITEM_REQ_MAT>();
                    _iTEM_REQ_MAT.CollectionChanged += FixupITEM_REQ_MAT;
                }
                return _iTEM_REQ_MAT;
            }
            set
            {
                if (!ReferenceEquals(_iTEM_REQ_MAT, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_iTEM_REQ_MAT != null)
                    {
                        _iTEM_REQ_MAT.CollectionChanged -= FixupITEM_REQ_MAT;
                    }
                    _iTEM_REQ_MAT = value;
                    if (_iTEM_REQ_MAT != null)
                    {
                        _iTEM_REQ_MAT.CollectionChanged += FixupITEM_REQ_MAT;
                    }
                    OnNavigationPropertyChanged("ITEM_REQ_MAT");
                }
            }
        }
        private TrackableCollection<ITEM_REQ_MAT> _iTEM_REQ_MAT;
    
        [DataMember]
        public TrackableCollection<ITEM_REQ_MAT> ITEM_REQ_MAT1
        {
            get
            {
                if (_iTEM_REQ_MAT1 == null)
                {
                    _iTEM_REQ_MAT1 = new TrackableCollection<ITEM_REQ_MAT>();
                    _iTEM_REQ_MAT1.CollectionChanged += FixupITEM_REQ_MAT1;
                }
                return _iTEM_REQ_MAT1;
            }
            set
            {
                if (!ReferenceEquals(_iTEM_REQ_MAT1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_iTEM_REQ_MAT1 != null)
                    {
                        _iTEM_REQ_MAT1.CollectionChanged -= FixupITEM_REQ_MAT1;
                    }
                    _iTEM_REQ_MAT1 = value;
                    if (_iTEM_REQ_MAT1 != null)
                    {
                        _iTEM_REQ_MAT1.CollectionChanged += FixupITEM_REQ_MAT1;
                    }
                    OnNavigationPropertyChanged("ITEM_REQ_MAT1");
                }
            }
        }
        private TrackableCollection<ITEM_REQ_MAT> _iTEM_REQ_MAT1;
    
        [DataMember]
        public TrackableCollection<REQ_MAT> REQ_MAT
        {
            get
            {
                if (_rEQ_MAT == null)
                {
                    _rEQ_MAT = new TrackableCollection<REQ_MAT>();
                    _rEQ_MAT.CollectionChanged += FixupREQ_MAT;
                }
                return _rEQ_MAT;
            }
            set
            {
                if (!ReferenceEquals(_rEQ_MAT, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rEQ_MAT != null)
                    {
                        _rEQ_MAT.CollectionChanged -= FixupREQ_MAT;
                    }
                    _rEQ_MAT = value;
                    if (_rEQ_MAT != null)
                    {
                        _rEQ_MAT.CollectionChanged += FixupREQ_MAT;
                    }
                    OnNavigationPropertyChanged("REQ_MAT");
                }
            }
        }
        private TrackableCollection<REQ_MAT> _rEQ_MAT;
    
        [DataMember]
        public TrackableCollection<ESTQ_LOC_ARMAZ> ESTQ_LOC_ARMAZ
        {
            get
            {
                if (_eSTQ_LOC_ARMAZ == null)
                {
                    _eSTQ_LOC_ARMAZ = new TrackableCollection<ESTQ_LOC_ARMAZ>();
                    _eSTQ_LOC_ARMAZ.CollectionChanged += FixupESTQ_LOC_ARMAZ;
                }
                return _eSTQ_LOC_ARMAZ;
            }
            set
            {
                if (!ReferenceEquals(_eSTQ_LOC_ARMAZ, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_eSTQ_LOC_ARMAZ != null)
                    {
                        _eSTQ_LOC_ARMAZ.CollectionChanged -= FixupESTQ_LOC_ARMAZ;
                        // This is the principal end in an association that performs cascade deletes.
                        // Remove the cascade delete event handler for any entities in the current collection.
                        foreach (ESTQ_LOC_ARMAZ item in _eSTQ_LOC_ARMAZ)
                        {
                            ChangeTracker.ObjectStateChanging -= item.HandleCascadeDelete;
                        }
                    }
                    _eSTQ_LOC_ARMAZ = value;
                    if (_eSTQ_LOC_ARMAZ != null)
                    {
                        _eSTQ_LOC_ARMAZ.CollectionChanged += FixupESTQ_LOC_ARMAZ;
                        // This is the principal end in an association that performs cascade deletes.
                        // Add the cascade delete event handler for any entities that are already in the new collection.
                        foreach (ESTQ_LOC_ARMAZ item in _eSTQ_LOC_ARMAZ)
                        {
                            ChangeTracker.ObjectStateChanging += item.HandleCascadeDelete;
                        }
                    }
                    OnNavigationPropertyChanged("ESTQ_LOC_ARMAZ");
                }
            }
        }
        private TrackableCollection<ESTQ_LOC_ARMAZ> _eSTQ_LOC_ARMAZ;
    
        [DataMember]
        public TrackableCollection<LOC_ARMAZ> LOC_ARMAZ1
        {
            get
            {
                if (_lOC_ARMAZ1 == null)
                {
                    _lOC_ARMAZ1 = new TrackableCollection<LOC_ARMAZ>();
                    _lOC_ARMAZ1.CollectionChanged += FixupLOC_ARMAZ1;
                }
                return _lOC_ARMAZ1;
            }
            set
            {
                if (!ReferenceEquals(_lOC_ARMAZ1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_lOC_ARMAZ1 != null)
                    {
                        _lOC_ARMAZ1.CollectionChanged -= FixupLOC_ARMAZ1;
                    }
                    _lOC_ARMAZ1 = value;
                    if (_lOC_ARMAZ1 != null)
                    {
                        _lOC_ARMAZ1.CollectionChanged += FixupLOC_ARMAZ1;
                    }
                    OnNavigationPropertyChanged("LOC_ARMAZ1");
                }
            }
        }
        private TrackableCollection<LOC_ARMAZ> _lOC_ARMAZ1;
    
        [DataMember]
        public LOC_ARMAZ LOC_ARMAZ2
        {
            get { return _lOC_ARMAZ2; }
            set
            {
                if (!ReferenceEquals(_lOC_ARMAZ2, value))
                {
                    var previousValue = _lOC_ARMAZ2;
                    _lOC_ARMAZ2 = value;
                    FixupLOC_ARMAZ2(previousValue);
                    OnNavigationPropertyChanged("LOC_ARMAZ2");
                }
            }
        }
        private LOC_ARMAZ _lOC_ARMAZ2;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            OPER_ORD_PRODUC.Clear();
            ORD_PRODUC.Clear();
            ITEM_REQ_MAT.Clear();
            ITEM_REQ_MAT1.Clear();
            REQ_MAT.Clear();
            ESTQ_LOC_ARMAZ.Clear();
            LOC_ARMAZ1.Clear();
            LOC_ARMAZ2 = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupLOC_ARMAZ2(LOC_ARMAZ previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.LOC_ARMAZ1.Contains(this))
            {
                previousValue.LOC_ARMAZ1.Remove(this);
            }
    
            if (LOC_ARMAZ2 != null)
            {
                if (!LOC_ARMAZ2.LOC_ARMAZ1.Contains(this))
                {
                    LOC_ARMAZ2.LOC_ARMAZ1.Add(this);
                }
    
                LOCARMAZCODESTREXPEDICAO = LOC_ARMAZ2.LocArmazCodEstr;
            }
            else if (!skipKeys)
            {
                LOCARMAZCODESTREXPEDICAO = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("LOC_ARMAZ2")
                    && (ChangeTracker.OriginalValues["LOC_ARMAZ2"] == LOC_ARMAZ2))
                {
                    ChangeTracker.OriginalValues.Remove("LOC_ARMAZ2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("LOC_ARMAZ2", previousValue);
                }
                if (LOC_ARMAZ2 != null && !LOC_ARMAZ2.ChangeTracker.ChangeTrackingEnabled)
                {
                    LOC_ARMAZ2.StartTracking();
                }
            }
        }
    
        private void FixupOPER_ORD_PRODUC(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (OPER_ORD_PRODUC item in e.NewItems)
                {
                    item.LOC_ARMAZ = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("OPER_ORD_PRODUC", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (OPER_ORD_PRODUC item in e.OldItems)
                {
                    if (ReferenceEquals(item.LOC_ARMAZ, this))
                    {
                        item.LOC_ARMAZ = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("OPER_ORD_PRODUC", item);
                    }
                }
            }
        }
    
        private void FixupORD_PRODUC(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ORD_PRODUC item in e.NewItems)
                {
                    item.LOC_ARMAZ = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ORD_PRODUC", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ORD_PRODUC item in e.OldItems)
                {
                    if (ReferenceEquals(item.LOC_ARMAZ, this))
                    {
                        item.LOC_ARMAZ = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ORD_PRODUC", item);
                    }
                }
            }
        }
    
        private void FixupITEM_REQ_MAT(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ITEM_REQ_MAT item in e.NewItems)
                {
                    item.LOC_ARMAZ = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ITEM_REQ_MAT", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ITEM_REQ_MAT item in e.OldItems)
                {
                    if (ReferenceEquals(item.LOC_ARMAZ, this))
                    {
                        item.LOC_ARMAZ = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ITEM_REQ_MAT", item);
                    }
                }
            }
        }
    
        private void FixupITEM_REQ_MAT1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ITEM_REQ_MAT item in e.NewItems)
                {
                    item.LOC_ARMAZ1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ITEM_REQ_MAT1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ITEM_REQ_MAT item in e.OldItems)
                {
                    if (ReferenceEquals(item.LOC_ARMAZ1, this))
                    {
                        item.LOC_ARMAZ1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ITEM_REQ_MAT1", item);
                    }
                }
            }
        }
    
        private void FixupREQ_MAT(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (REQ_MAT item in e.NewItems)
                {
                    item.LOC_ARMAZ = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("REQ_MAT", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (REQ_MAT item in e.OldItems)
                {
                    if (ReferenceEquals(item.LOC_ARMAZ, this))
                    {
                        item.LOC_ARMAZ = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("REQ_MAT", item);
                    }
                }
            }
        }
    
        private void FixupESTQ_LOC_ARMAZ(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ESTQ_LOC_ARMAZ item in e.NewItems)
                {
                    item.LOC_ARMAZ = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ESTQ_LOC_ARMAZ", item);
                    }
                    // This is the principal end in an association that performs cascade deletes.
                    // Update the event listener to refer to the new dependent.
                    ChangeTracker.ObjectStateChanging += item.HandleCascadeDelete;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ESTQ_LOC_ARMAZ item in e.OldItems)
                {
                    if (ReferenceEquals(item.LOC_ARMAZ, this))
                    {
                        item.LOC_ARMAZ = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ESTQ_LOC_ARMAZ", item);
                        // Delete the dependent end of this identifying association. If the current state is Added,
                        // allow the relationship to be changed without causing the dependent to be deleted.
                        if (item.ChangeTracker.State != ObjectState.Added)
                        {
                            item.MarkAsDeleted();
                        }
                    }
                    // This is the principal end in an association that performs cascade deletes.
                    // Remove the previous dependent from the event listener.
                    ChangeTracker.ObjectStateChanging -= item.HandleCascadeDelete;
                }
            }
        }
    
        private void FixupLOC_ARMAZ1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (LOC_ARMAZ item in e.NewItems)
                {
                    item.LOC_ARMAZ2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("LOC_ARMAZ1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LOC_ARMAZ item in e.OldItems)
                {
                    if (ReferenceEquals(item.LOC_ARMAZ2, this))
                    {
                        item.LOC_ARMAZ2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("LOC_ARMAZ1", item);
                    }
                }
            }
        }

        #endregion

    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHyLinedoBrasil.Models.DiarioProducaoRacao
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(FIC_TEC_PROD))]
    [KnownType(typeof(LOC_ARMAZ))]
    [KnownType(typeof(ORD_PRODUC))]
    [KnownType(typeof(REQ_MAT))]
    [KnownType(typeof(PROD_UNID_MED))]
    [KnownType(typeof(PRODUTO))]
    public partial class ITEM_REQ_MAT: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public string EmpCod
        {
            get { return _empCod; }
            set
            {
                if (_empCod != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'EmpCod' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    if (!IsDeserializing)
                    {
                        if (ORD_PRODUC != null && ORD_PRODUC.EmpCod != value)
                        {
                            var previousValue = _oRD_PRODUC;
                            _oRD_PRODUC = null;
                            FixupORD_PRODUC(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("ORD_PRODUC");
                        }
                        if (REQ_MAT != null && REQ_MAT.EmpCod != value)
                        {
                            REQ_MAT = null;
                        }
                    }
                    _empCod = value;
                    OnPropertyChanged("EmpCod");
                }
            }
        }
        private string _empCod;
    
        [DataMember]
        public string ReqMatNum
        {
            get { return _reqMatNum; }
            set
            {
                if (_reqMatNum != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ReqMatNum' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    if (!IsDeserializing)
                    {
                        if (REQ_MAT != null && REQ_MAT.ReqMatNum != value)
                        {
                            REQ_MAT = null;
                        }
                    }
                    _reqMatNum = value;
                    OnPropertyChanged("ReqMatNum");
                }
            }
        }
        private string _reqMatNum;
    
        [DataMember]
        public short ItReqMatSeq
        {
            get { return _itReqMatSeq; }
            set
            {
                if (_itReqMatSeq != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ItReqMatSeq' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _itReqMatSeq = value;
                    OnPropertyChanged("ItReqMatSeq");
                }
            }
        }
        private short _itReqMatSeq;
    
        [DataMember]
        public string ProdCodEstr
        {
            get { return _prodCodEstr; }
            set
            {
                if (_prodCodEstr != value)
                {
                    ChangeTracker.RecordOriginalValue("ProdCodEstr", _prodCodEstr);
                    if (!IsDeserializing)
                    {
                        if (PROD_UNID_MED1 != null && PROD_UNID_MED1.ProdCodEstr != value)
                        {
                            var previousValue = _pROD_UNID_MED1;
                            _pROD_UNID_MED1 = null;
                            FixupPROD_UNID_MED1(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("PROD_UNID_MED1");
                        }
                        if (PRODUTO != null && PRODUTO.ProdCodEstr != value)
                        {
                            PRODUTO = null;
                        }
                    }
                    _prodCodEstr = value;
                    OnPropertyChanged("ProdCodEstr");
                }
            }
        }
        private string _prodCodEstr;
    
        [DataMember]
        public string ItReqMatUnidMedCod
        {
            get { return _itReqMatUnidMedCod; }
            set
            {
                if (_itReqMatUnidMedCod != value)
                {
                    ChangeTracker.RecordOriginalValue("ItReqMatUnidMedCod", _itReqMatUnidMedCod);
                    if (!IsDeserializing)
                    {
                        if (PROD_UNID_MED1 != null && PROD_UNID_MED1.ProdUnidMedCod != value)
                        {
                            var previousValue = _pROD_UNID_MED1;
                            _pROD_UNID_MED1 = null;
                            FixupPROD_UNID_MED1(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("PROD_UNID_MED1");
                        }
                    }
                    _itReqMatUnidMedCod = value;
                    OnPropertyChanged("ItReqMatUnidMedCod");
                }
            }
        }
        private string _itReqMatUnidMedCod;
    
        [DataMember]
        public Nullable<short> ItReqMatUnidMedPos
        {
            get { return _itReqMatUnidMedPos; }
            set
            {
                if (_itReqMatUnidMedPos != value)
                {
                    ChangeTracker.RecordOriginalValue("ItReqMatUnidMedPos", _itReqMatUnidMedPos);
                    if (!IsDeserializing)
                    {
                        if (PROD_UNID_MED1 != null && PROD_UNID_MED1.ProdUnidMedPos != value)
                        {
                            var previousValue = _pROD_UNID_MED1;
                            _pROD_UNID_MED1 = null;
                            FixupPROD_UNID_MED1(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("PROD_UNID_MED1");
                        }
                    }
                    _itReqMatUnidMedPos = value;
                    OnPropertyChanged("ItReqMatUnidMedPos");
                }
            }
        }
        private Nullable<short> _itReqMatUnidMedPos;
    
        [DataMember]
        public string LocArmazCodEstr
        {
            get { return _locArmazCodEstr; }
            set
            {
                if (_locArmazCodEstr != value)
                {
                    ChangeTracker.RecordOriginalValue("LocArmazCodEstr", _locArmazCodEstr);
                    if (!IsDeserializing)
                    {
                        if (LOC_ARMAZ1 != null && LOC_ARMAZ1.LocArmazCodEstr != value)
                        {
                            LOC_ARMAZ1 = null;
                        }
                    }
                    _locArmazCodEstr = value;
                    OnPropertyChanged("LocArmazCodEstr");
                }
            }
        }
        private string _locArmazCodEstr;
    
        [DataMember]
        public Nullable<decimal> ItReqMatQtd
        {
            get { return _itReqMatQtd; }
            set
            {
                if (_itReqMatQtd != value)
                {
                    _itReqMatQtd = value;
                    OnPropertyChanged("ItReqMatQtd");
                }
            }
        }
        private Nullable<decimal> _itReqMatQtd;
    
        [DataMember]
        public Nullable<decimal> ItReqMatQtdAtend
        {
            get { return _itReqMatQtdAtend; }
            set
            {
                if (_itReqMatQtdAtend != value)
                {
                    _itReqMatQtdAtend = value;
                    OnPropertyChanged("ItReqMatQtdAtend");
                }
            }
        }
        private Nullable<decimal> _itReqMatQtdAtend;
    
        [DataMember]
        public Nullable<decimal> ItReqMatSaldoQtd
        {
            get { return _itReqMatSaldoQtd; }
            set
            {
                if (_itReqMatSaldoQtd != value)
                {
                    _itReqMatSaldoQtd = value;
                    OnPropertyChanged("ItReqMatSaldoQtd");
                }
            }
        }
        private Nullable<decimal> _itReqMatSaldoQtd;
    
        [DataMember]
        public string ItReqMatGeraPend
        {
            get { return _itReqMatGeraPend; }
            set
            {
                if (_itReqMatGeraPend != value)
                {
                    _itReqMatGeraPend = value;
                    OnPropertyChanged("ItReqMatGeraPend");
                }
            }
        }
        private string _itReqMatGeraPend;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqMatAtendData
        {
            get { return _itReqMatAtendData; }
            set
            {
                if (_itReqMatAtendData != value)
                {
                    _itReqMatAtendData = value;
                    OnPropertyChanged("ItReqMatAtendData");
                }
            }
        }
        private Nullable<System.DateTime> _itReqMatAtendData;
    
        [DataMember]
        public string ItReqMatGeraEmpen
        {
            get { return _itReqMatGeraEmpen; }
            set
            {
                if (_itReqMatGeraEmpen != value)
                {
                    _itReqMatGeraEmpen = value;
                    OnPropertyChanged("ItReqMatGeraEmpen");
                }
            }
        }
        private string _itReqMatGeraEmpen;
    
        [DataMember]
        public Nullable<decimal> ItReqMatQtdEmpen
        {
            get { return _itReqMatQtdEmpen; }
            set
            {
                if (_itReqMatQtdEmpen != value)
                {
                    _itReqMatQtdEmpen = value;
                    OnPropertyChanged("ItReqMatQtdEmpen");
                }
            }
        }
        private Nullable<decimal> _itReqMatQtdEmpen;
    
        [DataMember]
        public Nullable<decimal> ItReqMatQtdComprar
        {
            get { return _itReqMatQtdComprar; }
            set
            {
                if (_itReqMatQtdComprar != value)
                {
                    _itReqMatQtdComprar = value;
                    OnPropertyChanged("ItReqMatQtdComprar");
                }
            }
        }
        private Nullable<decimal> _itReqMatQtdComprar;
    
        [DataMember]
        public string ItReqMatQtdComprarEmpen
        {
            get { return _itReqMatQtdComprarEmpen; }
            set
            {
                if (_itReqMatQtdComprarEmpen != value)
                {
                    _itReqMatQtdComprarEmpen = value;
                    OnPropertyChanged("ItReqMatQtdComprarEmpen");
                }
            }
        }
        private string _itReqMatQtdComprarEmpen;
    
        [DataMember]
        public string ItReqMatBxaEstqQtdAtend
        {
            get { return _itReqMatBxaEstqQtdAtend; }
            set
            {
                if (_itReqMatBxaEstqQtdAtend != value)
                {
                    _itReqMatBxaEstqQtdAtend = value;
                    OnPropertyChanged("ItReqMatBxaEstqQtdAtend");
                }
            }
        }
        private string _itReqMatBxaEstqQtdAtend;
    
        [DataMember]
        public string ItReqMatAtendFuncCod
        {
            get { return _itReqMatAtendFuncCod; }
            set
            {
                if (_itReqMatAtendFuncCod != value)
                {
                    _itReqMatAtendFuncCod = value;
                    OnPropertyChanged("ItReqMatAtendFuncCod");
                }
            }
        }
        private string _itReqMatAtendFuncCod;
    
        [DataMember]
        public string ItReqMatCanc
        {
            get { return _itReqMatCanc; }
            set
            {
                if (_itReqMatCanc != value)
                {
                    _itReqMatCanc = value;
                    OnPropertyChanged("ItReqMatCanc");
                }
            }
        }
        private string _itReqMatCanc;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqMatCancData
        {
            get { return _itReqMatCancData; }
            set
            {
                if (_itReqMatCancData != value)
                {
                    _itReqMatCancData = value;
                    OnPropertyChanged("ItReqMatCancData");
                }
            }
        }
        private Nullable<System.DateTime> _itReqMatCancData;
    
        [DataMember]
        public string ItReqMatCancUsuCod
        {
            get { return _itReqMatCancUsuCod; }
            set
            {
                if (_itReqMatCancUsuCod != value)
                {
                    _itReqMatCancUsuCod = value;
                    OnPropertyChanged("ItReqMatCancUsuCod");
                }
            }
        }
        private string _itReqMatCancUsuCod;
    
        [DataMember]
        public string ItReqMatObs
        {
            get { return _itReqMatObs; }
            set
            {
                if (_itReqMatObs != value)
                {
                    _itReqMatObs = value;
                    OnPropertyChanged("ItReqMatObs");
                }
            }
        }
        private string _itReqMatObs;
    
        [DataMember]
        public Nullable<decimal> ItReqMatQtdOrig
        {
            get { return _itReqMatQtdOrig; }
            set
            {
                if (_itReqMatQtdOrig != value)
                {
                    _itReqMatQtdOrig = value;
                    OnPropertyChanged("ItReqMatQtdOrig");
                }
            }
        }
        private Nullable<decimal> _itReqMatQtdOrig;
    
        [DataMember]
        public Nullable<decimal> ItReqMatQtdAtendMaior
        {
            get { return _itReqMatQtdAtendMaior; }
            set
            {
                if (_itReqMatQtdAtendMaior != value)
                {
                    _itReqMatQtdAtendMaior = value;
                    OnPropertyChanged("ItReqMatQtdAtendMaior");
                }
            }
        }
        private Nullable<decimal> _itReqMatQtdAtendMaior;
    
        [DataMember]
        public Nullable<decimal> ItReqMatQtdCalc
        {
            get { return _itReqMatQtdCalc; }
            set
            {
                if (_itReqMatQtdCalc != value)
                {
                    _itReqMatQtdCalc = value;
                    OnPropertyChanged("ItReqMatQtdCalc");
                }
            }
        }
        private Nullable<decimal> _itReqMatQtdCalc;
    
        [DataMember]
        public string LocArmazCodEstrDest
        {
            get { return _locArmazCodEstrDest; }
            set
            {
                if (_locArmazCodEstrDest != value)
                {
                    ChangeTracker.RecordOriginalValue("LocArmazCodEstrDest", _locArmazCodEstrDest);
                    if (!IsDeserializing)
                    {
                        if (LOC_ARMAZ != null && LOC_ARMAZ.LocArmazCodEstr != value)
                        {
                            LOC_ARMAZ = null;
                        }
                    }
                    _locArmazCodEstrDest = value;
                    OnPropertyChanged("LocArmazCodEstrDest");
                }
            }
        }
        private string _locArmazCodEstrDest;
    
        [DataMember]
        public string FicTecProdCodEstr
        {
            get { return _ficTecProdCodEstr; }
            set
            {
                if (_ficTecProdCodEstr != value)
                {
                    ChangeTracker.RecordOriginalValue("FicTecProdCodEstr", _ficTecProdCodEstr);
                    if (!IsDeserializing)
                    {
                        if (FIC_TEC_PROD != null && FIC_TEC_PROD.ProdCodEstr != value)
                        {
                            var previousValue = _fIC_TEC_PROD;
                            _fIC_TEC_PROD = null;
                            FixupFIC_TEC_PROD(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("FIC_TEC_PROD");
                        }
                    }
                    _ficTecProdCodEstr = value;
                    OnPropertyChanged("FicTecProdCodEstr");
                }
            }
        }
        private string _ficTecProdCodEstr;
    
        [DataMember]
        public Nullable<int> FicTecProdSeq
        {
            get { return _ficTecProdSeq; }
            set
            {
                if (_ficTecProdSeq != value)
                {
                    ChangeTracker.RecordOriginalValue("FicTecProdSeq", _ficTecProdSeq);
                    if (!IsDeserializing)
                    {
                        if (FIC_TEC_PROD != null && FIC_TEC_PROD.FicTecProdSeq != value)
                        {
                            var previousValue = _fIC_TEC_PROD;
                            _fIC_TEC_PROD = null;
                            FixupFIC_TEC_PROD(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("FIC_TEC_PROD");
                        }
                    }
                    _ficTecProdSeq = value;
                    OnPropertyChanged("FicTecProdSeq");
                }
            }
        }
        private Nullable<int> _ficTecProdSeq;
    
        [DataMember]
        public string ItReqMatCINum
        {
            get { return _itReqMatCINum; }
            set
            {
                if (_itReqMatCINum != value)
                {
                    _itReqMatCINum = value;
                    OnPropertyChanged("ItReqMatCINum");
                }
            }
        }
        private string _itReqMatCINum;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqMatCIData
        {
            get { return _itReqMatCIData; }
            set
            {
                if (_itReqMatCIData != value)
                {
                    _itReqMatCIData = value;
                    OnPropertyChanged("ItReqMatCIData");
                }
            }
        }
        private Nullable<System.DateTime> _itReqMatCIData;
    
        [DataMember]
        public Nullable<short> ItReqMatProcSeqIt
        {
            get { return _itReqMatProcSeqIt; }
            set
            {
                if (_itReqMatProcSeqIt != value)
                {
                    _itReqMatProcSeqIt = value;
                    OnPropertyChanged("ItReqMatProcSeqIt");
                }
            }
        }
        private Nullable<short> _itReqMatProcSeqIt;
    
        [DataMember]
        public Nullable<short> ItReqMatProcSeqCompIt
        {
            get { return _itReqMatProcSeqCompIt; }
            set
            {
                if (_itReqMatProcSeqCompIt != value)
                {
                    _itReqMatProcSeqCompIt = value;
                    OnPropertyChanged("ItReqMatProcSeqCompIt");
                }
            }
        }
        private Nullable<short> _itReqMatProcSeqCompIt;
    
        [DataMember]
        public string ItReqMatReqComp
        {
            get { return _itReqMatReqComp; }
            set
            {
                if (_itReqMatReqComp != value)
                {
                    _itReqMatReqComp = value;
                    OnPropertyChanged("ItReqMatReqComp");
                }
            }
        }
        private string _itReqMatReqComp;
    
        [DataMember]
        public string ItReqMatNumPedEnt
        {
            get { return _itReqMatNumPedEnt; }
            set
            {
                if (_itReqMatNumPedEnt != value)
                {
                    _itReqMatNumPedEnt = value;
                    OnPropertyChanged("ItReqMatNumPedEnt");
                }
            }
        }
        private string _itReqMatNumPedEnt;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqMatDataSolic
        {
            get { return _itReqMatDataSolic; }
            set
            {
                if (_itReqMatDataSolic != value)
                {
                    _itReqMatDataSolic = value;
                    OnPropertyChanged("ItReqMatDataSolic");
                }
            }
        }
        private Nullable<System.DateTime> _itReqMatDataSolic;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqMatDataProm
        {
            get { return _itReqMatDataProm; }
            set
            {
                if (_itReqMatDataProm != value)
                {
                    _itReqMatDataProm = value;
                    OnPropertyChanged("ItReqMatDataProm");
                }
            }
        }
        private Nullable<System.DateTime> _itReqMatDataProm;
    
        [DataMember]
        public Nullable<decimal> ItReqMatQtdEntregaParc
        {
            get { return _itReqMatQtdEntregaParc; }
            set
            {
                if (_itReqMatQtdEntregaParc != value)
                {
                    _itReqMatQtdEntregaParc = value;
                    OnPropertyChanged("ItReqMatQtdEntregaParc");
                }
            }
        }
        private Nullable<decimal> _itReqMatQtdEntregaParc;
    
        [DataMember]
        public string ItReqMatNumProdEnt
        {
            get { return _itReqMatNumProdEnt; }
            set
            {
                if (_itReqMatNumProdEnt != value)
                {
                    _itReqMatNumProdEnt = value;
                    OnPropertyChanged("ItReqMatNumProdEnt");
                }
            }
        }
        private string _itReqMatNumProdEnt;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqMatDataPedEnt
        {
            get { return _itReqMatDataPedEnt; }
            set
            {
                if (_itReqMatDataPedEnt != value)
                {
                    _itReqMatDataPedEnt = value;
                    OnPropertyChanged("ItReqMatDataPedEnt");
                }
            }
        }
        private Nullable<System.DateTime> _itReqMatDataPedEnt;
    
        [DataMember]
        public Nullable<decimal> ItReqMatQtdAtendCalc
        {
            get { return _itReqMatQtdAtendCalc; }
            set
            {
                if (_itReqMatQtdAtendCalc != value)
                {
                    _itReqMatQtdAtendCalc = value;
                    OnPropertyChanged("ItReqMatQtdAtendCalc");
                }
            }
        }
        private Nullable<decimal> _itReqMatQtdAtendCalc;
    
        [DataMember]
        public string ClasseRecDespCodEstr
        {
            get { return _classeRecDespCodEstr; }
            set
            {
                if (_classeRecDespCodEstr != value)
                {
                    _classeRecDespCodEstr = value;
                    OnPropertyChanged("ClasseRecDespCodEstr");
                }
            }
        }
        private string _classeRecDespCodEstr;
    
        [DataMember]
        public Nullable<int> ItReqMatProcSeqItAux
        {
            get { return _itReqMatProcSeqItAux; }
            set
            {
                if (_itReqMatProcSeqItAux != value)
                {
                    _itReqMatProcSeqItAux = value;
                    OnPropertyChanged("ItReqMatProcSeqItAux");
                }
            }
        }
        private Nullable<int> _itReqMatProcSeqItAux;
    
        [DataMember]
        public string USEROrdProducNum
        {
            get { return _uSEROrdProducNum; }
            set
            {
                if (_uSEROrdProducNum != value)
                {
                    _uSEROrdProducNum = value;
                    OnPropertyChanged("USEROrdProducNum");
                }
            }
        }
        private string _uSEROrdProducNum;
    
        [DataMember]
        public string ProdCodEstrSimilar
        {
            get { return _prodCodEstrSimilar; }
            set
            {
                if (_prodCodEstrSimilar != value)
                {
                    ChangeTracker.RecordOriginalValue("ProdCodEstrSimilar", _prodCodEstrSimilar);
                    if (!IsDeserializing)
                    {
                        if (PROD_UNID_MED != null && PROD_UNID_MED.ProdCodEstr != value)
                        {
                            var previousValue = _pROD_UNID_MED;
                            _pROD_UNID_MED = null;
                            FixupPROD_UNID_MED(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("PROD_UNID_MED");
                        }
                    }
                    _prodCodEstrSimilar = value;
                    OnPropertyChanged("ProdCodEstrSimilar");
                }
            }
        }
        private string _prodCodEstrSimilar;
    
        [DataMember]
        public string ItReqMatUnidMedCodSim
        {
            get { return _itReqMatUnidMedCodSim; }
            set
            {
                if (_itReqMatUnidMedCodSim != value)
                {
                    ChangeTracker.RecordOriginalValue("ItReqMatUnidMedCodSim", _itReqMatUnidMedCodSim);
                    if (!IsDeserializing)
                    {
                        if (PROD_UNID_MED != null && PROD_UNID_MED.ProdUnidMedCod != value)
                        {
                            var previousValue = _pROD_UNID_MED;
                            _pROD_UNID_MED = null;
                            FixupPROD_UNID_MED(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("PROD_UNID_MED");
                        }
                    }
                    _itReqMatUnidMedCodSim = value;
                    OnPropertyChanged("ItReqMatUnidMedCodSim");
                }
            }
        }
        private string _itReqMatUnidMedCodSim;
    
        [DataMember]
        public Nullable<short> ItReqMatUnidMedPosSim
        {
            get { return _itReqMatUnidMedPosSim; }
            set
            {
                if (_itReqMatUnidMedPosSim != value)
                {
                    ChangeTracker.RecordOriginalValue("ItReqMatUnidMedPosSim", _itReqMatUnidMedPosSim);
                    if (!IsDeserializing)
                    {
                        if (PROD_UNID_MED != null && PROD_UNID_MED.ProdUnidMedPos != value)
                        {
                            var previousValue = _pROD_UNID_MED;
                            _pROD_UNID_MED = null;
                            FixupPROD_UNID_MED(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("PROD_UNID_MED");
                        }
                    }
                    _itReqMatUnidMedPosSim = value;
                    OnPropertyChanged("ItReqMatUnidMedPosSim");
                }
            }
        }
        private Nullable<short> _itReqMatUnidMedPosSim;
    
        [DataMember]
        public Nullable<decimal> ItReqMatQtdAtendSim
        {
            get { return _itReqMatQtdAtendSim; }
            set
            {
                if (_itReqMatQtdAtendSim != value)
                {
                    _itReqMatQtdAtendSim = value;
                    OnPropertyChanged("ItReqMatQtdAtendSim");
                }
            }
        }
        private Nullable<decimal> _itReqMatQtdAtendSim;
    
        [DataMember]
        public string ItReqMatEstornado
        {
            get { return _itReqMatEstornado; }
            set
            {
                if (_itReqMatEstornado != value)
                {
                    _itReqMatEstornado = value;
                    OnPropertyChanged("ItReqMatEstornado");
                }
            }
        }
        private string _itReqMatEstornado;
    
        [DataMember]
        public Nullable<decimal> ItReqMatValLimite
        {
            get { return _itReqMatValLimite; }
            set
            {
                if (_itReqMatValLimite != value)
                {
                    _itReqMatValLimite = value;
                    OnPropertyChanged("ItReqMatValLimite");
                }
            }
        }
        private Nullable<decimal> _itReqMatValLimite;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqMatDataNec
        {
            get { return _itReqMatDataNec; }
            set
            {
                if (_itReqMatDataNec != value)
                {
                    _itReqMatDataNec = value;
                    OnPropertyChanged("ItReqMatDataNec");
                }
            }
        }
        private Nullable<System.DateTime> _itReqMatDataNec;
    
        [DataMember]
        public Nullable<short> ItReqMatSeqDocOrig
        {
            get { return _itReqMatSeqDocOrig; }
            set
            {
                if (_itReqMatSeqDocOrig != value)
                {
                    _itReqMatSeqDocOrig = value;
                    OnPropertyChanged("ItReqMatSeqDocOrig");
                }
            }
        }
        private Nullable<short> _itReqMatSeqDocOrig;
    
        [DataMember]
        public string ItReqMatTerc
        {
            get { return _itReqMatTerc; }
            set
            {
                if (_itReqMatTerc != value)
                {
                    _itReqMatTerc = value;
                    OnPropertyChanged("ItReqMatTerc");
                }
            }
        }
        private string _itReqMatTerc;
    
        [DataMember]
        public string OrdProducNum
        {
            get { return _ordProducNum; }
            set
            {
                if (_ordProducNum != value)
                {
                    ChangeTracker.RecordOriginalValue("OrdProducNum", _ordProducNum);
                    if (!IsDeserializing)
                    {
                        if (ORD_PRODUC != null && ORD_PRODUC.OrdProducNum != value)
                        {
                            var previousValue = _oRD_PRODUC;
                            _oRD_PRODUC = null;
                            FixupORD_PRODUC(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("ORD_PRODUC");
                        }
                    }
                    _ordProducNum = value;
                    OnPropertyChanged("OrdProducNum");
                }
            }
        }
        private string _ordProducNum;
    
        [DataMember]
        public Nullable<decimal> ItReqMatQtdSeparada
        {
            get { return _itReqMatQtdSeparada; }
            set
            {
                if (_itReqMatQtdSeparada != value)
                {
                    _itReqMatQtdSeparada = value;
                    OnPropertyChanged("ItReqMatQtdSeparada");
                }
            }
        }
        private Nullable<decimal> _itReqMatQtdSeparada;
    
        [DataMember]
        public Nullable<decimal> ItReqMatQtdSeparadaCalc
        {
            get { return _itReqMatQtdSeparadaCalc; }
            set
            {
                if (_itReqMatQtdSeparadaCalc != value)
                {
                    _itReqMatQtdSeparadaCalc = value;
                    OnPropertyChanged("ItReqMatQtdSeparadaCalc");
                }
            }
        }
        private Nullable<decimal> _itReqMatQtdSeparadaCalc;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqMatDataHoraAtend
        {
            get { return _itReqMatDataHoraAtend; }
            set
            {
                if (_itReqMatDataHoraAtend != value)
                {
                    _itReqMatDataHoraAtend = value;
                    OnPropertyChanged("ItReqMatDataHoraAtend");
                }
            }
        }
        private Nullable<System.DateTime> _itReqMatDataHoraAtend;
    
        [DataMember]
        public Nullable<decimal> ItReqMatQtdDevol
        {
            get { return _itReqMatQtdDevol; }
            set
            {
                if (_itReqMatQtdDevol != value)
                {
                    _itReqMatQtdDevol = value;
                    OnPropertyChanged("ItReqMatQtdDevol");
                }
            }
        }
        private Nullable<decimal> _itReqMatQtdDevol;
    
        [DataMember]
        public Nullable<decimal> ItReqMatQtdPerda
        {
            get { return _itReqMatQtdPerda; }
            set
            {
                if (_itReqMatQtdPerda != value)
                {
                    _itReqMatQtdPerda = value;
                    OnPropertyChanged("ItReqMatQtdPerda");
                }
            }
        }
        private Nullable<decimal> _itReqMatQtdPerda;
    
        [DataMember]
        public string VerbaCompCod
        {
            get { return _verbaCompCod; }
            set
            {
                if (_verbaCompCod != value)
                {
                    _verbaCompCod = value;
                    OnPropertyChanged("VerbaCompCod");
                }
            }
        }
        private string _verbaCompCod;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqMatDataSaidaPassag
        {
            get { return _itReqMatDataSaidaPassag; }
            set
            {
                if (_itReqMatDataSaidaPassag != value)
                {
                    _itReqMatDataSaidaPassag = value;
                    OnPropertyChanged("ItReqMatDataSaidaPassag");
                }
            }
        }
        private Nullable<System.DateTime> _itReqMatDataSaidaPassag;
    
        [DataMember]
        public string ItReqMatTrecho
        {
            get { return _itReqMatTrecho; }
            set
            {
                if (_itReqMatTrecho != value)
                {
                    _itReqMatTrecho = value;
                    OnPropertyChanged("ItReqMatTrecho");
                }
            }
        }
        private string _itReqMatTrecho;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqMatHoraSaidaPassag
        {
            get { return _itReqMatHoraSaidaPassag; }
            set
            {
                if (_itReqMatHoraSaidaPassag != value)
                {
                    _itReqMatHoraSaidaPassag = value;
                    OnPropertyChanged("ItReqMatHoraSaidaPassag");
                }
            }
        }
        private Nullable<System.DateTime> _itReqMatHoraSaidaPassag;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqMatHoraChegada
        {
            get { return _itReqMatHoraChegada; }
            set
            {
                if (_itReqMatHoraChegada != value)
                {
                    _itReqMatHoraChegada = value;
                    OnPropertyChanged("ItReqMatHoraChegada");
                }
            }
        }
        private Nullable<System.DateTime> _itReqMatHoraChegada;
    
        [DataMember]
        public string ItReqMatCidHosped
        {
            get { return _itReqMatCidHosped; }
            set
            {
                if (_itReqMatCidHosped != value)
                {
                    _itReqMatCidHosped = value;
                    OnPropertyChanged("ItReqMatCidHosped");
                }
            }
        }
        private string _itReqMatCidHosped;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqMatDataCheckIN
        {
            get { return _itReqMatDataCheckIN; }
            set
            {
                if (_itReqMatDataCheckIN != value)
                {
                    _itReqMatDataCheckIN = value;
                    OnPropertyChanged("ItReqMatDataCheckIN");
                }
            }
        }
        private Nullable<System.DateTime> _itReqMatDataCheckIN;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqMatDataCheckOut
        {
            get { return _itReqMatDataCheckOut; }
            set
            {
                if (_itReqMatDataCheckOut != value)
                {
                    _itReqMatDataCheckOut = value;
                    OnPropertyChanged("ItReqMatDataCheckOut");
                }
            }
        }
        private Nullable<System.DateTime> _itReqMatDataCheckOut;
    
        [DataMember]
        public string ItReqMatNomeHotel
        {
            get { return _itReqMatNomeHotel; }
            set
            {
                if (_itReqMatNomeHotel != value)
                {
                    _itReqMatNomeHotel = value;
                    OnPropertyChanged("ItReqMatNomeHotel");
                }
            }
        }
        private string _itReqMatNomeHotel;
    
        [DataMember]
        public string ItReqMatCidLocacaoVeic
        {
            get { return _itReqMatCidLocacaoVeic; }
            set
            {
                if (_itReqMatCidLocacaoVeic != value)
                {
                    _itReqMatCidLocacaoVeic = value;
                    OnPropertyChanged("ItReqMatCidLocacaoVeic");
                }
            }
        }
        private string _itReqMatCidLocacaoVeic;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqMatDataRetVeic
        {
            get { return _itReqMatDataRetVeic; }
            set
            {
                if (_itReqMatDataRetVeic != value)
                {
                    _itReqMatDataRetVeic = value;
                    OnPropertyChanged("ItReqMatDataRetVeic");
                }
            }
        }
        private Nullable<System.DateTime> _itReqMatDataRetVeic;
    
        [DataMember]
        public Nullable<System.DateTime> ItReqMatDataDevVeic
        {
            get { return _itReqMatDataDevVeic; }
            set
            {
                if (_itReqMatDataDevVeic != value)
                {
                    _itReqMatDataDevVeic = value;
                    OnPropertyChanged("ItReqMatDataDevVeic");
                }
            }
        }
        private Nullable<System.DateTime> _itReqMatDataDevVeic;
    
        [DataMember]
        public string ItReqMatNomeLocadVeic
        {
            get { return _itReqMatNomeLocadVeic; }
            set
            {
                if (_itReqMatNomeLocadVeic != value)
                {
                    _itReqMatNomeLocadVeic = value;
                    OnPropertyChanged("ItReqMatNomeLocadVeic");
                }
            }
        }
        private string _itReqMatNomeLocadVeic;
    
        [DataMember]
        public string ITREQMATENTCOD
        {
            get { return _iTREQMATENTCOD; }
            set
            {
                if (_iTREQMATENTCOD != value)
                {
                    _iTREQMATENTCOD = value;
                    OnPropertyChanged("ITREQMATENTCOD");
                }
            }
        }
        private string _iTREQMATENTCOD;
    
        [DataMember]
        public string OBJCODESTR
        {
            get { return _oBJCODESTR; }
            set
            {
                if (_oBJCODESTR != value)
                {
                    _oBJCODESTR = value;
                    OnPropertyChanged("OBJCODESTR");
                }
            }
        }
        private string _oBJCODESTR;
    
        [DataMember]
        public Nullable<decimal> ItReqMatSaldoQtdCalc
        {
            get { return _itReqMatSaldoQtdCalc; }
            set
            {
                if (_itReqMatSaldoQtdCalc != value)
                {
                    _itReqMatSaldoQtdCalc = value;
                    OnPropertyChanged("ItReqMatSaldoQtdCalc");
                }
            }
        }
        private Nullable<decimal> _itReqMatSaldoQtdCalc;
    
        [DataMember]
        public Nullable<decimal> ItReqMatQtdEmpenCalc
        {
            get { return _itReqMatQtdEmpenCalc; }
            set
            {
                if (_itReqMatQtdEmpenCalc != value)
                {
                    _itReqMatQtdEmpenCalc = value;
                    OnPropertyChanged("ItReqMatQtdEmpenCalc");
                }
            }
        }
        private Nullable<decimal> _itReqMatQtdEmpenCalc;
    
        [DataMember]
        public Nullable<decimal> ItReqMatQtdComprarCalc
        {
            get { return _itReqMatQtdComprarCalc; }
            set
            {
                if (_itReqMatQtdComprarCalc != value)
                {
                    _itReqMatQtdComprarCalc = value;
                    OnPropertyChanged("ItReqMatQtdComprarCalc");
                }
            }
        }
        private Nullable<decimal> _itReqMatQtdComprarCalc;
    
        [DataMember]
        public Nullable<short> ITREQMATPRODOPERSEQ
        {
            get { return _iTREQMATPRODOPERSEQ; }
            set
            {
                if (_iTREQMATPRODOPERSEQ != value)
                {
                    _iTREQMATPRODOPERSEQ = value;
                    OnPropertyChanged("ITREQMATPRODOPERSEQ");
                }
            }
        }
        private Nullable<short> _iTREQMATPRODOPERSEQ;
    
        [DataMember]
        public Nullable<decimal> ItReqMatQtdDevolCalc
        {
            get { return _itReqMatQtdDevolCalc; }
            set
            {
                if (_itReqMatQtdDevolCalc != value)
                {
                    _itReqMatQtdDevolCalc = value;
                    OnPropertyChanged("ItReqMatQtdDevolCalc");
                }
            }
        }
        private Nullable<decimal> _itReqMatQtdDevolCalc;
    
        [DataMember]
        public Nullable<decimal> ItReqMatQtdPerdaCalc
        {
            get { return _itReqMatQtdPerdaCalc; }
            set
            {
                if (_itReqMatQtdPerdaCalc != value)
                {
                    _itReqMatQtdPerdaCalc = value;
                    OnPropertyChanged("ItReqMatQtdPerdaCalc");
                }
            }
        }
        private Nullable<decimal> _itReqMatQtdPerdaCalc;
    
        [DataMember]
        public Nullable<int> IdProdId
        {
            get { return _idProdId; }
            set
            {
                if (_idProdId != value)
                {
                    _idProdId = value;
                    OnPropertyChanged("IdProdId");
                }
            }
        }
        private Nullable<int> _idProdId;
    
        [DataMember]
        public string ITREQMATPRODCODALT
        {
            get { return _iTREQMATPRODCODALT; }
            set
            {
                if (_iTREQMATPRODCODALT != value)
                {
                    _iTREQMATPRODCODALT = value;
                    OnPropertyChanged("ITREQMATPRODCODALT");
                }
            }
        }
        private string _iTREQMATPRODCODALT;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public FIC_TEC_PROD FIC_TEC_PROD
        {
            get { return _fIC_TEC_PROD; }
            set
            {
                if (!ReferenceEquals(_fIC_TEC_PROD, value))
                {
                    var previousValue = _fIC_TEC_PROD;
                    _fIC_TEC_PROD = value;
                    FixupFIC_TEC_PROD(previousValue);
                    OnNavigationPropertyChanged("FIC_TEC_PROD");
                }
            }
        }
        private FIC_TEC_PROD _fIC_TEC_PROD;
    
        [DataMember]
        public LOC_ARMAZ LOC_ARMAZ
        {
            get { return _lOC_ARMAZ; }
            set
            {
                if (!ReferenceEquals(_lOC_ARMAZ, value))
                {
                    var previousValue = _lOC_ARMAZ;
                    _lOC_ARMAZ = value;
                    FixupLOC_ARMAZ(previousValue);
                    OnNavigationPropertyChanged("LOC_ARMAZ");
                }
            }
        }
        private LOC_ARMAZ _lOC_ARMAZ;
    
        [DataMember]
        public ORD_PRODUC ORD_PRODUC
        {
            get { return _oRD_PRODUC; }
            set
            {
                if (!ReferenceEquals(_oRD_PRODUC, value))
                {
                    var previousValue = _oRD_PRODUC;
                    _oRD_PRODUC = value;
                    FixupORD_PRODUC(previousValue);
                    OnNavigationPropertyChanged("ORD_PRODUC");
                }
            }
        }
        private ORD_PRODUC _oRD_PRODUC;
    
        [DataMember]
        public LOC_ARMAZ LOC_ARMAZ1
        {
            get { return _lOC_ARMAZ1; }
            set
            {
                if (!ReferenceEquals(_lOC_ARMAZ1, value))
                {
                    var previousValue = _lOC_ARMAZ1;
                    _lOC_ARMAZ1 = value;
                    FixupLOC_ARMAZ1(previousValue);
                    OnNavigationPropertyChanged("LOC_ARMAZ1");
                }
            }
        }
        private LOC_ARMAZ _lOC_ARMAZ1;
    
        [DataMember]
        public REQ_MAT REQ_MAT
        {
            get { return _rEQ_MAT; }
            set
            {
                if (!ReferenceEquals(_rEQ_MAT, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added && value != null)
                    {
                        // This the dependent end of an identifying relationship, so the principal end cannot be changed if it is already set,
                        // otherwise it can only be set to an entity with a primary key that is the same value as the dependent's foreign key.
                        if (EmpCod != value.EmpCod || ReqMatNum != value.ReqMatNum)
                        {
                            throw new InvalidOperationException("The principal end of an identifying relationship can only be changed when the dependent end is in the Added state.");
                        }
                    }
                    var previousValue = _rEQ_MAT;
                    _rEQ_MAT = value;
                    FixupREQ_MAT(previousValue);
                    OnNavigationPropertyChanged("REQ_MAT");
                }
            }
        }
        private REQ_MAT _rEQ_MAT;
    
        [DataMember]
        public PROD_UNID_MED PROD_UNID_MED
        {
            get { return _pROD_UNID_MED; }
            set
            {
                if (!ReferenceEquals(_pROD_UNID_MED, value))
                {
                    var previousValue = _pROD_UNID_MED;
                    _pROD_UNID_MED = value;
                    FixupPROD_UNID_MED(previousValue);
                    OnNavigationPropertyChanged("PROD_UNID_MED");
                }
            }
        }
        private PROD_UNID_MED _pROD_UNID_MED;
    
        [DataMember]
        public PROD_UNID_MED PROD_UNID_MED1
        {
            get { return _pROD_UNID_MED1; }
            set
            {
                if (!ReferenceEquals(_pROD_UNID_MED1, value))
                {
                    var previousValue = _pROD_UNID_MED1;
                    _pROD_UNID_MED1 = value;
                    FixupPROD_UNID_MED1(previousValue);
                    OnNavigationPropertyChanged("PROD_UNID_MED1");
                }
            }
        }
        private PROD_UNID_MED _pROD_UNID_MED1;
    
        [DataMember]
        public PRODUTO PRODUTO
        {
            get { return _pRODUTO; }
            set
            {
                if (!ReferenceEquals(_pRODUTO, value))
                {
                    var previousValue = _pRODUTO;
                    _pRODUTO = value;
                    FixupPRODUTO(previousValue);
                    OnNavigationPropertyChanged("PRODUTO");
                }
            }
        }
        private PRODUTO _pRODUTO;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        // This entity type is the dependent end in at least one association that performs cascade deletes.
        // This event handler will process notifications that occur when the principal end is deleted.
        internal void HandleCascadeDelete(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                this.MarkAsDeleted();
            }
        }
    
        protected virtual void ClearNavigationProperties()
        {
            FIC_TEC_PROD = null;
            LOC_ARMAZ = null;
            ORD_PRODUC = null;
            LOC_ARMAZ1 = null;
            REQ_MAT = null;
            PROD_UNID_MED = null;
            PROD_UNID_MED1 = null;
            PRODUTO = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupFIC_TEC_PROD(FIC_TEC_PROD previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ITEM_REQ_MAT.Contains(this))
            {
                previousValue.ITEM_REQ_MAT.Remove(this);
            }
    
            if (FIC_TEC_PROD != null)
            {
                if (!FIC_TEC_PROD.ITEM_REQ_MAT.Contains(this))
                {
                    FIC_TEC_PROD.ITEM_REQ_MAT.Add(this);
                }
    
                FicTecProdCodEstr = FIC_TEC_PROD.ProdCodEstr;
                FicTecProdSeq = FIC_TEC_PROD.FicTecProdSeq;
            }
            else if (!skipKeys)
            {
                FicTecProdCodEstr = null;
                FicTecProdSeq = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("FIC_TEC_PROD")
                    && (ChangeTracker.OriginalValues["FIC_TEC_PROD"] == FIC_TEC_PROD))
                {
                    ChangeTracker.OriginalValues.Remove("FIC_TEC_PROD");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("FIC_TEC_PROD", previousValue);
                }
                if (FIC_TEC_PROD != null && !FIC_TEC_PROD.ChangeTracker.ChangeTrackingEnabled)
                {
                    FIC_TEC_PROD.StartTracking();
                }
            }
        }
    
        private void FixupLOC_ARMAZ(LOC_ARMAZ previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ITEM_REQ_MAT.Contains(this))
            {
                previousValue.ITEM_REQ_MAT.Remove(this);
            }
    
            if (LOC_ARMAZ != null)
            {
                if (!LOC_ARMAZ.ITEM_REQ_MAT.Contains(this))
                {
                    LOC_ARMAZ.ITEM_REQ_MAT.Add(this);
                }
    
                LocArmazCodEstrDest = LOC_ARMAZ.LocArmazCodEstr;
            }
            else if (!skipKeys)
            {
                LocArmazCodEstrDest = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("LOC_ARMAZ")
                    && (ChangeTracker.OriginalValues["LOC_ARMAZ"] == LOC_ARMAZ))
                {
                    ChangeTracker.OriginalValues.Remove("LOC_ARMAZ");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("LOC_ARMAZ", previousValue);
                }
                if (LOC_ARMAZ != null && !LOC_ARMAZ.ChangeTracker.ChangeTrackingEnabled)
                {
                    LOC_ARMAZ.StartTracking();
                }
            }
        }
    
        private void FixupORD_PRODUC(ORD_PRODUC previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ITEM_REQ_MAT.Contains(this))
            {
                previousValue.ITEM_REQ_MAT.Remove(this);
            }
    
            if (ORD_PRODUC != null)
            {
                if (!ORD_PRODUC.ITEM_REQ_MAT.Contains(this))
                {
                    ORD_PRODUC.ITEM_REQ_MAT.Add(this);
                }
    
                EmpCod = ORD_PRODUC.EmpCod;
                OrdProducNum = ORD_PRODUC.OrdProducNum;
            }
            else if (!skipKeys)
            {
                OrdProducNum = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ORD_PRODUC")
                    && (ChangeTracker.OriginalValues["ORD_PRODUC"] == ORD_PRODUC))
                {
                    ChangeTracker.OriginalValues.Remove("ORD_PRODUC");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ORD_PRODUC", previousValue);
                }
                if (ORD_PRODUC != null && !ORD_PRODUC.ChangeTracker.ChangeTrackingEnabled)
                {
                    ORD_PRODUC.StartTracking();
                }
            }
        }
    
        private void FixupLOC_ARMAZ1(LOC_ARMAZ previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ITEM_REQ_MAT1.Contains(this))
            {
                previousValue.ITEM_REQ_MAT1.Remove(this);
            }
    
            if (LOC_ARMAZ1 != null)
            {
                if (!LOC_ARMAZ1.ITEM_REQ_MAT1.Contains(this))
                {
                    LOC_ARMAZ1.ITEM_REQ_MAT1.Add(this);
                }
    
                LocArmazCodEstr = LOC_ARMAZ1.LocArmazCodEstr;
            }
            else if (!skipKeys)
            {
                LocArmazCodEstr = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("LOC_ARMAZ1")
                    && (ChangeTracker.OriginalValues["LOC_ARMAZ1"] == LOC_ARMAZ1))
                {
                    ChangeTracker.OriginalValues.Remove("LOC_ARMAZ1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("LOC_ARMAZ1", previousValue);
                }
                if (LOC_ARMAZ1 != null && !LOC_ARMAZ1.ChangeTracker.ChangeTrackingEnabled)
                {
                    LOC_ARMAZ1.StartTracking();
                }
            }
        }
    
        private void FixupREQ_MAT(REQ_MAT previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ITEM_REQ_MAT.Contains(this))
            {
                previousValue.ITEM_REQ_MAT.Remove(this);
            }
    
            if (REQ_MAT != null)
            {
                if (!REQ_MAT.ITEM_REQ_MAT.Contains(this))
                {
                    REQ_MAT.ITEM_REQ_MAT.Add(this);
                }
    
                EmpCod = REQ_MAT.EmpCod;
                ReqMatNum = REQ_MAT.ReqMatNum;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("REQ_MAT")
                    && (ChangeTracker.OriginalValues["REQ_MAT"] == REQ_MAT))
                {
                    ChangeTracker.OriginalValues.Remove("REQ_MAT");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("REQ_MAT", previousValue);
                }
                if (REQ_MAT != null && !REQ_MAT.ChangeTracker.ChangeTrackingEnabled)
                {
                    REQ_MAT.StartTracking();
                }
            }
        }
    
        private void FixupPROD_UNID_MED(PROD_UNID_MED previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ITEM_REQ_MAT.Contains(this))
            {
                previousValue.ITEM_REQ_MAT.Remove(this);
            }
    
            if (PROD_UNID_MED != null)
            {
                if (!PROD_UNID_MED.ITEM_REQ_MAT.Contains(this))
                {
                    PROD_UNID_MED.ITEM_REQ_MAT.Add(this);
                }
    
                ProdCodEstrSimilar = PROD_UNID_MED.ProdCodEstr;
                ItReqMatUnidMedCodSim = PROD_UNID_MED.ProdUnidMedCod;
                ItReqMatUnidMedPosSim = PROD_UNID_MED.ProdUnidMedPos;
            }
            else if (!skipKeys)
            {
                ProdCodEstrSimilar = null;
                ItReqMatUnidMedCodSim = null;
                ItReqMatUnidMedPosSim = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("PROD_UNID_MED")
                    && (ChangeTracker.OriginalValues["PROD_UNID_MED"] == PROD_UNID_MED))
                {
                    ChangeTracker.OriginalValues.Remove("PROD_UNID_MED");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("PROD_UNID_MED", previousValue);
                }
                if (PROD_UNID_MED != null && !PROD_UNID_MED.ChangeTracker.ChangeTrackingEnabled)
                {
                    PROD_UNID_MED.StartTracking();
                }
            }
        }
    
        private void FixupPROD_UNID_MED1(PROD_UNID_MED previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ITEM_REQ_MAT1.Contains(this))
            {
                previousValue.ITEM_REQ_MAT1.Remove(this);
            }
    
            if (PROD_UNID_MED1 != null)
            {
                if (!PROD_UNID_MED1.ITEM_REQ_MAT1.Contains(this))
                {
                    PROD_UNID_MED1.ITEM_REQ_MAT1.Add(this);
                }
    
                ProdCodEstr = PROD_UNID_MED1.ProdCodEstr;
                ItReqMatUnidMedCod = PROD_UNID_MED1.ProdUnidMedCod;
                ItReqMatUnidMedPos = PROD_UNID_MED1.ProdUnidMedPos;
            }
            else if (!skipKeys)
            {
                ItReqMatUnidMedCod = null;
                ItReqMatUnidMedPos = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("PROD_UNID_MED1")
                    && (ChangeTracker.OriginalValues["PROD_UNID_MED1"] == PROD_UNID_MED1))
                {
                    ChangeTracker.OriginalValues.Remove("PROD_UNID_MED1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("PROD_UNID_MED1", previousValue);
                }
                if (PROD_UNID_MED1 != null && !PROD_UNID_MED1.ChangeTracker.ChangeTrackingEnabled)
                {
                    PROD_UNID_MED1.StartTracking();
                }
            }
        }
    
        private void FixupPRODUTO(PRODUTO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ITEM_REQ_MAT.Contains(this))
            {
                previousValue.ITEM_REQ_MAT.Remove(this);
            }
    
            if (PRODUTO != null)
            {
                if (!PRODUTO.ITEM_REQ_MAT.Contains(this))
                {
                    PRODUTO.ITEM_REQ_MAT.Add(this);
                }
    
                ProdCodEstr = PRODUTO.ProdCodEstr;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("PRODUTO")
                    && (ChangeTracker.OriginalValues["PRODUTO"] == PRODUTO))
                {
                    ChangeTracker.OriginalValues.Remove("PRODUTO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("PRODUTO", previousValue);
                }
                if (PRODUTO != null && !PRODUTO.ChangeTracker.ChangeTrackingEnabled)
                {
                    PRODUTO.StartTracking();
                }
            }
        }

        #endregion

    }
}

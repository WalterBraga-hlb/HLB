//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHyLinedoBrasil.Models
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(CIDADE))]
    [KnownType(typeof(DOC_FIN))]
    [KnownType(typeof(MOV_ESTQ))]
    [KnownType(typeof(ENTIDADE))]
    [KnownType(typeof(ENTIDADE1))]
    [KnownType(typeof(EMPRESA_FILIAL))]
    [KnownType(typeof(PARC_DOC_FIN))]
    [KnownType(typeof(NAT_OPERACAO))]
    [KnownType(typeof(COND_PAG))]
    public partial class DOC_FIN: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public string EmpCod
        {
            get { return _empCod; }
            set
            {
                if (_empCod != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'EmpCod' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    if (!IsDeserializing)
                    {
                        if (DOC_FIN2 != null && DOC_FIN2.EmpCod != value)
                        {
                            var previousValue = _dOC_FIN2;
                            _dOC_FIN2 = null;
                            FixupDOC_FIN2(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("DOC_FIN2");
                        }
                        if (DOC_FIN3 != null && DOC_FIN3.EmpCod != value)
                        {
                            var previousValue = _dOC_FIN3;
                            _dOC_FIN3 = null;
                            FixupDOC_FIN3(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("DOC_FIN3");
                        }
                        if (DOC_FIN4 != null && DOC_FIN4.EmpCod != value)
                        {
                            var previousValue = _dOC_FIN4;
                            _dOC_FIN4 = null;
                            FixupDOC_FIN4(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("DOC_FIN4");
                        }
                        if (EMPRESA_FILIAL1 != null && EMPRESA_FILIAL1.EmpCod != value)
                        {
                            EMPRESA_FILIAL1 = null;
                        }
                    }
                    _empCod = value;
                    OnPropertyChanged("EmpCod");
                }
            }
        }
        private string _empCod;
    
        [DataMember]
        public int DocFinChv
        {
            get { return _docFinChv; }
            set
            {
                if (_docFinChv != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'DocFinChv' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _docFinChv = value;
                    OnPropertyChanged("DocFinChv");
                }
            }
        }
        private int _docFinChv;
    
        [DataMember]
        public string DocFinTipoLanc
        {
            get { return _docFinTipoLanc; }
            set
            {
                if (_docFinTipoLanc != value)
                {
                    _docFinTipoLanc = value;
                    OnPropertyChanged("DocFinTipoLanc");
                }
            }
        }
        private string _docFinTipoLanc;
    
        [DataMember]
        public string DocFinOrigEmpCod
        {
            get { return _docFinOrigEmpCod; }
            set
            {
                if (_docFinOrigEmpCod != value)
                {
                    ChangeTracker.RecordOriginalValue("DocFinOrigEmpCod", _docFinOrigEmpCod);
                    if (!IsDeserializing)
                    {
                        if (EMPRESA_FILIAL != null && EMPRESA_FILIAL.EmpCod != value)
                        {
                            EMPRESA_FILIAL = null;
                        }
                    }
                    _docFinOrigEmpCod = value;
                    OnPropertyChanged("DocFinOrigEmpCod");
                }
            }
        }
        private string _docFinOrigEmpCod;
    
        [DataMember]
        public string DocFinEspec
        {
            get { return _docFinEspec; }
            set
            {
                if (_docFinEspec != value)
                {
                    _docFinEspec = value;
                    OnPropertyChanged("DocFinEspec");
                }
            }
        }
        private string _docFinEspec;
    
        [DataMember]
        public string DocFinSerie
        {
            get { return _docFinSerie; }
            set
            {
                if (_docFinSerie != value)
                {
                    _docFinSerie = value;
                    OnPropertyChanged("DocFinSerie");
                }
            }
        }
        private string _docFinSerie;
    
        [DataMember]
        public string DocFinNum
        {
            get { return _docFinNum; }
            set
            {
                if (_docFinNum != value)
                {
                    _docFinNum = value;
                    OnPropertyChanged("DocFinNum");
                }
            }
        }
        private string _docFinNum;
    
        [DataMember]
        public string EntCod
        {
            get { return _entCod; }
            set
            {
                if (_entCod != value)
                {
                    ChangeTracker.RecordOriginalValue("EntCod", _entCod);
                    if (!IsDeserializing)
                    {
                        if (ENTIDADE1 != null && ENTIDADE1.EntCod != value)
                        {
                            ENTIDADE1 = null;
                        }
                    }
                    _entCod = value;
                    OnPropertyChanged("EntCod");
                }
            }
        }
        private string _entCod;
    
        [DataMember]
        public System.DateTime DocFinDataEntrada
        {
            get { return _docFinDataEntrada; }
            set
            {
                if (_docFinDataEntrada != value)
                {
                    _docFinDataEntrada = value;
                    OnPropertyChanged("DocFinDataEntrada");
                }
            }
        }
        private System.DateTime _docFinDataEntrada;
    
        [DataMember]
        public System.DateTime DocFinDataEmissao
        {
            get { return _docFinDataEmissao; }
            set
            {
                if (_docFinDataEmissao != value)
                {
                    _docFinDataEmissao = value;
                    OnPropertyChanged("DocFinDataEmissao");
                }
            }
        }
        private System.DateTime _docFinDataEmissao;
    
        [DataMember]
        public Nullable<System.DateTime> DocFinDataHoraDig
        {
            get { return _docFinDataHoraDig; }
            set
            {
                if (_docFinDataHoraDig != value)
                {
                    _docFinDataHoraDig = value;
                    OnPropertyChanged("DocFinDataHoraDig");
                }
            }
        }
        private Nullable<System.DateTime> _docFinDataHoraDig;
    
        [DataMember]
        public System.DateTime DocFinDataBaseVencParc
        {
            get { return _docFinDataBaseVencParc; }
            set
            {
                if (_docFinDataBaseVencParc != value)
                {
                    _docFinDataBaseVencParc = value;
                    OnPropertyChanged("DocFinDataBaseVencParc");
                }
            }
        }
        private System.DateTime _docFinDataBaseVencParc;
    
        [DataMember]
        public System.DateTime DocFinCompet
        {
            get { return _docFinCompet; }
            set
            {
                if (_docFinCompet != value)
                {
                    _docFinCompet = value;
                    OnPropertyChanged("DocFinCompet");
                }
            }
        }
        private System.DateTime _docFinCompet;
    
        [DataMember]
        public string CondPagCod
        {
            get { return _condPagCod; }
            set
            {
                if (_condPagCod != value)
                {
                    ChangeTracker.RecordOriginalValue("CondPagCod", _condPagCod);
                    if (!IsDeserializing)
                    {
                        if (COND_PAG != null && COND_PAG.CondPagCod != value)
                        {
                            COND_PAG = null;
                        }
                    }
                    _condPagCod = value;
                    OnPropertyChanged("CondPagCod");
                }
            }
        }
        private string _condPagCod;
    
        [DataMember]
        public string TabFinCod
        {
            get { return _tabFinCod; }
            set
            {
                if (_tabFinCod != value)
                {
                    _tabFinCod = value;
                    OnPropertyChanged("TabFinCod");
                }
            }
        }
        private string _tabFinCod;
    
        [DataMember]
        public string IndEconCod
        {
            get { return _indEconCod; }
            set
            {
                if (_indEconCod != value)
                {
                    _indEconCod = value;
                    OnPropertyChanged("IndEconCod");
                }
            }
        }
        private string _indEconCod;
    
        [DataMember]
        public Nullable<decimal> DocFinValCotacInd
        {
            get { return _docFinValCotacInd; }
            set
            {
                if (_docFinValCotacInd != value)
                {
                    _docFinValCotacInd = value;
                    OnPropertyChanged("DocFinValCotacInd");
                }
            }
        }
        private Nullable<decimal> _docFinValCotacInd;
    
        [DataMember]
        public decimal DocFinValor
        {
            get { return _docFinValor; }
            set
            {
                if (_docFinValor != value)
                {
                    _docFinValor = value;
                    OnPropertyChanged("DocFinValor");
                }
            }
        }
        private decimal _docFinValor;
    
        [DataMember]
        public decimal DocFinValorConv
        {
            get { return _docFinValorConv; }
            set
            {
                if (_docFinValorConv != value)
                {
                    _docFinValorConv = value;
                    OnPropertyChanged("DocFinValorConv");
                }
            }
        }
        private decimal _docFinValorConv;
    
        [DataMember]
        public string DocFinProjecao
        {
            get { return _docFinProjecao; }
            set
            {
                if (_docFinProjecao != value)
                {
                    _docFinProjecao = value;
                    OnPropertyChanged("DocFinProjecao");
                }
            }
        }
        private string _docFinProjecao;
    
        [DataMember]
        public string SitCodEstr
        {
            get { return _sitCodEstr; }
            set
            {
                if (_sitCodEstr != value)
                {
                    _sitCodEstr = value;
                    OnPropertyChanged("SitCodEstr");
                }
            }
        }
        private string _sitCodEstr;
    
        [DataMember]
        public string DocFinObs
        {
            get { return _docFinObs; }
            set
            {
                if (_docFinObs != value)
                {
                    _docFinObs = value;
                    OnPropertyChanged("DocFinObs");
                }
            }
        }
        private string _docFinObs;
    
        [DataMember]
        public string DocFinIntContab
        {
            get { return _docFinIntContab; }
            set
            {
                if (_docFinIntContab != value)
                {
                    _docFinIntContab = value;
                    OnPropertyChanged("DocFinIntContab");
                }
            }
        }
        private string _docFinIntContab;
    
        [DataMember]
        public string DocFinOrig
        {
            get { return _docFinOrig; }
            set
            {
                if (_docFinOrig != value)
                {
                    _docFinOrig = value;
                    OnPropertyChanged("DocFinOrig");
                }
            }
        }
        private string _docFinOrig;
    
        [DataMember]
        public string TipoLancCod
        {
            get { return _tipoLancCod; }
            set
            {
                if (_tipoLancCod != value)
                {
                    _tipoLancCod = value;
                    OnPropertyChanged("TipoLancCod");
                }
            }
        }
        private string _tipoLancCod;
    
        [DataMember]
        public string DocFinEntCodContato
        {
            get { return _docFinEntCodContato; }
            set
            {
                if (_docFinEntCodContato != value)
                {
                    ChangeTracker.RecordOriginalValue("DocFinEntCodContato", _docFinEntCodContato);
                    if (!IsDeserializing)
                    {
                        if (ENTIDADE2 != null && ENTIDADE2.EntCod != value)
                        {
                            ENTIDADE2 = null;
                        }
                    }
                    _docFinEntCodContato = value;
                    OnPropertyChanged("DocFinEntCodContato");
                }
            }
        }
        private string _docFinEntCodContato;
    
        [DataMember]
        public string TipoPagRecCod
        {
            get { return _tipoPagRecCod; }
            set
            {
                if (_tipoPagRecCod != value)
                {
                    _tipoPagRecCod = value;
                    OnPropertyChanged("TipoPagRecCod");
                }
            }
        }
        private string _tipoPagRecCod;
    
        [DataMember]
        public string ExecOrcamCod
        {
            get { return _execOrcamCod; }
            set
            {
                if (_execOrcamCod != value)
                {
                    _execOrcamCod = value;
                    OnPropertyChanged("ExecOrcamCod");
                }
            }
        }
        private string _execOrcamCod;
    
        [DataMember]
        public string DocFinNumAlt1
        {
            get { return _docFinNumAlt1; }
            set
            {
                if (_docFinNumAlt1 != value)
                {
                    _docFinNumAlt1 = value;
                    OnPropertyChanged("DocFinNumAlt1");
                }
            }
        }
        private string _docFinNumAlt1;
    
        [DataMember]
        public string DocFinNumAlt2
        {
            get { return _docFinNumAlt2; }
            set
            {
                if (_docFinNumAlt2 != value)
                {
                    _docFinNumAlt2 = value;
                    OnPropertyChanged("DocFinNumAlt2");
                }
            }
        }
        private string _docFinNumAlt2;
    
        [DataMember]
        public string DocFinNumAlt3
        {
            get { return _docFinNumAlt3; }
            set
            {
                if (_docFinNumAlt3 != value)
                {
                    _docFinNumAlt3 = value;
                    OnPropertyChanged("DocFinNumAlt3");
                }
            }
        }
        private string _docFinNumAlt3;
    
        [DataMember]
        public decimal DocFinValGer
        {
            get { return _docFinValGer; }
            set
            {
                if (_docFinValGer != value)
                {
                    _docFinValGer = value;
                    OnPropertyChanged("DocFinValGer");
                }
            }
        }
        private decimal _docFinValGer;
    
        [DataMember]
        public string DocFinNumAlt4
        {
            get { return _docFinNumAlt4; }
            set
            {
                if (_docFinNumAlt4 != value)
                {
                    _docFinNumAlt4 = value;
                    OnPropertyChanged("DocFinNumAlt4");
                }
            }
        }
        private string _docFinNumAlt4;
    
        [DataMember]
        public Nullable<decimal> DocFinCartCredTxAdm
        {
            get { return _docFinCartCredTxAdm; }
            set
            {
                if (_docFinCartCredTxAdm != value)
                {
                    _docFinCartCredTxAdm = value;
                    OnPropertyChanged("DocFinCartCredTxAdm");
                }
            }
        }
        private Nullable<decimal> _docFinCartCredTxAdm;
    
        [DataMember]
        public decimal DocFinCartCredTxAdmVal
        {
            get { return _docFinCartCredTxAdmVal; }
            set
            {
                if (_docFinCartCredTxAdmVal != value)
                {
                    _docFinCartCredTxAdmVal = value;
                    OnPropertyChanged("DocFinCartCredTxAdmVal");
                }
            }
        }
        private decimal _docFinCartCredTxAdmVal;
    
        [DataMember]
        public string DocFinCartCredTxAdmDeb
        {
            get { return _docFinCartCredTxAdmDeb; }
            set
            {
                if (_docFinCartCredTxAdmDeb != value)
                {
                    _docFinCartCredTxAdmDeb = value;
                    OnPropertyChanged("DocFinCartCredTxAdmDeb");
                }
            }
        }
        private string _docFinCartCredTxAdmDeb;
    
        [DataMember]
        public string DocFinCartCredTxAdmTot
        {
            get { return _docFinCartCredTxAdmTot; }
            set
            {
                if (_docFinCartCredTxAdmTot != value)
                {
                    _docFinCartCredTxAdmTot = value;
                    OnPropertyChanged("DocFinCartCredTxAdmTot");
                }
            }
        }
        private string _docFinCartCredTxAdmTot;
    
        [DataMember]
        public Nullable<decimal> DocFinIrrfPerc
        {
            get { return _docFinIrrfPerc; }
            set
            {
                if (_docFinIrrfPerc != value)
                {
                    _docFinIrrfPerc = value;
                    OnPropertyChanged("DocFinIrrfPerc");
                }
            }
        }
        private Nullable<decimal> _docFinIrrfPerc;
    
        [DataMember]
        public decimal DocFinIrrfVal
        {
            get { return _docFinIrrfVal; }
            set
            {
                if (_docFinIrrfVal != value)
                {
                    _docFinIrrfVal = value;
                    OnPropertyChanged("DocFinIrrfVal");
                }
            }
        }
        private decimal _docFinIrrfVal;
    
        [DataMember]
        public string DocFinIrrfDed
        {
            get { return _docFinIrrfDed; }
            set
            {
                if (_docFinIrrfDed != value)
                {
                    _docFinIrrfDed = value;
                    OnPropertyChanged("DocFinIrrfDed");
                }
            }
        }
        private string _docFinIrrfDed;
    
        [DataMember]
        public Nullable<int> DocFinIrrfChv
        {
            get { return _docFinIrrfChv; }
            set
            {
                if (_docFinIrrfChv != value)
                {
                    _docFinIrrfChv = value;
                    OnPropertyChanged("DocFinIrrfChv");
                }
            }
        }
        private Nullable<int> _docFinIrrfChv;
    
        [DataMember]
        public Nullable<decimal> DocFinINSSPerc
        {
            get { return _docFinINSSPerc; }
            set
            {
                if (_docFinINSSPerc != value)
                {
                    _docFinINSSPerc = value;
                    OnPropertyChanged("DocFinINSSPerc");
                }
            }
        }
        private Nullable<decimal> _docFinINSSPerc;
    
        [DataMember]
        public decimal DocFinINSSVal
        {
            get { return _docFinINSSVal; }
            set
            {
                if (_docFinINSSVal != value)
                {
                    _docFinINSSVal = value;
                    OnPropertyChanged("DocFinINSSVal");
                }
            }
        }
        private decimal _docFinINSSVal;
    
        [DataMember]
        public string DocFinInssDed
        {
            get { return _docFinInssDed; }
            set
            {
                if (_docFinInssDed != value)
                {
                    _docFinInssDed = value;
                    OnPropertyChanged("DocFinInssDed");
                }
            }
        }
        private string _docFinInssDed;
    
        [DataMember]
        public Nullable<int> DocFinINSSChv
        {
            get { return _docFinINSSChv; }
            set
            {
                if (_docFinINSSChv != value)
                {
                    _docFinINSSChv = value;
                    OnPropertyChanged("DocFinINSSChv");
                }
            }
        }
        private Nullable<int> _docFinINSSChv;
    
        [DataMember]
        public Nullable<decimal> DocFinISSPerc
        {
            get { return _docFinISSPerc; }
            set
            {
                if (_docFinISSPerc != value)
                {
                    _docFinISSPerc = value;
                    OnPropertyChanged("DocFinISSPerc");
                }
            }
        }
        private Nullable<decimal> _docFinISSPerc;
    
        [DataMember]
        public decimal DocFinISSVal
        {
            get { return _docFinISSVal; }
            set
            {
                if (_docFinISSVal != value)
                {
                    _docFinISSVal = value;
                    OnPropertyChanged("DocFinISSVal");
                }
            }
        }
        private decimal _docFinISSVal;
    
        [DataMember]
        public string DocFinIssDed
        {
            get { return _docFinIssDed; }
            set
            {
                if (_docFinIssDed != value)
                {
                    _docFinIssDed = value;
                    OnPropertyChanged("DocFinIssDed");
                }
            }
        }
        private string _docFinIssDed;
    
        [DataMember]
        public Nullable<int> DocFinISSChv
        {
            get { return _docFinISSChv; }
            set
            {
                if (_docFinISSChv != value)
                {
                    _docFinISSChv = value;
                    OnPropertyChanged("DocFinISSChv");
                }
            }
        }
        private Nullable<int> _docFinISSChv;
    
        [DataMember]
        public decimal DocFinMultaDivergVal
        {
            get { return _docFinMultaDivergVal; }
            set
            {
                if (_docFinMultaDivergVal != value)
                {
                    _docFinMultaDivergVal = value;
                    OnPropertyChanged("DocFinMultaDivergVal");
                }
            }
        }
        private decimal _docFinMultaDivergVal;
    
        [DataMember]
        public string DocFinMultaDivergOper
        {
            get { return _docFinMultaDivergOper; }
            set
            {
                if (_docFinMultaDivergOper != value)
                {
                    _docFinMultaDivergOper = value;
                    OnPropertyChanged("DocFinMultaDivergOper");
                }
            }
        }
        private string _docFinMultaDivergOper;
    
        [DataMember]
        public Nullable<int> DocFinMultaDivergChv
        {
            get { return _docFinMultaDivergChv; }
            set
            {
                if (_docFinMultaDivergChv != value)
                {
                    _docFinMultaDivergChv = value;
                    OnPropertyChanged("DocFinMultaDivergChv");
                }
            }
        }
        private Nullable<int> _docFinMultaDivergChv;
    
        [DataMember]
        public decimal DocFinGlosaVal
        {
            get { return _docFinGlosaVal; }
            set
            {
                if (_docFinGlosaVal != value)
                {
                    _docFinGlosaVal = value;
                    OnPropertyChanged("DocFinGlosaVal");
                }
            }
        }
        private decimal _docFinGlosaVal;
    
        [DataMember]
        public string DocFinGlosaOper
        {
            get { return _docFinGlosaOper; }
            set
            {
                if (_docFinGlosaOper != value)
                {
                    _docFinGlosaOper = value;
                    OnPropertyChanged("DocFinGlosaOper");
                }
            }
        }
        private string _docFinGlosaOper;
    
        [DataMember]
        public Nullable<int> DocFinGlosaChv
        {
            get { return _docFinGlosaChv; }
            set
            {
                if (_docFinGlosaChv != value)
                {
                    _docFinGlosaChv = value;
                    OnPropertyChanged("DocFinGlosaChv");
                }
            }
        }
        private Nullable<int> _docFinGlosaChv;
    
        [DataMember]
        public decimal DocFinValorLib
        {
            get { return _docFinValorLib; }
            set
            {
                if (_docFinValorLib != value)
                {
                    _docFinValorLib = value;
                    OnPropertyChanged("DocFinValorLib");
                }
            }
        }
        private decimal _docFinValorLib;
    
        [DataMember]
        public string DocFinDebAutom
        {
            get { return _docFinDebAutom; }
            set
            {
                if (_docFinDebAutom != value)
                {
                    _docFinDebAutom = value;
                    OnPropertyChanged("DocFinDebAutom");
                }
            }
        }
        private string _docFinDebAutom;
    
        [DataMember]
        public string ContratoNum
        {
            get { return _contratoNum; }
            set
            {
                if (_contratoNum != value)
                {
                    _contratoNum = value;
                    OnPropertyChanged("ContratoNum");
                }
            }
        }
        private string _contratoNum;
    
        [DataMember]
        public Nullable<short> ItExecOrcamSeq
        {
            get { return _itExecOrcamSeq; }
            set
            {
                if (_itExecOrcamSeq != value)
                {
                    _itExecOrcamSeq = value;
                    OnPropertyChanged("ItExecOrcamSeq");
                }
            }
        }
        private Nullable<short> _itExecOrcamSeq;
    
        [DataMember]
        public string DocFinIdentDoc
        {
            get { return _docFinIdentDoc; }
            set
            {
                if (_docFinIdentDoc != value)
                {
                    _docFinIdentDoc = value;
                    OnPropertyChanged("DocFinIdentDoc");
                }
            }
        }
        private string _docFinIdentDoc;
    
        [DataMember]
        public Nullable<System.DateTime> DocFinDataDoc
        {
            get { return _docFinDataDoc; }
            set
            {
                if (_docFinDataDoc != value)
                {
                    _docFinDataDoc = value;
                    OnPropertyChanged("DocFinDataDoc");
                }
            }
        }
        private Nullable<System.DateTime> _docFinDataDoc;
    
        [DataMember]
        public string DocFinEmissorDoc
        {
            get { return _docFinEmissorDoc; }
            set
            {
                if (_docFinEmissorDoc != value)
                {
                    _docFinEmissorDoc = value;
                    OnPropertyChanged("DocFinEmissorDoc");
                }
            }
        }
        private string _docFinEmissorDoc;
    
        [DataMember]
        public string DocFinNumProtoc
        {
            get { return _docFinNumProtoc; }
            set
            {
                if (_docFinNumProtoc != value)
                {
                    _docFinNumProtoc = value;
                    OnPropertyChanged("DocFinNumProtoc");
                }
            }
        }
        private string _docFinNumProtoc;
    
        [DataMember]
        public Nullable<System.DateTime> DocFinDataProtoc
        {
            get { return _docFinDataProtoc; }
            set
            {
                if (_docFinDataProtoc != value)
                {
                    _docFinDataProtoc = value;
                    OnPropertyChanged("DocFinDataProtoc");
                }
            }
        }
        private Nullable<System.DateTime> _docFinDataProtoc;
    
        [DataMember]
        public Nullable<int> DocFinRetCaucChv
        {
            get { return _docFinRetCaucChv; }
            set
            {
                if (_docFinRetCaucChv != value)
                {
                    _docFinRetCaucChv = value;
                    OnPropertyChanged("DocFinRetCaucChv");
                }
            }
        }
        private Nullable<int> _docFinRetCaucChv;
    
        [DataMember]
        public Nullable<int> DocFinMultaChv
        {
            get { return _docFinMultaChv; }
            set
            {
                if (_docFinMultaChv != value)
                {
                    _docFinMultaChv = value;
                    OnPropertyChanged("DocFinMultaChv");
                }
            }
        }
        private Nullable<int> _docFinMultaChv;
    
        [DataMember]
        public string DocFinEntNome
        {
            get { return _docFinEntNome; }
            set
            {
                if (_docFinEntNome != value)
                {
                    _docFinEntNome = value;
                    OnPropertyChanged("DocFinEntNome");
                }
            }
        }
        private string _docFinEntNome;
    
        [DataMember]
        public Nullable<System.DateTime> DocFinIrrfDataVenc
        {
            get { return _docFinIrrfDataVenc; }
            set
            {
                if (_docFinIrrfDataVenc != value)
                {
                    _docFinIrrfDataVenc = value;
                    OnPropertyChanged("DocFinIrrfDataVenc");
                }
            }
        }
        private Nullable<System.DateTime> _docFinIrrfDataVenc;
    
        [DataMember]
        public Nullable<System.DateTime> DocFinInssDataVenc
        {
            get { return _docFinInssDataVenc; }
            set
            {
                if (_docFinInssDataVenc != value)
                {
                    _docFinInssDataVenc = value;
                    OnPropertyChanged("DocFinInssDataVenc");
                }
            }
        }
        private Nullable<System.DateTime> _docFinInssDataVenc;
    
        [DataMember]
        public Nullable<System.DateTime> DocFinIssDataVenc
        {
            get { return _docFinIssDataVenc; }
            set
            {
                if (_docFinIssDataVenc != value)
                {
                    _docFinIssDataVenc = value;
                    OnPropertyChanged("DocFinIssDataVenc");
                }
            }
        }
        private Nullable<System.DateTime> _docFinIssDataVenc;
    
        [DataMember]
        public string DocFinIrrfCodReceita
        {
            get { return _docFinIrrfCodReceita; }
            set
            {
                if (_docFinIrrfCodReceita != value)
                {
                    _docFinIrrfCodReceita = value;
                    OnPropertyChanged("DocFinIrrfCodReceita");
                }
            }
        }
        private string _docFinIrrfCodReceita;
    
        [DataMember]
        public string DocFinInssCodReceita
        {
            get { return _docFinInssCodReceita; }
            set
            {
                if (_docFinInssCodReceita != value)
                {
                    _docFinInssCodReceita = value;
                    OnPropertyChanged("DocFinInssCodReceita");
                }
            }
        }
        private string _docFinInssCodReceita;
    
        [DataMember]
        public string DocFinObrig
        {
            get { return _docFinObrig; }
            set
            {
                if (_docFinObrig != value)
                {
                    _docFinObrig = value;
                    OnPropertyChanged("DocFinObrig");
                }
            }
        }
        private string _docFinObrig;
    
        [DataMember]
        public string DocFinNumBilhTur
        {
            get { return _docFinNumBilhTur; }
            set
            {
                if (_docFinNumBilhTur != value)
                {
                    _docFinNumBilhTur = value;
                    OnPropertyChanged("DocFinNumBilhTur");
                }
            }
        }
        private string _docFinNumBilhTur;
    
        [DataMember]
        public string DocFinNumFaturaTur
        {
            get { return _docFinNumFaturaTur; }
            set
            {
                if (_docFinNumFaturaTur != value)
                {
                    _docFinNumFaturaTur = value;
                    OnPropertyChanged("DocFinNumFaturaTur");
                }
            }
        }
        private string _docFinNumFaturaTur;
    
        [DataMember]
        public decimal DocFinValCotacSegInd
        {
            get { return _docFinValCotacSegInd; }
            set
            {
                if (_docFinValCotacSegInd != value)
                {
                    _docFinValCotacSegInd = value;
                    OnPropertyChanged("DocFinValCotacSegInd");
                }
            }
        }
        private decimal _docFinValCotacSegInd;
    
        [DataMember]
        public decimal DocFinValorConvSegInd
        {
            get { return _docFinValorConvSegInd; }
            set
            {
                if (_docFinValorConvSegInd != value)
                {
                    _docFinValorConvSegInd = value;
                    OnPropertyChanged("DocFinValorConvSegInd");
                }
            }
        }
        private decimal _docFinValorConvSegInd;
    
        [DataMember]
        public string CartCredCod
        {
            get { return _cartCredCod; }
            set
            {
                if (_cartCredCod != value)
                {
                    _cartCredCod = value;
                    OnPropertyChanged("CartCredCod");
                }
            }
        }
        private string _cartCredCod;
    
        [DataMember]
        public string DocFinNomeTitCartCred
        {
            get { return _docFinNomeTitCartCred; }
            set
            {
                if (_docFinNomeTitCartCred != value)
                {
                    _docFinNomeTitCartCred = value;
                    OnPropertyChanged("DocFinNomeTitCartCred");
                }
            }
        }
        private string _docFinNomeTitCartCred;
    
        [DataMember]
        public string DocFinAutCartCred
        {
            get { return _docFinAutCartCred; }
            set
            {
                if (_docFinAutCartCred != value)
                {
                    _docFinAutCartCred = value;
                    OnPropertyChanged("DocFinAutCartCred");
                }
            }
        }
        private string _docFinAutCartCred;
    
        [DataMember]
        public string DocFinNumCartCred
        {
            get { return _docFinNumCartCred; }
            set
            {
                if (_docFinNumCartCred != value)
                {
                    _docFinNumCartCred = value;
                    OnPropertyChanged("DocFinNumCartCred");
                }
            }
        }
        private string _docFinNumCartCred;
    
        [DataMember]
        public string DocFinCtrlCartCred
        {
            get { return _docFinCtrlCartCred; }
            set
            {
                if (_docFinCtrlCartCred != value)
                {
                    _docFinCtrlCartCred = value;
                    OnPropertyChanged("DocFinCtrlCartCred");
                }
            }
        }
        private string _docFinCtrlCartCred;
    
        [DataMember]
        public Nullable<System.DateTime> DocFinValidCartCred
        {
            get { return _docFinValidCartCred; }
            set
            {
                if (_docFinValidCartCred != value)
                {
                    _docFinValidCartCred = value;
                    OnPropertyChanged("DocFinValidCartCred");
                }
            }
        }
        private Nullable<System.DateTime> _docFinValidCartCred;
    
        [DataMember]
        public string DocFinNumCompVenda
        {
            get { return _docFinNumCompVenda; }
            set
            {
                if (_docFinNumCompVenda != value)
                {
                    _docFinNumCompVenda = value;
                    OnPropertyChanged("DocFinNumCompVenda");
                }
            }
        }
        private string _docFinNumCompVenda;
    
        [DataMember]
        public string DocFinNumResVenda
        {
            get { return _docFinNumResVenda; }
            set
            {
                if (_docFinNumResVenda != value)
                {
                    _docFinNumResVenda = value;
                    OnPropertyChanged("DocFinNumResVenda");
                }
            }
        }
        private string _docFinNumResVenda;
    
        [DataMember]
        public Nullable<System.DateTime> DocFinCofinsDataVenc
        {
            get { return _docFinCofinsDataVenc; }
            set
            {
                if (_docFinCofinsDataVenc != value)
                {
                    _docFinCofinsDataVenc = value;
                    OnPropertyChanged("DocFinCofinsDataVenc");
                }
            }
        }
        private Nullable<System.DateTime> _docFinCofinsDataVenc;
    
        [DataMember]
        public string DocFinCofinsCodReceita
        {
            get { return _docFinCofinsCodReceita; }
            set
            {
                if (_docFinCofinsCodReceita != value)
                {
                    _docFinCofinsCodReceita = value;
                    OnPropertyChanged("DocFinCofinsCodReceita");
                }
            }
        }
        private string _docFinCofinsCodReceita;
    
        [DataMember]
        public Nullable<decimal> DocFinCofinsPerc
        {
            get { return _docFinCofinsPerc; }
            set
            {
                if (_docFinCofinsPerc != value)
                {
                    _docFinCofinsPerc = value;
                    OnPropertyChanged("DocFinCofinsPerc");
                }
            }
        }
        private Nullable<decimal> _docFinCofinsPerc;
    
        [DataMember]
        public decimal DocFinCofinsVal
        {
            get { return _docFinCofinsVal; }
            set
            {
                if (_docFinCofinsVal != value)
                {
                    _docFinCofinsVal = value;
                    OnPropertyChanged("DocFinCofinsVal");
                }
            }
        }
        private decimal _docFinCofinsVal;
    
        [DataMember]
        public string DocFinCofinsDed
        {
            get { return _docFinCofinsDed; }
            set
            {
                if (_docFinCofinsDed != value)
                {
                    _docFinCofinsDed = value;
                    OnPropertyChanged("DocFinCofinsDed");
                }
            }
        }
        private string _docFinCofinsDed;
    
        [DataMember]
        public Nullable<int> DocFinCofinsChv
        {
            get { return _docFinCofinsChv; }
            set
            {
                if (_docFinCofinsChv != value)
                {
                    ChangeTracker.RecordOriginalValue("DocFinCofinsChv", _docFinCofinsChv);
                    if (!IsDeserializing)
                    {
                        if (DOC_FIN4 != null && DOC_FIN4.DocFinChv != value)
                        {
                            var previousValue = _dOC_FIN4;
                            _dOC_FIN4 = null;
                            FixupDOC_FIN4(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("DOC_FIN4");
                        }
                    }
                    _docFinCofinsChv = value;
                    OnPropertyChanged("DocFinCofinsChv");
                }
            }
        }
        private Nullable<int> _docFinCofinsChv;
    
        [DataMember]
        public Nullable<System.DateTime> DocFinPisDataVenc
        {
            get { return _docFinPisDataVenc; }
            set
            {
                if (_docFinPisDataVenc != value)
                {
                    _docFinPisDataVenc = value;
                    OnPropertyChanged("DocFinPisDataVenc");
                }
            }
        }
        private Nullable<System.DateTime> _docFinPisDataVenc;
    
        [DataMember]
        public string DocFinPisCodReceita
        {
            get { return _docFinPisCodReceita; }
            set
            {
                if (_docFinPisCodReceita != value)
                {
                    _docFinPisCodReceita = value;
                    OnPropertyChanged("DocFinPisCodReceita");
                }
            }
        }
        private string _docFinPisCodReceita;
    
        [DataMember]
        public Nullable<decimal> DocFinPisPerc
        {
            get { return _docFinPisPerc; }
            set
            {
                if (_docFinPisPerc != value)
                {
                    _docFinPisPerc = value;
                    OnPropertyChanged("DocFinPisPerc");
                }
            }
        }
        private Nullable<decimal> _docFinPisPerc;
    
        [DataMember]
        public decimal DocFinPisVal
        {
            get { return _docFinPisVal; }
            set
            {
                if (_docFinPisVal != value)
                {
                    _docFinPisVal = value;
                    OnPropertyChanged("DocFinPisVal");
                }
            }
        }
        private decimal _docFinPisVal;
    
        [DataMember]
        public string DocFinPisDed
        {
            get { return _docFinPisDed; }
            set
            {
                if (_docFinPisDed != value)
                {
                    _docFinPisDed = value;
                    OnPropertyChanged("DocFinPisDed");
                }
            }
        }
        private string _docFinPisDed;
    
        [DataMember]
        public Nullable<int> DocFinPisChv
        {
            get { return _docFinPisChv; }
            set
            {
                if (_docFinPisChv != value)
                {
                    ChangeTracker.RecordOriginalValue("DocFinPisChv", _docFinPisChv);
                    if (!IsDeserializing)
                    {
                        if (DOC_FIN3 != null && DOC_FIN3.DocFinChv != value)
                        {
                            var previousValue = _dOC_FIN3;
                            _dOC_FIN3 = null;
                            FixupDOC_FIN3(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("DOC_FIN3");
                        }
                    }
                    _docFinPisChv = value;
                    OnPropertyChanged("DocFinPisChv");
                }
            }
        }
        private Nullable<int> _docFinPisChv;
    
        [DataMember]
        public Nullable<System.DateTime> DocFinCsllDataVenc
        {
            get { return _docFinCsllDataVenc; }
            set
            {
                if (_docFinCsllDataVenc != value)
                {
                    _docFinCsllDataVenc = value;
                    OnPropertyChanged("DocFinCsllDataVenc");
                }
            }
        }
        private Nullable<System.DateTime> _docFinCsllDataVenc;
    
        [DataMember]
        public string DocFinCsllCodReceita
        {
            get { return _docFinCsllCodReceita; }
            set
            {
                if (_docFinCsllCodReceita != value)
                {
                    _docFinCsllCodReceita = value;
                    OnPropertyChanged("DocFinCsllCodReceita");
                }
            }
        }
        private string _docFinCsllCodReceita;
    
        [DataMember]
        public Nullable<decimal> DocFinCsllPerc
        {
            get { return _docFinCsllPerc; }
            set
            {
                if (_docFinCsllPerc != value)
                {
                    _docFinCsllPerc = value;
                    OnPropertyChanged("DocFinCsllPerc");
                }
            }
        }
        private Nullable<decimal> _docFinCsllPerc;
    
        [DataMember]
        public decimal DocFinCsllVal
        {
            get { return _docFinCsllVal; }
            set
            {
                if (_docFinCsllVal != value)
                {
                    _docFinCsllVal = value;
                    OnPropertyChanged("DocFinCsllVal");
                }
            }
        }
        private decimal _docFinCsllVal;
    
        [DataMember]
        public string DocFinCsllDed
        {
            get { return _docFinCsllDed; }
            set
            {
                if (_docFinCsllDed != value)
                {
                    _docFinCsllDed = value;
                    OnPropertyChanged("DocFinCsllDed");
                }
            }
        }
        private string _docFinCsllDed;
    
        [DataMember]
        public Nullable<int> DocFinCsllChv
        {
            get { return _docFinCsllChv; }
            set
            {
                if (_docFinCsllChv != value)
                {
                    ChangeTracker.RecordOriginalValue("DocFinCsllChv", _docFinCsllChv);
                    if (!IsDeserializing)
                    {
                        if (DOC_FIN2 != null && DOC_FIN2.DocFinChv != value)
                        {
                            var previousValue = _dOC_FIN2;
                            _dOC_FIN2 = null;
                            FixupDOC_FIN2(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("DOC_FIN2");
                        }
                    }
                    _docFinCsllChv = value;
                    OnPropertyChanged("DocFinCsllChv");
                }
            }
        }
        private Nullable<int> _docFinCsllChv;
    
        [DataMember]
        public string CtrlComisVendNum
        {
            get { return _ctrlComisVendNum; }
            set
            {
                if (_ctrlComisVendNum != value)
                {
                    _ctrlComisVendNum = value;
                    OnPropertyChanged("CtrlComisVendNum");
                }
            }
        }
        private string _ctrlComisVendNum;
    
        [DataMember]
        public string NatOpCodEstr
        {
            get { return _natOpCodEstr; }
            set
            {
                if (_natOpCodEstr != value)
                {
                    ChangeTracker.RecordOriginalValue("NatOpCodEstr", _natOpCodEstr);
                    if (!IsDeserializing)
                    {
                        if (NAT_OPERACAO != null && NAT_OPERACAO.NatOpCodEstr != value)
                        {
                            NAT_OPERACAO = null;
                        }
                    }
                    _natOpCodEstr = value;
                    OnPropertyChanged("NatOpCodEstr");
                }
            }
        }
        private string _natOpCodEstr;
    
        [DataMember]
        public string DocFinIntegFisc
        {
            get { return _docFinIntegFisc; }
            set
            {
                if (_docFinIntegFisc != value)
                {
                    _docFinIntegFisc = value;
                    OnPropertyChanged("DocFinIntegFisc");
                }
            }
        }
        private string _docFinIntegFisc;
    
        [DataMember]
        public string UsuCod
        {
            get { return _usuCod; }
            set
            {
                if (_usuCod != value)
                {
                    _usuCod = value;
                    OnPropertyChanged("UsuCod");
                }
            }
        }
        private string _usuCod;
    
        [DataMember]
        public Nullable<System.DateTime> DocFinDataEntrega
        {
            get { return _docFinDataEntrega; }
            set
            {
                if (_docFinDataEntrega != value)
                {
                    _docFinDataEntrega = value;
                    OnPropertyChanged("DocFinDataEntrega");
                }
            }
        }
        private Nullable<System.DateTime> _docFinDataEntrega;
    
        [DataMember]
        public string USERVendCod
        {
            get { return _uSERVendCod; }
            set
            {
                if (_uSERVendCod != value)
                {
                    _uSERVendCod = value;
                    OnPropertyChanged("USERVendCod");
                }
            }
        }
        private string _uSERVendCod;
    
        [DataMember]
        public Nullable<decimal> USERPedVendComiss
        {
            get { return _uSERPedVendComiss; }
            set
            {
                if (_uSERPedVendComiss != value)
                {
                    _uSERPedVendComiss = value;
                    OnPropertyChanged("USERPedVendComiss");
                }
            }
        }
        private Nullable<decimal> _uSERPedVendComiss;
    
        [DataMember]
        public string ImpTipoCofins
        {
            get { return _impTipoCofins; }
            set
            {
                if (_impTipoCofins != value)
                {
                    _impTipoCofins = value;
                    OnPropertyChanged("ImpTipoCofins");
                }
            }
        }
        private string _impTipoCofins;
    
        [DataMember]
        public string ImpCodReceitaCofins
        {
            get { return _impCodReceitaCofins; }
            set
            {
                if (_impCodReceitaCofins != value)
                {
                    _impCodReceitaCofins = value;
                    OnPropertyChanged("ImpCodReceitaCofins");
                }
            }
        }
        private string _impCodReceitaCofins;
    
        [DataMember]
        public string ImpTipoCsll
        {
            get { return _impTipoCsll; }
            set
            {
                if (_impTipoCsll != value)
                {
                    _impTipoCsll = value;
                    OnPropertyChanged("ImpTipoCsll");
                }
            }
        }
        private string _impTipoCsll;
    
        [DataMember]
        public string ImpCodReceitaCsll
        {
            get { return _impCodReceitaCsll; }
            set
            {
                if (_impCodReceitaCsll != value)
                {
                    _impCodReceitaCsll = value;
                    OnPropertyChanged("ImpCodReceitaCsll");
                }
            }
        }
        private string _impCodReceitaCsll;
    
        [DataMember]
        public string ImpTipoPis
        {
            get { return _impTipoPis; }
            set
            {
                if (_impTipoPis != value)
                {
                    _impTipoPis = value;
                    OnPropertyChanged("ImpTipoPis");
                }
            }
        }
        private string _impTipoPis;
    
        [DataMember]
        public string ImpCodReceitaPis
        {
            get { return _impCodReceitaPis; }
            set
            {
                if (_impCodReceitaPis != value)
                {
                    _impCodReceitaPis = value;
                    OnPropertyChanged("ImpCodReceitaPis");
                }
            }
        }
        private string _impCodReceitaPis;
    
        [DataMember]
        public string ImpTipoIrrf
        {
            get { return _impTipoIrrf; }
            set
            {
                if (_impTipoIrrf != value)
                {
                    _impTipoIrrf = value;
                    OnPropertyChanged("ImpTipoIrrf");
                }
            }
        }
        private string _impTipoIrrf;
    
        [DataMember]
        public string ImpCodReceitaIrrf
        {
            get { return _impCodReceitaIrrf; }
            set
            {
                if (_impCodReceitaIrrf != value)
                {
                    _impCodReceitaIrrf = value;
                    OnPropertyChanged("ImpCodReceitaIrrf");
                }
            }
        }
        private string _impCodReceitaIrrf;
    
        [DataMember]
        public string ImpTipoInss
        {
            get { return _impTipoInss; }
            set
            {
                if (_impTipoInss != value)
                {
                    _impTipoInss = value;
                    OnPropertyChanged("ImpTipoInss");
                }
            }
        }
        private string _impTipoInss;
    
        [DataMember]
        public string ImpCodReceitaInss
        {
            get { return _impCodReceitaInss; }
            set
            {
                if (_impCodReceitaInss != value)
                {
                    _impCodReceitaInss = value;
                    OnPropertyChanged("ImpCodReceitaInss");
                }
            }
        }
        private string _impCodReceitaInss;
    
        [DataMember]
        public string DocFinEntCodLc
        {
            get { return _docFinEntCodLc; }
            set
            {
                if (_docFinEntCodLc != value)
                {
                    ChangeTracker.RecordOriginalValue("DocFinEntCodLc", _docFinEntCodLc);
                    if (!IsDeserializing)
                    {
                        if (ENTIDADE != null && ENTIDADE.EntCod != value)
                        {
                            ENTIDADE = null;
                        }
                    }
                    _docFinEntCodLc = value;
                    OnPropertyChanged("DocFinEntCodLc");
                }
            }
        }
        private string _docFinEntCodLc;
    
        [DataMember]
        public string DocFinTipoParc
        {
            get { return _docFinTipoParc; }
            set
            {
                if (_docFinTipoParc != value)
                {
                    _docFinTipoParc = value;
                    OnPropertyChanged("DocFinTipoParc");
                }
            }
        }
        private string _docFinTipoParc;
    
        [DataMember]
        public decimal DocFinBasePisCofinsCsllRF
        {
            get { return _docFinBasePisCofinsCsllRF; }
            set
            {
                if (_docFinBasePisCofinsCsllRF != value)
                {
                    _docFinBasePisCofinsCsllRF = value;
                    OnPropertyChanged("DocFinBasePisCofinsCsllRF");
                }
            }
        }
        private decimal _docFinBasePisCofinsCsllRF;
    
        [DataMember]
        public decimal DocFinBaseIrrf
        {
            get { return _docFinBaseIrrf; }
            set
            {
                if (_docFinBaseIrrf != value)
                {
                    _docFinBaseIrrf = value;
                    OnPropertyChanged("DocFinBaseIrrf");
                }
            }
        }
        private decimal _docFinBaseIrrf;
    
        [DataMember]
        public decimal DocFinBaseInss
        {
            get { return _docFinBaseInss; }
            set
            {
                if (_docFinBaseInss != value)
                {
                    _docFinBaseInss = value;
                    OnPropertyChanged("DocFinBaseInss");
                }
            }
        }
        private decimal _docFinBaseInss;
    
        [DataMember]
        public decimal DocFinBaseIss
        {
            get { return _docFinBaseIss; }
            set
            {
                if (_docFinBaseIss != value)
                {
                    _docFinBaseIss = value;
                    OnPropertyChanged("DocFinBaseIss");
                }
            }
        }
        private decimal _docFinBaseIss;
    
        [DataMember]
        public decimal DocFinPisRFVal
        {
            get { return _docFinPisRFVal; }
            set
            {
                if (_docFinPisRFVal != value)
                {
                    _docFinPisRFVal = value;
                    OnPropertyChanged("DocFinPisRFVal");
                }
            }
        }
        private decimal _docFinPisRFVal;
    
        [DataMember]
        public decimal DocFinCofinsRFVal
        {
            get { return _docFinCofinsRFVal; }
            set
            {
                if (_docFinCofinsRFVal != value)
                {
                    _docFinCofinsRFVal = value;
                    OnPropertyChanged("DocFinCofinsRFVal");
                }
            }
        }
        private decimal _docFinCofinsRFVal;
    
        [DataMember]
        public decimal DocFinCsllRFVal
        {
            get { return _docFinCsllRFVal; }
            set
            {
                if (_docFinCsllRFVal != value)
                {
                    _docFinCsllRFVal = value;
                    OnPropertyChanged("DocFinCsllRFVal");
                }
            }
        }
        private decimal _docFinCsllRFVal;
    
        [DataMember]
        public decimal DocFinValDev
        {
            get { return _docFinValDev; }
            set
            {
                if (_docFinValDev != value)
                {
                    _docFinValDev = value;
                    OnPropertyChanged("DocFinValDev");
                }
            }
        }
        private decimal _docFinValDev;
    
        [DataMember]
        public Nullable<System.DateTime> DocFinDataDev
        {
            get { return _docFinDataDev; }
            set
            {
                if (_docFinDataDev != value)
                {
                    _docFinDataDev = value;
                    OnPropertyChanged("DocFinDataDev");
                }
            }
        }
        private Nullable<System.DateTime> _docFinDataDev;
    
        [DataMember]
        public string DOCFINNUMALTCARTCRED
        {
            get { return _dOCFINNUMALTCARTCRED; }
            set
            {
                if (_dOCFINNUMALTCARTCRED != value)
                {
                    _dOCFINNUMALTCARTCRED = value;
                    OnPropertyChanged("DOCFINNUMALTCARTCRED");
                }
            }
        }
        private string _dOCFINNUMALTCARTCRED;
    
        [DataMember]
        public decimal DocFinValOutrasEnt
        {
            get { return _docFinValOutrasEnt; }
            set
            {
                if (_docFinValOutrasEnt != value)
                {
                    _docFinValOutrasEnt = value;
                    OnPropertyChanged("DocFinValOutrasEnt");
                }
            }
        }
        private decimal _docFinValOutrasEnt;
    
        [DataMember]
        public string DocFinGeraProjProxAno
        {
            get { return _docFinGeraProjProxAno; }
            set
            {
                if (_docFinGeraProjProxAno != value)
                {
                    _docFinGeraProjProxAno = value;
                    OnPropertyChanged("DocFinGeraProjProxAno");
                }
            }
        }
        private string _docFinGeraProjProxAno;
    
        [DataMember]
        public string DocFinNumCancCartCred
        {
            get { return _docFinNumCancCartCred; }
            set
            {
                if (_docFinNumCancCartCred != value)
                {
                    _docFinNumCancCartCred = value;
                    OnPropertyChanged("DocFinNumCancCartCred");
                }
            }
        }
        private string _docFinNumCancCartCred;
    
        [DataMember]
        public Nullable<System.DateTime> DocFinPerApurImp
        {
            get { return _docFinPerApurImp; }
            set
            {
                if (_docFinPerApurImp != value)
                {
                    _docFinPerApurImp = value;
                    OnPropertyChanged("DocFinPerApurImp");
                }
            }
        }
        private Nullable<System.DateTime> _docFinPerApurImp;
    
        [DataMember]
        public string DocFinBloqueado
        {
            get { return _docFinBloqueado; }
            set
            {
                if (_docFinBloqueado != value)
                {
                    _docFinBloqueado = value;
                    OnPropertyChanged("DocFinBloqueado");
                }
            }
        }
        private string _docFinBloqueado;
    
        [DataMember]
        public string DocFinMotivoBloqueio
        {
            get { return _docFinMotivoBloqueio; }
            set
            {
                if (_docFinMotivoBloqueio != value)
                {
                    _docFinMotivoBloqueio = value;
                    OnPropertyChanged("DocFinMotivoBloqueio");
                }
            }
        }
        private string _docFinMotivoBloqueio;
    
        [DataMember]
        public string DocFinUsuCodLibBloq
        {
            get { return _docFinUsuCodLibBloq; }
            set
            {
                if (_docFinUsuCodLibBloq != value)
                {
                    _docFinUsuCodLibBloq = value;
                    OnPropertyChanged("DocFinUsuCodLibBloq");
                }
            }
        }
        private string _docFinUsuCodLibBloq;
    
        [DataMember]
        public Nullable<System.DateTime> DocFinDataLibBloq
        {
            get { return _docFinDataLibBloq; }
            set
            {
                if (_docFinDataLibBloq != value)
                {
                    _docFinDataLibBloq = value;
                    OnPropertyChanged("DocFinDataLibBloq");
                }
            }
        }
        private Nullable<System.DateTime> _docFinDataLibBloq;
    
        [DataMember]
        public decimal DocFinValReemb
        {
            get { return _docFinValReemb; }
            set
            {
                if (_docFinValReemb != value)
                {
                    _docFinValReemb = value;
                    OnPropertyChanged("DocFinValReemb");
                }
            }
        }
        private decimal _docFinValReemb;
    
        [DataMember]
        public string DocFinDedValReemb
        {
            get { return _docFinDedValReemb; }
            set
            {
                if (_docFinDedValReemb != value)
                {
                    _docFinDedValReemb = value;
                    OnPropertyChanged("DocFinDedValReemb");
                }
            }
        }
        private string _docFinDedValReemb;
    
        [DataMember]
        public Nullable<short> ParcPagContratoSeq
        {
            get { return _parcPagContratoSeq; }
            set
            {
                if (_parcPagContratoSeq != value)
                {
                    _parcPagContratoSeq = value;
                    OnPropertyChanged("ParcPagContratoSeq");
                }
            }
        }
        private Nullable<short> _parcPagContratoSeq;
    
        [DataMember]
        public Nullable<decimal> DocFinValDescCond
        {
            get { return _docFinValDescCond; }
            set
            {
                if (_docFinValDescCond != value)
                {
                    _docFinValDescCond = value;
                    OnPropertyChanged("DocFinValDescCond");
                }
            }
        }
        private Nullable<decimal> _docFinValDescCond;
    
        [DataMember]
        public string DocFinUtilComis
        {
            get { return _docFinUtilComis; }
            set
            {
                if (_docFinUtilComis != value)
                {
                    _docFinUtilComis = value;
                    OnPropertyChanged("DocFinUtilComis");
                }
            }
        }
        private string _docFinUtilComis;
    
        [DataMember]
        public decimal DocFinICMSSTVal
        {
            get { return _docFinICMSSTVal; }
            set
            {
                if (_docFinICMSSTVal != value)
                {
                    _docFinICMSSTVal = value;
                    OnPropertyChanged("DocFinICMSSTVal");
                }
            }
        }
        private decimal _docFinICMSSTVal;
    
        [DataMember]
        public string DocFinICMSSTDed
        {
            get { return _docFinICMSSTDed; }
            set
            {
                if (_docFinICMSSTDed != value)
                {
                    _docFinICMSSTDed = value;
                    OnPropertyChanged("DocFinICMSSTDed");
                }
            }
        }
        private string _docFinICMSSTDed;
    
        [DataMember]
        public decimal DocFinFunruralVal
        {
            get { return _docFinFunruralVal; }
            set
            {
                if (_docFinFunruralVal != value)
                {
                    _docFinFunruralVal = value;
                    OnPropertyChanged("DocFinFunruralVal");
                }
            }
        }
        private decimal _docFinFunruralVal;
    
        [DataMember]
        public string DocFinFunruralDed
        {
            get { return _docFinFunruralDed; }
            set
            {
                if (_docFinFunruralDed != value)
                {
                    _docFinFunruralDed = value;
                    OnPropertyChanged("DocFinFunruralDed");
                }
            }
        }
        private string _docFinFunruralDed;
    
        [DataMember]
        public Nullable<decimal> DocFinJurBancPerc
        {
            get { return _docFinJurBancPerc; }
            set
            {
                if (_docFinJurBancPerc != value)
                {
                    _docFinJurBancPerc = value;
                    OnPropertyChanged("DocFinJurBancPerc");
                }
            }
        }
        private Nullable<decimal> _docFinJurBancPerc;
    
        [DataMember]
        public decimal DocFinJurBancVal
        {
            get { return _docFinJurBancVal; }
            set
            {
                if (_docFinJurBancVal != value)
                {
                    _docFinJurBancVal = value;
                    OnPropertyChanged("DocFinJurBancVal");
                }
            }
        }
        private decimal _docFinJurBancVal;
    
        [DataMember]
        public string DocFinJurBancDeb
        {
            get { return _docFinJurBancDeb; }
            set
            {
                if (_docFinJurBancDeb != value)
                {
                    _docFinJurBancDeb = value;
                    OnPropertyChanged("DocFinJurBancDeb");
                }
            }
        }
        private string _docFinJurBancDeb;
    
        [DataMember]
        public string DocFinJurBancTot
        {
            get { return _docFinJurBancTot; }
            set
            {
                if (_docFinJurBancTot != value)
                {
                    _docFinJurBancTot = value;
                    OnPropertyChanged("DocFinJurBancTot");
                }
            }
        }
        private string _docFinJurBancTot;
    
        [DataMember]
        public string CidCod
        {
            get { return _cidCod; }
            set
            {
                if (_cidCod != value)
                {
                    ChangeTracker.RecordOriginalValue("CidCod", _cidCod);
                    if (!IsDeserializing)
                    {
                        if (CIDADE != null && CIDADE.CidCod != value)
                        {
                            CIDADE = null;
                        }
                    }
                    _cidCod = value;
                    OnPropertyChanged("CidCod");
                }
            }
        }
        private string _cidCod;
    
        [DataMember]
        public string DocFinEmpCodMovEstq
        {
            get { return _docFinEmpCodMovEstq; }
            set
            {
                if (_docFinEmpCodMovEstq != value)
                {
                    ChangeTracker.RecordOriginalValue("DocFinEmpCodMovEstq", _docFinEmpCodMovEstq);
                    if (!IsDeserializing)
                    {
                        if (MOV_ESTQ != null && MOV_ESTQ.EmpCod != value)
                        {
                            var previousValue = _mOV_ESTQ;
                            _mOV_ESTQ = null;
                            FixupMOV_ESTQ(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("MOV_ESTQ");
                        }
                    }
                    _docFinEmpCodMovEstq = value;
                    OnPropertyChanged("DocFinEmpCodMovEstq");
                }
            }
        }
        private string _docFinEmpCodMovEstq;
    
        [DataMember]
        public Nullable<int> DocFinChvMovEstq
        {
            get { return _docFinChvMovEstq; }
            set
            {
                if (_docFinChvMovEstq != value)
                {
                    ChangeTracker.RecordOriginalValue("DocFinChvMovEstq", _docFinChvMovEstq);
                    if (!IsDeserializing)
                    {
                        if (MOV_ESTQ != null && MOV_ESTQ.MovEstqChv != value)
                        {
                            var previousValue = _mOV_ESTQ;
                            _mOV_ESTQ = null;
                            FixupMOV_ESTQ(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("MOV_ESTQ");
                        }
                    }
                    _docFinChvMovEstq = value;
                    OnPropertyChanged("DocFinChvMovEstq");
                }
            }
        }
        private Nullable<int> _docFinChvMovEstq;
    
        [DataMember]
        public Nullable<decimal> DocFinGlosaAdVal
        {
            get { return _docFinGlosaAdVal; }
            set
            {
                if (_docFinGlosaAdVal != value)
                {
                    _docFinGlosaAdVal = value;
                    OnPropertyChanged("DocFinGlosaAdVal");
                }
            }
        }
        private Nullable<decimal> _docFinGlosaAdVal;
    
        [DataMember]
        public Nullable<System.DateTime> DocFinDtGlosa
        {
            get { return _docFinDtGlosa; }
            set
            {
                if (_docFinDtGlosa != value)
                {
                    _docFinDtGlosa = value;
                    OnPropertyChanged("DocFinDtGlosa");
                }
            }
        }
        private Nullable<System.DateTime> _docFinDtGlosa;
    
        [DataMember]
        public Nullable<System.DateTime> DocFinDtGlosaAd
        {
            get { return _docFinDtGlosaAd; }
            set
            {
                if (_docFinDtGlosaAd != value)
                {
                    _docFinDtGlosaAd = value;
                    OnPropertyChanged("DocFinDtGlosaAd");
                }
            }
        }
        private Nullable<System.DateTime> _docFinDtGlosaAd;
    
        [DataMember]
        public string DocFinNumAlt5
        {
            get { return _docFinNumAlt5; }
            set
            {
                if (_docFinNumAlt5 != value)
                {
                    _docFinNumAlt5 = value;
                    OnPropertyChanged("DocFinNumAlt5");
                }
            }
        }
        private string _docFinNumAlt5;
    
        [DataMember]
        public Nullable<System.DateTime> DocFinDtMulta
        {
            get { return _docFinDtMulta; }
            set
            {
                if (_docFinDtMulta != value)
                {
                    _docFinDtMulta = value;
                    OnPropertyChanged("DocFinDtMulta");
                }
            }
        }
        private Nullable<System.DateTime> _docFinDtMulta;
    
        [DataMember]
        public string DocFinAdiant
        {
            get { return _docFinAdiant; }
            set
            {
                if (_docFinAdiant != value)
                {
                    _docFinAdiant = value;
                    OnPropertyChanged("DocFinAdiant");
                }
            }
        }
        private string _docFinAdiant;
    
        [DataMember]
        public decimal DocFinValAdiant
        {
            get { return _docFinValAdiant; }
            set
            {
                if (_docFinValAdiant != value)
                {
                    _docFinValAdiant = value;
                    OnPropertyChanged("DocFinValAdiant");
                }
            }
        }
        private decimal _docFinValAdiant;
    
        [DataMember]
        public decimal DocFinSaldoAdiant
        {
            get { return _docFinSaldoAdiant; }
            set
            {
                if (_docFinSaldoAdiant != value)
                {
                    _docFinSaldoAdiant = value;
                    OnPropertyChanged("DocFinSaldoAdiant");
                }
            }
        }
        private decimal _docFinSaldoAdiant;
    
        [DataMember]
        public string DocFinNomeEmpreend
        {
            get { return _docFinNomeEmpreend; }
            set
            {
                if (_docFinNomeEmpreend != value)
                {
                    _docFinNomeEmpreend = value;
                    OnPropertyChanged("DocFinNomeEmpreend");
                }
            }
        }
        private string _docFinNomeEmpreend;
    
        [DataMember]
        public string DocFinUsuCodAlterDataEnt
        {
            get { return _docFinUsuCodAlterDataEnt; }
            set
            {
                if (_docFinUsuCodAlterDataEnt != value)
                {
                    _docFinUsuCodAlterDataEnt = value;
                    OnPropertyChanged("DocFinUsuCodAlterDataEnt");
                }
            }
        }
        private string _docFinUsuCodAlterDataEnt;
    
        [DataMember]
        public decimal DocFinBasePisCofinsProd
        {
            get { return _docFinBasePisCofinsProd; }
            set
            {
                if (_docFinBasePisCofinsProd != value)
                {
                    _docFinBasePisCofinsProd = value;
                    OnPropertyChanged("DocFinBasePisCofinsProd");
                }
            }
        }
        private decimal _docFinBasePisCofinsProd;
    
        [DataMember]
        public decimal DocFinPisProdRFVal
        {
            get { return _docFinPisProdRFVal; }
            set
            {
                if (_docFinPisProdRFVal != value)
                {
                    _docFinPisProdRFVal = value;
                    OnPropertyChanged("DocFinPisProdRFVal");
                }
            }
        }
        private decimal _docFinPisProdRFVal;
    
        [DataMember]
        public decimal DocFinCofinsProdRFVal
        {
            get { return _docFinCofinsProdRFVal; }
            set
            {
                if (_docFinCofinsProdRFVal != value)
                {
                    _docFinCofinsProdRFVal = value;
                    OnPropertyChanged("DocFinCofinsProdRFVal");
                }
            }
        }
        private decimal _docFinCofinsProdRFVal;
    
        [DataMember]
        public Nullable<System.DateTime> DocFinDtCalcVenc
        {
            get { return _docFinDtCalcVenc; }
            set
            {
                if (_docFinDtCalcVenc != value)
                {
                    _docFinDtCalcVenc = value;
                    OnPropertyChanged("DocFinDtCalcVenc");
                }
            }
        }
        private Nullable<System.DateTime> _docFinDtCalcVenc;
    
        [DataMember]
        public string DocFinNumCpf
        {
            get { return _docFinNumCpf; }
            set
            {
                if (_docFinNumCpf != value)
                {
                    _docFinNumCpf = value;
                    OnPropertyChanged("DocFinNumCpf");
                }
            }
        }
        private string _docFinNumCpf;
    
        [DataMember]
        public string DocFinNomeContrat
        {
            get { return _docFinNomeContrat; }
            set
            {
                if (_docFinNomeContrat != value)
                {
                    _docFinNomeContrat = value;
                    OnPropertyChanged("DocFinNomeContrat");
                }
            }
        }
        private string _docFinNomeContrat;
    
        [DataMember]
        public decimal DocFinValorPrincipal
        {
            get { return _docFinValorPrincipal; }
            set
            {
                if (_docFinValorPrincipal != value)
                {
                    _docFinValorPrincipal = value;
                    OnPropertyChanged("DocFinValorPrincipal");
                }
            }
        }
        private decimal _docFinValorPrincipal;
    
        [DataMember]
        public string DocFinNumProposta
        {
            get { return _docFinNumProposta; }
            set
            {
                if (_docFinNumProposta != value)
                {
                    _docFinNumProposta = value;
                    OnPropertyChanged("DocFinNumProposta");
                }
            }
        }
        private string _docFinNumProposta;
    
        [DataMember]
        public string DocFinNumContrato
        {
            get { return _docFinNumContrato; }
            set
            {
                if (_docFinNumContrato != value)
                {
                    _docFinNumContrato = value;
                    OnPropertyChanged("DocFinNumContrato");
                }
            }
        }
        private string _docFinNumContrato;
    
        [DataMember]
        public string DocFinNumRegistro
        {
            get { return _docFinNumRegistro; }
            set
            {
                if (_docFinNumRegistro != value)
                {
                    _docFinNumRegistro = value;
                    OnPropertyChanged("DocFinNumRegistro");
                }
            }
        }
        private string _docFinNumRegistro;
    
        [DataMember]
        public string DocFinInforGerenc
        {
            get { return _docFinInforGerenc; }
            set
            {
                if (_docFinInforGerenc != value)
                {
                    _docFinInforGerenc = value;
                    OnPropertyChanged("DocFinInforGerenc");
                }
            }
        }
        private string _docFinInforGerenc;
    
        [DataMember]
        public Nullable<int> DocFinQtdPontos
        {
            get { return _docFinQtdPontos; }
            set
            {
                if (_docFinQtdPontos != value)
                {
                    _docFinQtdPontos = value;
                    OnPropertyChanged("DocFinQtdPontos");
                }
            }
        }
        private Nullable<int> _docFinQtdPontos;
    
        [DataMember]
        public string DocFinCtrlItem
        {
            get { return _docFinCtrlItem; }
            set
            {
                if (_docFinCtrlItem != value)
                {
                    _docFinCtrlItem = value;
                    OnPropertyChanged("DocFinCtrlItem");
                }
            }
        }
        private string _docFinCtrlItem;
    
        [DataMember]
        public Nullable<decimal> DocFinBaseICMS
        {
            get { return _docFinBaseICMS; }
            set
            {
                if (_docFinBaseICMS != value)
                {
                    _docFinBaseICMS = value;
                    OnPropertyChanged("DocFinBaseICMS");
                }
            }
        }
        private Nullable<decimal> _docFinBaseICMS;
    
        [DataMember]
        public Nullable<decimal> DocFinValICMS
        {
            get { return _docFinValICMS; }
            set
            {
                if (_docFinValICMS != value)
                {
                    _docFinValICMS = value;
                    OnPropertyChanged("DocFinValICMS");
                }
            }
        }
        private Nullable<decimal> _docFinValICMS;
    
        [DataMember]
        public string DocFinChvNfse
        {
            get { return _docFinChvNfse; }
            set
            {
                if (_docFinChvNfse != value)
                {
                    _docFinChvNfse = value;
                    OnPropertyChanged("DocFinChvNfse");
                }
            }
        }
        private string _docFinChvNfse;
    
        [DataMember]
        public Nullable<decimal> USERValorColaboracaoUnit
        {
            get { return _uSERValorColaboracaoUnit; }
            set
            {
                if (_uSERValorColaboracaoUnit != value)
                {
                    _uSERValorColaboracaoUnit = value;
                    OnPropertyChanged("USERValorColaboracaoUnit");
                }
            }
        }
        private Nullable<decimal> _uSERValorColaboracaoUnit;
    
        [DataMember]
        public string DOCFINAUTPONTOS
        {
            get { return _dOCFINAUTPONTOS; }
            set
            {
                if (_dOCFINAUTPONTOS != value)
                {
                    _dOCFINAUTPONTOS = value;
                    OnPropertyChanged("DOCFINAUTPONTOS");
                }
            }
        }
        private string _dOCFINAUTPONTOS;
    
        [DataMember]
        public string MensagCod
        {
            get { return _mensagCod; }
            set
            {
                if (_mensagCod != value)
                {
                    _mensagCod = value;
                    OnPropertyChanged("MensagCod");
                }
            }
        }
        private string _mensagCod;
    
        [DataMember]
        public Nullable<decimal> DocFinIRRFValRet
        {
            get { return _docFinIRRFValRet; }
            set
            {
                if (_docFinIRRFValRet != value)
                {
                    _docFinIRRFValRet = value;
                    OnPropertyChanged("DocFinIRRFValRet");
                }
            }
        }
        private Nullable<decimal> _docFinIRRFValRet;
    
        [DataMember]
        public Nullable<int> DocFinNumBook
        {
            get { return _docFinNumBook; }
            set
            {
                if (_docFinNumBook != value)
                {
                    _docFinNumBook = value;
                    OnPropertyChanged("DocFinNumBook");
                }
            }
        }
        private Nullable<int> _docFinNumBook;
    
        [DataMember]
        public Nullable<decimal> USERPedVendaComiss2
        {
            get { return _uSERPedVendaComiss2; }
            set
            {
                if (_uSERPedVendaComiss2 != value)
                {
                    _uSERPedVendaComiss2 = value;
                    OnPropertyChanged("USERPedVendaComiss2");
                }
            }
        }
        private Nullable<decimal> _uSERPedVendaComiss2;
    
        [DataMember]
        public string USERVendCod02
        {
            get { return _uSERVendCod02; }
            set
            {
                if (_uSERVendCod02 != value)
                {
                    _uSERVendCod02 = value;
                    OnPropertyChanged("USERVendCod02");
                }
            }
        }
        private string _uSERVendCod02;
    
        [DataMember]
        public Nullable<int> IDOrcamExecIt
        {
            get { return _iDOrcamExecIt; }
            set
            {
                if (_iDOrcamExecIt != value)
                {
                    _iDOrcamExecIt = value;
                    OnPropertyChanged("IDOrcamExecIt");
                }
            }
        }
        private Nullable<int> _iDOrcamExecIt;
    
        [DataMember]
        public string DOCFINORIGEMPCODEST
        {
            get { return _dOCFINORIGEMPCODEST; }
            set
            {
                if (_dOCFINORIGEMPCODEST != value)
                {
                    ChangeTracker.RecordOriginalValue("DOCFINORIGEMPCODEST", _dOCFINORIGEMPCODEST);
                    if (!IsDeserializing)
                    {
                        if (PARC_DOC_FIN != null && PARC_DOC_FIN.EmpCod != value)
                        {
                            var previousValue = _pARC_DOC_FIN;
                            _pARC_DOC_FIN = null;
                            FixupPARC_DOC_FIN(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("PARC_DOC_FIN");
                        }
                    }
                    _dOCFINORIGEMPCODEST = value;
                    OnPropertyChanged("DOCFINORIGEMPCODEST");
                }
            }
        }
        private string _dOCFINORIGEMPCODEST;
    
        [DataMember]
        public Nullable<int> DOCFINORIGESTCHV
        {
            get { return _dOCFINORIGESTCHV; }
            set
            {
                if (_dOCFINORIGESTCHV != value)
                {
                    ChangeTracker.RecordOriginalValue("DOCFINORIGESTCHV", _dOCFINORIGESTCHV);
                    if (!IsDeserializing)
                    {
                        if (PARC_DOC_FIN != null && PARC_DOC_FIN.DocFinChv != value)
                        {
                            var previousValue = _pARC_DOC_FIN;
                            _pARC_DOC_FIN = null;
                            FixupPARC_DOC_FIN(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("PARC_DOC_FIN");
                        }
                    }
                    _dOCFINORIGESTCHV = value;
                    OnPropertyChanged("DOCFINORIGESTCHV");
                }
            }
        }
        private Nullable<int> _dOCFINORIGESTCHV;
    
        [DataMember]
        public Nullable<short> PARCDOCFINSEQORIGEST
        {
            get { return _pARCDOCFINSEQORIGEST; }
            set
            {
                if (_pARCDOCFINSEQORIGEST != value)
                {
                    ChangeTracker.RecordOriginalValue("PARCDOCFINSEQORIGEST", _pARCDOCFINSEQORIGEST);
                    if (!IsDeserializing)
                    {
                        if (PARC_DOC_FIN != null && PARC_DOC_FIN.ParcDocFinSeq != value)
                        {
                            var previousValue = _pARC_DOC_FIN;
                            _pARC_DOC_FIN = null;
                            FixupPARC_DOC_FIN(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("PARC_DOC_FIN");
                        }
                    }
                    _pARCDOCFINSEQORIGEST = value;
                    OnPropertyChanged("PARCDOCFINSEQORIGEST");
                }
            }
        }
        private Nullable<short> _pARCDOCFINSEQORIGEST;
    
        [DataMember]
        public Nullable<short> PARCDOCFINDESMPAGORIGEST
        {
            get { return _pARCDOCFINDESMPAGORIGEST; }
            set
            {
                if (_pARCDOCFINDESMPAGORIGEST != value)
                {
                    ChangeTracker.RecordOriginalValue("PARCDOCFINDESMPAGORIGEST", _pARCDOCFINDESMPAGORIGEST);
                    if (!IsDeserializing)
                    {
                        if (PARC_DOC_FIN != null && PARC_DOC_FIN.ParcDocFinDesmPag != value)
                        {
                            var previousValue = _pARC_DOC_FIN;
                            _pARC_DOC_FIN = null;
                            FixupPARC_DOC_FIN(previousValue, skipKeys: true);
                            OnNavigationPropertyChanged("PARC_DOC_FIN");
                        }
                    }
                    _pARCDOCFINDESMPAGORIGEST = value;
                    OnPropertyChanged("PARCDOCFINDESMPAGORIGEST");
                }
            }
        }
        private Nullable<short> _pARCDOCFINDESMPAGORIGEST;
    
        [DataMember]
        public decimal DocFinBaseCofinsRF
        {
            get { return _docFinBaseCofinsRF; }
            set
            {
                if (_docFinBaseCofinsRF != value)
                {
                    _docFinBaseCofinsRF = value;
                    OnPropertyChanged("DocFinBaseCofinsRF");
                }
            }
        }
        private decimal _docFinBaseCofinsRF;
    
        [DataMember]
        public decimal DocFinBaseCsllRF
        {
            get { return _docFinBaseCsllRF; }
            set
            {
                if (_docFinBaseCsllRF != value)
                {
                    _docFinBaseCsllRF = value;
                    OnPropertyChanged("DocFinBaseCsllRF");
                }
            }
        }
        private decimal _docFinBaseCsllRF;
    
        [DataMember]
        public string CidCodOrig
        {
            get { return _cidCodOrig; }
            set
            {
                if (_cidCodOrig != value)
                {
                    ChangeTracker.RecordOriginalValue("CidCodOrig", _cidCodOrig);
                    if (!IsDeserializing)
                    {
                        if (CIDADE1 != null && CIDADE1.CidCod != value)
                        {
                            CIDADE1 = null;
                        }
                    }
                    _cidCodOrig = value;
                    OnPropertyChanged("CidCodOrig");
                }
            }
        }
        private string _cidCodOrig;
    
        [DataMember]
        public string CidCodDest
        {
            get { return _cidCodDest; }
            set
            {
                if (_cidCodDest != value)
                {
                    ChangeTracker.RecordOriginalValue("CidCodDest", _cidCodDest);
                    if (!IsDeserializing)
                    {
                        if (CIDADE2 != null && CIDADE2.CidCod != value)
                        {
                            CIDADE2 = null;
                        }
                    }
                    _cidCodDest = value;
                    OnPropertyChanged("CidCodDest");
                }
            }
        }
        private string _cidCodDest;
    
        [DataMember]
        public decimal DocFinBaseIrrfNaoDev
        {
            get { return _docFinBaseIrrfNaoDev; }
            set
            {
                if (_docFinBaseIrrfNaoDev != value)
                {
                    _docFinBaseIrrfNaoDev = value;
                    OnPropertyChanged("DocFinBaseIrrfNaoDev");
                }
            }
        }
        private decimal _docFinBaseIrrfNaoDev;
    
        [DataMember]
        public decimal DocFinAliqIrrfNaoDev
        {
            get { return _docFinAliqIrrfNaoDev; }
            set
            {
                if (_docFinAliqIrrfNaoDev != value)
                {
                    _docFinAliqIrrfNaoDev = value;
                    OnPropertyChanged("DocFinAliqIrrfNaoDev");
                }
            }
        }
        private decimal _docFinAliqIrrfNaoDev;
    
        [DataMember]
        public decimal DocFinValorIrrfNaoDev
        {
            get { return _docFinValorIrrfNaoDev; }
            set
            {
                if (_docFinValorIrrfNaoDev != value)
                {
                    _docFinValorIrrfNaoDev = value;
                    OnPropertyChanged("DocFinValorIrrfNaoDev");
                }
            }
        }
        private decimal _docFinValorIrrfNaoDev;
    
        [DataMember]
        public decimal DocFinBaseInssNaoDev
        {
            get { return _docFinBaseInssNaoDev; }
            set
            {
                if (_docFinBaseInssNaoDev != value)
                {
                    _docFinBaseInssNaoDev = value;
                    OnPropertyChanged("DocFinBaseInssNaoDev");
                }
            }
        }
        private decimal _docFinBaseInssNaoDev;
    
        [DataMember]
        public decimal DocFinAliqInssNaoDev
        {
            get { return _docFinAliqInssNaoDev; }
            set
            {
                if (_docFinAliqInssNaoDev != value)
                {
                    _docFinAliqInssNaoDev = value;
                    OnPropertyChanged("DocFinAliqInssNaoDev");
                }
            }
        }
        private decimal _docFinAliqInssNaoDev;
    
        [DataMember]
        public decimal DocFinValorInssNaoDev
        {
            get { return _docFinValorInssNaoDev; }
            set
            {
                if (_docFinValorInssNaoDev != value)
                {
                    _docFinValorInssNaoDev = value;
                    OnPropertyChanged("DocFinValorInssNaoDev");
                }
            }
        }
        private decimal _docFinValorInssNaoDev;
    
        [DataMember]
        public decimal DocFinBasePisNaoDev
        {
            get { return _docFinBasePisNaoDev; }
            set
            {
                if (_docFinBasePisNaoDev != value)
                {
                    _docFinBasePisNaoDev = value;
                    OnPropertyChanged("DocFinBasePisNaoDev");
                }
            }
        }
        private decimal _docFinBasePisNaoDev;
    
        [DataMember]
        public decimal DocFinAliqPisNaoDev
        {
            get { return _docFinAliqPisNaoDev; }
            set
            {
                if (_docFinAliqPisNaoDev != value)
                {
                    _docFinAliqPisNaoDev = value;
                    OnPropertyChanged("DocFinAliqPisNaoDev");
                }
            }
        }
        private decimal _docFinAliqPisNaoDev;
    
        [DataMember]
        public decimal DocFinValorPisNaoDev
        {
            get { return _docFinValorPisNaoDev; }
            set
            {
                if (_docFinValorPisNaoDev != value)
                {
                    _docFinValorPisNaoDev = value;
                    OnPropertyChanged("DocFinValorPisNaoDev");
                }
            }
        }
        private decimal _docFinValorPisNaoDev;
    
        [DataMember]
        public decimal DocFinBaseCofinsNaoDev
        {
            get { return _docFinBaseCofinsNaoDev; }
            set
            {
                if (_docFinBaseCofinsNaoDev != value)
                {
                    _docFinBaseCofinsNaoDev = value;
                    OnPropertyChanged("DocFinBaseCofinsNaoDev");
                }
            }
        }
        private decimal _docFinBaseCofinsNaoDev;
    
        [DataMember]
        public decimal DocFinAliqCofinsNaoDev
        {
            get { return _docFinAliqCofinsNaoDev; }
            set
            {
                if (_docFinAliqCofinsNaoDev != value)
                {
                    _docFinAliqCofinsNaoDev = value;
                    OnPropertyChanged("DocFinAliqCofinsNaoDev");
                }
            }
        }
        private decimal _docFinAliqCofinsNaoDev;
    
        [DataMember]
        public decimal DocFinValorCofinsNaoDev
        {
            get { return _docFinValorCofinsNaoDev; }
            set
            {
                if (_docFinValorCofinsNaoDev != value)
                {
                    _docFinValorCofinsNaoDev = value;
                    OnPropertyChanged("DocFinValorCofinsNaoDev");
                }
            }
        }
        private decimal _docFinValorCofinsNaoDev;
    
        [DataMember]
        public decimal DocFinBaseCsllNaoDev
        {
            get { return _docFinBaseCsllNaoDev; }
            set
            {
                if (_docFinBaseCsllNaoDev != value)
                {
                    _docFinBaseCsllNaoDev = value;
                    OnPropertyChanged("DocFinBaseCsllNaoDev");
                }
            }
        }
        private decimal _docFinBaseCsllNaoDev;
    
        [DataMember]
        public decimal DocFinAliqCsllNaoDev
        {
            get { return _docFinAliqCsllNaoDev; }
            set
            {
                if (_docFinAliqCsllNaoDev != value)
                {
                    _docFinAliqCsllNaoDev = value;
                    OnPropertyChanged("DocFinAliqCsllNaoDev");
                }
            }
        }
        private decimal _docFinAliqCsllNaoDev;
    
        [DataMember]
        public decimal DocFinValorCsllNaoDev
        {
            get { return _docFinValorCsllNaoDev; }
            set
            {
                if (_docFinValorCsllNaoDev != value)
                {
                    _docFinValorCsllNaoDev = value;
                    OnPropertyChanged("DocFinValorCsllNaoDev");
                }
            }
        }
        private decimal _docFinValorCsllNaoDev;
    
        [DataMember]
        public decimal DocFinVlServPres15
        {
            get { return _docFinVlServPres15; }
            set
            {
                if (_docFinVlServPres15 != value)
                {
                    _docFinVlServPres15 = value;
                    OnPropertyChanged("DocFinVlServPres15");
                }
            }
        }
        private decimal _docFinVlServPres15;
    
        [DataMember]
        public decimal DocFinVlServPres20
        {
            get { return _docFinVlServPres20; }
            set
            {
                if (_docFinVlServPres20 != value)
                {
                    _docFinVlServPres20 = value;
                    OnPropertyChanged("DocFinVlServPres20");
                }
            }
        }
        private decimal _docFinVlServPres20;
    
        [DataMember]
        public decimal DocFinVlServPres25
        {
            get { return _docFinVlServPres25; }
            set
            {
                if (_docFinVlServPres25 != value)
                {
                    _docFinVlServPres25 = value;
                    OnPropertyChanged("DocFinVlServPres25");
                }
            }
        }
        private decimal _docFinVlServPres25;
    
        [DataMember]
        public decimal DocFinVlAdServPresSeg
        {
            get { return _docFinVlAdServPresSeg; }
            set
            {
                if (_docFinVlAdServPresSeg != value)
                {
                    _docFinVlAdServPresSeg = value;
                    OnPropertyChanged("DocFinVlAdServPresSeg");
                }
            }
        }
        private decimal _docFinVlAdServPresSeg;
    
        [DataMember]
        public decimal DocFinVlAdServPresSegND
        {
            get { return _docFinVlAdServPresSegND; }
            set
            {
                if (_docFinVlAdServPresSegND != value)
                {
                    _docFinVlAdServPresSegND = value;
                    OnPropertyChanged("DocFinVlAdServPresSegND");
                }
            }
        }
        private decimal _docFinVlAdServPresSegND;
    
        [DataMember]
        public string docfininteg
        {
            get { return _docfininteg; }
            set
            {
                if (_docfininteg != value)
                {
                    _docfininteg = value;
                    OnPropertyChanged("docfininteg");
                }
            }
        }
        private string _docfininteg;
    
        [DataMember]
        public string DocFinCiaAerea
        {
            get { return _docFinCiaAerea; }
            set
            {
                if (_docFinCiaAerea != value)
                {
                    _docFinCiaAerea = value;
                    OnPropertyChanged("DocFinCiaAerea");
                }
            }
        }
        private string _docFinCiaAerea;
    
        [DataMember]
        public string DocFinVoucher
        {
            get { return _docFinVoucher; }
            set
            {
                if (_docFinVoucher != value)
                {
                    _docFinVoucher = value;
                    OnPropertyChanged("DocFinVoucher");
                }
            }
        }
        private string _docFinVoucher;
    
        [DataMember]
        public string DocFinNomePas
        {
            get { return _docFinNomePas; }
            set
            {
                if (_docFinNomePas != value)
                {
                    _docFinNomePas = value;
                    OnPropertyChanged("DocFinNomePas");
                }
            }
        }
        private string _docFinNomePas;
    
        [DataMember]
        public Nullable<System.DateTime> DocFinDtHrCotInd
        {
            get { return _docFinDtHrCotInd; }
            set
            {
                if (_docFinDtHrCotInd != value)
                {
                    _docFinDtHrCotInd = value;
                    OnPropertyChanged("DocFinDtHrCotInd");
                }
            }
        }
        private Nullable<System.DateTime> _docFinDtHrCotInd;
    
        [DataMember]
        public string DocFinCEINum
        {
            get { return _docFinCEINum; }
            set
            {
                if (_docFinCEINum != value)
                {
                    _docFinCEINum = value;
                    OnPropertyChanged("DocFinCEINum");
                }
            }
        }
        private string _docFinCEINum;
    
        [DataMember]
        public string DocFinNE
        {
            get { return _docFinNE; }
            set
            {
                if (_docFinNE != value)
                {
                    _docFinNE = value;
                    OnPropertyChanged("DocFinNE");
                }
            }
        }
        private string _docFinNE;
    
        [DataMember]
        public string DocFinNL
        {
            get { return _docFinNL; }
            set
            {
                if (_docFinNL != value)
                {
                    _docFinNL = value;
                    OnPropertyChanged("DocFinNL");
                }
            }
        }
        private string _docFinNL;
    
        [DataMember]
        public string DocFinLoc
        {
            get { return _docFinLoc; }
            set
            {
                if (_docFinLoc != value)
                {
                    _docFinLoc = value;
                    OnPropertyChanged("DocFinLoc");
                }
            }
        }
        private string _docFinLoc;
    
        [DataMember]
        public decimal DocFinBaseCofinsProd
        {
            get { return _docFinBaseCofinsProd; }
            set
            {
                if (_docFinBaseCofinsProd != value)
                {
                    _docFinBaseCofinsProd = value;
                    OnPropertyChanged("DocFinBaseCofinsProd");
                }
            }
        }
        private decimal _docFinBaseCofinsProd;
    
        [DataMember]
        public decimal DocFinBaseCsllProd
        {
            get { return _docFinBaseCsllProd; }
            set
            {
                if (_docFinBaseCsllProd != value)
                {
                    _docFinBaseCsllProd = value;
                    OnPropertyChanged("DocFinBaseCsllProd");
                }
            }
        }
        private decimal _docFinBaseCsllProd;
    
        [DataMember]
        public Nullable<System.DateTime> DocFinPisProdDataVenc
        {
            get { return _docFinPisProdDataVenc; }
            set
            {
                if (_docFinPisProdDataVenc != value)
                {
                    _docFinPisProdDataVenc = value;
                    OnPropertyChanged("DocFinPisProdDataVenc");
                }
            }
        }
        private Nullable<System.DateTime> _docFinPisProdDataVenc;
    
        [DataMember]
        public decimal DocFinPisProdPerc
        {
            get { return _docFinPisProdPerc; }
            set
            {
                if (_docFinPisProdPerc != value)
                {
                    _docFinPisProdPerc = value;
                    OnPropertyChanged("DocFinPisProdPerc");
                }
            }
        }
        private decimal _docFinPisProdPerc;
    
        [DataMember]
        public string DocFinPisProdDed
        {
            get { return _docFinPisProdDed; }
            set
            {
                if (_docFinPisProdDed != value)
                {
                    _docFinPisProdDed = value;
                    OnPropertyChanged("DocFinPisProdDed");
                }
            }
        }
        private string _docFinPisProdDed;
    
        [DataMember]
        public decimal DocFinPisProdVal
        {
            get { return _docFinPisProdVal; }
            set
            {
                if (_docFinPisProdVal != value)
                {
                    _docFinPisProdVal = value;
                    OnPropertyChanged("DocFinPisProdVal");
                }
            }
        }
        private decimal _docFinPisProdVal;
    
        [DataMember]
        public string ImpCodReceitaPisProd
        {
            get { return _impCodReceitaPisProd; }
            set
            {
                if (_impCodReceitaPisProd != value)
                {
                    _impCodReceitaPisProd = value;
                    OnPropertyChanged("ImpCodReceitaPisProd");
                }
            }
        }
        private string _impCodReceitaPisProd;
    
        [DataMember]
        public Nullable<int> DocFinPisProdChv
        {
            get { return _docFinPisProdChv; }
            set
            {
                if (_docFinPisProdChv != value)
                {
                    _docFinPisProdChv = value;
                    OnPropertyChanged("DocFinPisProdChv");
                }
            }
        }
        private Nullable<int> _docFinPisProdChv;
    
        [DataMember]
        public Nullable<System.DateTime> DocFinCofinsProdDataVenc
        {
            get { return _docFinCofinsProdDataVenc; }
            set
            {
                if (_docFinCofinsProdDataVenc != value)
                {
                    _docFinCofinsProdDataVenc = value;
                    OnPropertyChanged("DocFinCofinsProdDataVenc");
                }
            }
        }
        private Nullable<System.DateTime> _docFinCofinsProdDataVenc;
    
        [DataMember]
        public decimal DocFinCofinsProdPerc
        {
            get { return _docFinCofinsProdPerc; }
            set
            {
                if (_docFinCofinsProdPerc != value)
                {
                    _docFinCofinsProdPerc = value;
                    OnPropertyChanged("DocFinCofinsProdPerc");
                }
            }
        }
        private decimal _docFinCofinsProdPerc;
    
        [DataMember]
        public string DocFinCofinsProdDed
        {
            get { return _docFinCofinsProdDed; }
            set
            {
                if (_docFinCofinsProdDed != value)
                {
                    _docFinCofinsProdDed = value;
                    OnPropertyChanged("DocFinCofinsProdDed");
                }
            }
        }
        private string _docFinCofinsProdDed;
    
        [DataMember]
        public decimal DocFinCofinsProdVal
        {
            get { return _docFinCofinsProdVal; }
            set
            {
                if (_docFinCofinsProdVal != value)
                {
                    _docFinCofinsProdVal = value;
                    OnPropertyChanged("DocFinCofinsProdVal");
                }
            }
        }
        private decimal _docFinCofinsProdVal;
    
        [DataMember]
        public string ImpCodReceitaCofinsProd
        {
            get { return _impCodReceitaCofinsProd; }
            set
            {
                if (_impCodReceitaCofinsProd != value)
                {
                    _impCodReceitaCofinsProd = value;
                    OnPropertyChanged("ImpCodReceitaCofinsProd");
                }
            }
        }
        private string _impCodReceitaCofinsProd;
    
        [DataMember]
        public Nullable<int> DocFinCofinsProdChv
        {
            get { return _docFinCofinsProdChv; }
            set
            {
                if (_docFinCofinsProdChv != value)
                {
                    _docFinCofinsProdChv = value;
                    OnPropertyChanged("DocFinCofinsProdChv");
                }
            }
        }
        private Nullable<int> _docFinCofinsProdChv;
    
        [DataMember]
        public Nullable<System.DateTime> DocFinCsllProdDataVenc
        {
            get { return _docFinCsllProdDataVenc; }
            set
            {
                if (_docFinCsllProdDataVenc != value)
                {
                    _docFinCsllProdDataVenc = value;
                    OnPropertyChanged("DocFinCsllProdDataVenc");
                }
            }
        }
        private Nullable<System.DateTime> _docFinCsllProdDataVenc;
    
        [DataMember]
        public decimal DocFinCsllProdPerc
        {
            get { return _docFinCsllProdPerc; }
            set
            {
                if (_docFinCsllProdPerc != value)
                {
                    _docFinCsllProdPerc = value;
                    OnPropertyChanged("DocFinCsllProdPerc");
                }
            }
        }
        private decimal _docFinCsllProdPerc;
    
        [DataMember]
        public string DocFinCsllProdDed
        {
            get { return _docFinCsllProdDed; }
            set
            {
                if (_docFinCsllProdDed != value)
                {
                    _docFinCsllProdDed = value;
                    OnPropertyChanged("DocFinCsllProdDed");
                }
            }
        }
        private string _docFinCsllProdDed;
    
        [DataMember]
        public decimal DocFinCsllProdVal
        {
            get { return _docFinCsllProdVal; }
            set
            {
                if (_docFinCsllProdVal != value)
                {
                    _docFinCsllProdVal = value;
                    OnPropertyChanged("DocFinCsllProdVal");
                }
            }
        }
        private decimal _docFinCsllProdVal;
    
        [DataMember]
        public decimal DocFinCsllProdRFVal
        {
            get { return _docFinCsllProdRFVal; }
            set
            {
                if (_docFinCsllProdRFVal != value)
                {
                    _docFinCsllProdRFVal = value;
                    OnPropertyChanged("DocFinCsllProdRFVal");
                }
            }
        }
        private decimal _docFinCsllProdRFVal;
    
        [DataMember]
        public string ImpCodReceitaCsllProd
        {
            get { return _impCodReceitaCsllProd; }
            set
            {
                if (_impCodReceitaCsllProd != value)
                {
                    _impCodReceitaCsllProd = value;
                    OnPropertyChanged("ImpCodReceitaCsllProd");
                }
            }
        }
        private string _impCodReceitaCsllProd;
    
        [DataMember]
        public Nullable<int> DocFinCsllProdChv
        {
            get { return _docFinCsllProdChv; }
            set
            {
                if (_docFinCsllProdChv != value)
                {
                    _docFinCsllProdChv = value;
                    OnPropertyChanged("DocFinCsllProdChv");
                }
            }
        }
        private Nullable<int> _docFinCsllProdChv;
    
        [DataMember]
        public string ImpTipoPisProd
        {
            get { return _impTipoPisProd; }
            set
            {
                if (_impTipoPisProd != value)
                {
                    _impTipoPisProd = value;
                    OnPropertyChanged("ImpTipoPisProd");
                }
            }
        }
        private string _impTipoPisProd;
    
        [DataMember]
        public string ImpTipoCofinsProd
        {
            get { return _impTipoCofinsProd; }
            set
            {
                if (_impTipoCofinsProd != value)
                {
                    _impTipoCofinsProd = value;
                    OnPropertyChanged("ImpTipoCofinsProd");
                }
            }
        }
        private string _impTipoCofinsProd;
    
        [DataMember]
        public string ImpTipoCsllProd
        {
            get { return _impTipoCsllProd; }
            set
            {
                if (_impTipoCsllProd != value)
                {
                    _impTipoCsllProd = value;
                    OnPropertyChanged("ImpTipoCsllProd");
                }
            }
        }
        private string _impTipoCsllProd;
    
        [DataMember]
        public string MatrizCod
        {
            get { return _matrizCod; }
            set
            {
                if (_matrizCod != value)
                {
                    _matrizCod = value;
                    OnPropertyChanged("MatrizCod");
                }
            }
        }
        private string _matrizCod;
    
        [DataMember]
        public string LinhaCod
        {
            get { return _linhaCod; }
            set
            {
                if (_linhaCod != value)
                {
                    _linhaCod = value;
                    OnPropertyChanged("LinhaCod");
                }
            }
        }
        private string _linhaCod;
    
        [DataMember]
        public string ColunaCod
        {
            get { return _colunaCod; }
            set
            {
                if (_colunaCod != value)
                {
                    _colunaCod = value;
                    OnPropertyChanged("ColunaCod");
                }
            }
        }
        private string _colunaCod;
    
        [DataMember]
        public Nullable<int> IdGerencProj
        {
            get { return _idGerencProj; }
            set
            {
                if (_idGerencProj != value)
                {
                    _idGerencProj = value;
                    OnPropertyChanged("IdGerencProj");
                }
            }
        }
        private Nullable<int> _idGerencProj;
    
        [DataMember]
        public Nullable<int> IdVerbaGerencProj
        {
            get { return _idVerbaGerencProj; }
            set
            {
                if (_idVerbaGerencProj != value)
                {
                    _idVerbaGerencProj = value;
                    OnPropertyChanged("IdVerbaGerencProj");
                }
            }
        }
        private Nullable<int> _idVerbaGerencProj;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public CIDADE CIDADE
        {
            get { return _cIDADE; }
            set
            {
                if (!ReferenceEquals(_cIDADE, value))
                {
                    var previousValue = _cIDADE;
                    _cIDADE = value;
                    FixupCIDADE(previousValue);
                    OnNavigationPropertyChanged("CIDADE");
                }
            }
        }
        private CIDADE _cIDADE;
    
        [DataMember]
        public TrackableCollection<DOC_FIN> DOC_FIN1
        {
            get
            {
                if (_dOC_FIN1 == null)
                {
                    _dOC_FIN1 = new TrackableCollection<DOC_FIN>();
                    _dOC_FIN1.CollectionChanged += FixupDOC_FIN1;
                }
                return _dOC_FIN1;
            }
            set
            {
                if (!ReferenceEquals(_dOC_FIN1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_dOC_FIN1 != null)
                    {
                        _dOC_FIN1.CollectionChanged -= FixupDOC_FIN1;
                    }
                    _dOC_FIN1 = value;
                    if (_dOC_FIN1 != null)
                    {
                        _dOC_FIN1.CollectionChanged += FixupDOC_FIN1;
                    }
                    OnNavigationPropertyChanged("DOC_FIN1");
                }
            }
        }
        private TrackableCollection<DOC_FIN> _dOC_FIN1;
    
        [DataMember]
        public DOC_FIN DOC_FIN2
        {
            get { return _dOC_FIN2; }
            set
            {
                if (!ReferenceEquals(_dOC_FIN2, value))
                {
                    var previousValue = _dOC_FIN2;
                    _dOC_FIN2 = value;
                    FixupDOC_FIN2(previousValue);
                    OnNavigationPropertyChanged("DOC_FIN2");
                }
            }
        }
        private DOC_FIN _dOC_FIN2;
    
        [DataMember]
        public TrackableCollection<DOC_FIN> DOC_FIN11
        {
            get
            {
                if (_dOC_FIN11 == null)
                {
                    _dOC_FIN11 = new TrackableCollection<DOC_FIN>();
                    _dOC_FIN11.CollectionChanged += FixupDOC_FIN11;
                }
                return _dOC_FIN11;
            }
            set
            {
                if (!ReferenceEquals(_dOC_FIN11, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_dOC_FIN11 != null)
                    {
                        _dOC_FIN11.CollectionChanged -= FixupDOC_FIN11;
                    }
                    _dOC_FIN11 = value;
                    if (_dOC_FIN11 != null)
                    {
                        _dOC_FIN11.CollectionChanged += FixupDOC_FIN11;
                    }
                    OnNavigationPropertyChanged("DOC_FIN11");
                }
            }
        }
        private TrackableCollection<DOC_FIN> _dOC_FIN11;
    
        [DataMember]
        public DOC_FIN DOC_FIN3
        {
            get { return _dOC_FIN3; }
            set
            {
                if (!ReferenceEquals(_dOC_FIN3, value))
                {
                    var previousValue = _dOC_FIN3;
                    _dOC_FIN3 = value;
                    FixupDOC_FIN3(previousValue);
                    OnNavigationPropertyChanged("DOC_FIN3");
                }
            }
        }
        private DOC_FIN _dOC_FIN3;
    
        [DataMember]
        public TrackableCollection<DOC_FIN> DOC_FIN12
        {
            get
            {
                if (_dOC_FIN12 == null)
                {
                    _dOC_FIN12 = new TrackableCollection<DOC_FIN>();
                    _dOC_FIN12.CollectionChanged += FixupDOC_FIN12;
                }
                return _dOC_FIN12;
            }
            set
            {
                if (!ReferenceEquals(_dOC_FIN12, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_dOC_FIN12 != null)
                    {
                        _dOC_FIN12.CollectionChanged -= FixupDOC_FIN12;
                    }
                    _dOC_FIN12 = value;
                    if (_dOC_FIN12 != null)
                    {
                        _dOC_FIN12.CollectionChanged += FixupDOC_FIN12;
                    }
                    OnNavigationPropertyChanged("DOC_FIN12");
                }
            }
        }
        private TrackableCollection<DOC_FIN> _dOC_FIN12;
    
        [DataMember]
        public DOC_FIN DOC_FIN4
        {
            get { return _dOC_FIN4; }
            set
            {
                if (!ReferenceEquals(_dOC_FIN4, value))
                {
                    var previousValue = _dOC_FIN4;
                    _dOC_FIN4 = value;
                    FixupDOC_FIN4(previousValue);
                    OnNavigationPropertyChanged("DOC_FIN4");
                }
            }
        }
        private DOC_FIN _dOC_FIN4;
    
        [DataMember]
        public MOV_ESTQ MOV_ESTQ
        {
            get { return _mOV_ESTQ; }
            set
            {
                if (!ReferenceEquals(_mOV_ESTQ, value))
                {
                    var previousValue = _mOV_ESTQ;
                    _mOV_ESTQ = value;
                    FixupMOV_ESTQ(previousValue);
                    OnNavigationPropertyChanged("MOV_ESTQ");
                }
            }
        }
        private MOV_ESTQ _mOV_ESTQ;
    
        [DataMember]
        public ENTIDADE ENTIDADE
        {
            get { return _eNTIDADE; }
            set
            {
                if (!ReferenceEquals(_eNTIDADE, value))
                {
                    var previousValue = _eNTIDADE;
                    _eNTIDADE = value;
                    FixupENTIDADE(previousValue);
                    OnNavigationPropertyChanged("ENTIDADE");
                }
            }
        }
        private ENTIDADE _eNTIDADE;
    
        [DataMember]
        public ENTIDADE1 ENTIDADE1
        {
            get { return _eNTIDADE1; }
            set
            {
                if (!ReferenceEquals(_eNTIDADE1, value))
                {
                    var previousValue = _eNTIDADE1;
                    _eNTIDADE1 = value;
                    FixupENTIDADE1(previousValue);
                    OnNavigationPropertyChanged("ENTIDADE1");
                }
            }
        }
        private ENTIDADE1 _eNTIDADE1;
    
        [DataMember]
        public EMPRESA_FILIAL EMPRESA_FILIAL
        {
            get { return _eMPRESA_FILIAL; }
            set
            {
                if (!ReferenceEquals(_eMPRESA_FILIAL, value))
                {
                    var previousValue = _eMPRESA_FILIAL;
                    _eMPRESA_FILIAL = value;
                    FixupEMPRESA_FILIAL(previousValue);
                    OnNavigationPropertyChanged("EMPRESA_FILIAL");
                }
            }
        }
        private EMPRESA_FILIAL _eMPRESA_FILIAL;
    
        [DataMember]
        public ENTIDADE ENTIDADE2
        {
            get { return _eNTIDADE2; }
            set
            {
                if (!ReferenceEquals(_eNTIDADE2, value))
                {
                    var previousValue = _eNTIDADE2;
                    _eNTIDADE2 = value;
                    FixupENTIDADE2(previousValue);
                    OnNavigationPropertyChanged("ENTIDADE2");
                }
            }
        }
        private ENTIDADE _eNTIDADE2;
    
        [DataMember]
        public EMPRESA_FILIAL EMPRESA_FILIAL1
        {
            get { return _eMPRESA_FILIAL1; }
            set
            {
                if (!ReferenceEquals(_eMPRESA_FILIAL1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added && value != null)
                    {
                        // This the dependent end of an identifying relationship, so the principal end cannot be changed if it is already set,
                        // otherwise it can only be set to an entity with a primary key that is the same value as the dependent's foreign key.
                        if (EmpCod != value.EmpCod)
                        {
                            throw new InvalidOperationException("The principal end of an identifying relationship can only be changed when the dependent end is in the Added state.");
                        }
                    }
                    var previousValue = _eMPRESA_FILIAL1;
                    _eMPRESA_FILIAL1 = value;
                    FixupEMPRESA_FILIAL1(previousValue);
                    OnNavigationPropertyChanged("EMPRESA_FILIAL1");
                }
            }
        }
        private EMPRESA_FILIAL _eMPRESA_FILIAL1;
    
        [DataMember]
        public PARC_DOC_FIN PARC_DOC_FIN
        {
            get { return _pARC_DOC_FIN; }
            set
            {
                if (!ReferenceEquals(_pARC_DOC_FIN, value))
                {
                    var previousValue = _pARC_DOC_FIN;
                    _pARC_DOC_FIN = value;
                    FixupPARC_DOC_FIN(previousValue);
                    OnNavigationPropertyChanged("PARC_DOC_FIN");
                }
            }
        }
        private PARC_DOC_FIN _pARC_DOC_FIN;
    
        [DataMember]
        public TrackableCollection<PARC_DOC_FIN> PARC_DOC_FIN1
        {
            get
            {
                if (_pARC_DOC_FIN1 == null)
                {
                    _pARC_DOC_FIN1 = new TrackableCollection<PARC_DOC_FIN>();
                    _pARC_DOC_FIN1.CollectionChanged += FixupPARC_DOC_FIN1;
                }
                return _pARC_DOC_FIN1;
            }
            set
            {
                if (!ReferenceEquals(_pARC_DOC_FIN1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pARC_DOC_FIN1 != null)
                    {
                        _pARC_DOC_FIN1.CollectionChanged -= FixupPARC_DOC_FIN1;
                        // This is the principal end in an association that performs cascade deletes.
                        // Remove the cascade delete event handler for any entities in the current collection.
                        foreach (PARC_DOC_FIN item in _pARC_DOC_FIN1)
                        {
                            ChangeTracker.ObjectStateChanging -= item.HandleCascadeDelete;
                        }
                    }
                    _pARC_DOC_FIN1 = value;
                    if (_pARC_DOC_FIN1 != null)
                    {
                        _pARC_DOC_FIN1.CollectionChanged += FixupPARC_DOC_FIN1;
                        // This is the principal end in an association that performs cascade deletes.
                        // Add the cascade delete event handler for any entities that are already in the new collection.
                        foreach (PARC_DOC_FIN item in _pARC_DOC_FIN1)
                        {
                            ChangeTracker.ObjectStateChanging += item.HandleCascadeDelete;
                        }
                    }
                    OnNavigationPropertyChanged("PARC_DOC_FIN1");
                }
            }
        }
        private TrackableCollection<PARC_DOC_FIN> _pARC_DOC_FIN1;
    
        [DataMember]
        public CIDADE CIDADE1
        {
            get { return _cIDADE1; }
            set
            {
                if (!ReferenceEquals(_cIDADE1, value))
                {
                    var previousValue = _cIDADE1;
                    _cIDADE1 = value;
                    FixupCIDADE1(previousValue);
                    OnNavigationPropertyChanged("CIDADE1");
                }
            }
        }
        private CIDADE _cIDADE1;
    
        [DataMember]
        public CIDADE CIDADE2
        {
            get { return _cIDADE2; }
            set
            {
                if (!ReferenceEquals(_cIDADE2, value))
                {
                    var previousValue = _cIDADE2;
                    _cIDADE2 = value;
                    FixupCIDADE2(previousValue);
                    OnNavigationPropertyChanged("CIDADE2");
                }
            }
        }
        private CIDADE _cIDADE2;
    
        [DataMember]
        public NAT_OPERACAO NAT_OPERACAO
        {
            get { return _nAT_OPERACAO; }
            set
            {
                if (!ReferenceEquals(_nAT_OPERACAO, value))
                {
                    var previousValue = _nAT_OPERACAO;
                    _nAT_OPERACAO = value;
                    FixupNAT_OPERACAO(previousValue);
                    OnNavigationPropertyChanged("NAT_OPERACAO");
                }
            }
        }
        private NAT_OPERACAO _nAT_OPERACAO;
    
        [DataMember]
        public COND_PAG COND_PAG
        {
            get { return _cOND_PAG; }
            set
            {
                if (!ReferenceEquals(_cOND_PAG, value))
                {
                    var previousValue = _cOND_PAG;
                    _cOND_PAG = value;
                    FixupCOND_PAG(previousValue);
                    OnNavigationPropertyChanged("COND_PAG");
                }
            }
        }
        private COND_PAG _cOND_PAG;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        // This entity type is the dependent end in at least one association that performs cascade deletes.
        // This event handler will process notifications that occur when the principal end is deleted.
        internal void HandleCascadeDelete(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                this.MarkAsDeleted();
            }
        }
    
        protected virtual void ClearNavigationProperties()
        {
            CIDADE = null;
            DOC_FIN1.Clear();
            DOC_FIN2 = null;
            DOC_FIN11.Clear();
            DOC_FIN3 = null;
            DOC_FIN12.Clear();
            DOC_FIN4 = null;
            MOV_ESTQ = null;
            ENTIDADE = null;
            ENTIDADE1 = null;
            EMPRESA_FILIAL = null;
            ENTIDADE2 = null;
            EMPRESA_FILIAL1 = null;
            PARC_DOC_FIN = null;
            PARC_DOC_FIN1.Clear();
            CIDADE1 = null;
            CIDADE2 = null;
            NAT_OPERACAO = null;
            COND_PAG = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupCIDADE(CIDADE previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DOC_FIN.Contains(this))
            {
                previousValue.DOC_FIN.Remove(this);
            }
    
            if (CIDADE != null)
            {
                if (!CIDADE.DOC_FIN.Contains(this))
                {
                    CIDADE.DOC_FIN.Add(this);
                }
    
                CidCod = CIDADE.CidCod;
            }
            else if (!skipKeys)
            {
                CidCod = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("CIDADE")
                    && (ChangeTracker.OriginalValues["CIDADE"] == CIDADE))
                {
                    ChangeTracker.OriginalValues.Remove("CIDADE");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("CIDADE", previousValue);
                }
                if (CIDADE != null && !CIDADE.ChangeTracker.ChangeTrackingEnabled)
                {
                    CIDADE.StartTracking();
                }
            }
        }
    
        private void FixupDOC_FIN2(DOC_FIN previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DOC_FIN1.Contains(this))
            {
                previousValue.DOC_FIN1.Remove(this);
            }
    
            if (DOC_FIN2 != null)
            {
                if (!DOC_FIN2.DOC_FIN1.Contains(this))
                {
                    DOC_FIN2.DOC_FIN1.Add(this);
                }
    
                EmpCod = DOC_FIN2.EmpCod;
                DocFinCsllChv = DOC_FIN2.DocFinChv;
            }
            else if (!skipKeys)
            {
                DocFinCsllChv = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("DOC_FIN2")
                    && (ChangeTracker.OriginalValues["DOC_FIN2"] == DOC_FIN2))
                {
                    ChangeTracker.OriginalValues.Remove("DOC_FIN2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("DOC_FIN2", previousValue);
                }
                if (DOC_FIN2 != null && !DOC_FIN2.ChangeTracker.ChangeTrackingEnabled)
                {
                    DOC_FIN2.StartTracking();
                }
            }
        }
    
        private void FixupDOC_FIN3(DOC_FIN previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DOC_FIN11.Contains(this))
            {
                previousValue.DOC_FIN11.Remove(this);
            }
    
            if (DOC_FIN3 != null)
            {
                if (!DOC_FIN3.DOC_FIN11.Contains(this))
                {
                    DOC_FIN3.DOC_FIN11.Add(this);
                }
    
                EmpCod = DOC_FIN3.EmpCod;
                DocFinPisChv = DOC_FIN3.DocFinChv;
            }
            else if (!skipKeys)
            {
                DocFinPisChv = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("DOC_FIN3")
                    && (ChangeTracker.OriginalValues["DOC_FIN3"] == DOC_FIN3))
                {
                    ChangeTracker.OriginalValues.Remove("DOC_FIN3");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("DOC_FIN3", previousValue);
                }
                if (DOC_FIN3 != null && !DOC_FIN3.ChangeTracker.ChangeTrackingEnabled)
                {
                    DOC_FIN3.StartTracking();
                }
            }
        }
    
        private void FixupDOC_FIN4(DOC_FIN previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DOC_FIN12.Contains(this))
            {
                previousValue.DOC_FIN12.Remove(this);
            }
    
            if (DOC_FIN4 != null)
            {
                if (!DOC_FIN4.DOC_FIN12.Contains(this))
                {
                    DOC_FIN4.DOC_FIN12.Add(this);
                }
    
                EmpCod = DOC_FIN4.EmpCod;
                DocFinCofinsChv = DOC_FIN4.DocFinChv;
            }
            else if (!skipKeys)
            {
                DocFinCofinsChv = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("DOC_FIN4")
                    && (ChangeTracker.OriginalValues["DOC_FIN4"] == DOC_FIN4))
                {
                    ChangeTracker.OriginalValues.Remove("DOC_FIN4");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("DOC_FIN4", previousValue);
                }
                if (DOC_FIN4 != null && !DOC_FIN4.ChangeTracker.ChangeTrackingEnabled)
                {
                    DOC_FIN4.StartTracking();
                }
            }
        }
    
        private void FixupMOV_ESTQ(MOV_ESTQ previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DOC_FIN.Contains(this))
            {
                previousValue.DOC_FIN.Remove(this);
            }
    
            if (MOV_ESTQ != null)
            {
                if (!MOV_ESTQ.DOC_FIN.Contains(this))
                {
                    MOV_ESTQ.DOC_FIN.Add(this);
                }
    
                DocFinEmpCodMovEstq = MOV_ESTQ.EmpCod;
                DocFinChvMovEstq = MOV_ESTQ.MovEstqChv;
            }
            else if (!skipKeys)
            {
                DocFinEmpCodMovEstq = null;
                DocFinChvMovEstq = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("MOV_ESTQ")
                    && (ChangeTracker.OriginalValues["MOV_ESTQ"] == MOV_ESTQ))
                {
                    ChangeTracker.OriginalValues.Remove("MOV_ESTQ");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("MOV_ESTQ", previousValue);
                }
                if (MOV_ESTQ != null && !MOV_ESTQ.ChangeTracker.ChangeTrackingEnabled)
                {
                    MOV_ESTQ.StartTracking();
                }
            }
        }
    
        private void FixupENTIDADE(ENTIDADE previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DOC_FIN.Contains(this))
            {
                previousValue.DOC_FIN.Remove(this);
            }
    
            if (ENTIDADE != null)
            {
                if (!ENTIDADE.DOC_FIN.Contains(this))
                {
                    ENTIDADE.DOC_FIN.Add(this);
                }
    
                DocFinEntCodLc = ENTIDADE.EntCod;
            }
            else if (!skipKeys)
            {
                DocFinEntCodLc = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ENTIDADE")
                    && (ChangeTracker.OriginalValues["ENTIDADE"] == ENTIDADE))
                {
                    ChangeTracker.OriginalValues.Remove("ENTIDADE");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ENTIDADE", previousValue);
                }
                if (ENTIDADE != null && !ENTIDADE.ChangeTracker.ChangeTrackingEnabled)
                {
                    ENTIDADE.StartTracking();
                }
            }
        }
    
        private void FixupENTIDADE1(ENTIDADE1 previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DOC_FIN.Contains(this))
            {
                previousValue.DOC_FIN.Remove(this);
            }
    
            if (ENTIDADE1 != null)
            {
                if (!ENTIDADE1.DOC_FIN.Contains(this))
                {
                    ENTIDADE1.DOC_FIN.Add(this);
                }
    
                EntCod = ENTIDADE1.EntCod;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ENTIDADE1")
                    && (ChangeTracker.OriginalValues["ENTIDADE1"] == ENTIDADE1))
                {
                    ChangeTracker.OriginalValues.Remove("ENTIDADE1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ENTIDADE1", previousValue);
                }
                if (ENTIDADE1 != null && !ENTIDADE1.ChangeTracker.ChangeTrackingEnabled)
                {
                    ENTIDADE1.StartTracking();
                }
            }
        }
    
        private void FixupEMPRESA_FILIAL(EMPRESA_FILIAL previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DOC_FIN.Contains(this))
            {
                previousValue.DOC_FIN.Remove(this);
            }
    
            if (EMPRESA_FILIAL != null)
            {
                if (!EMPRESA_FILIAL.DOC_FIN.Contains(this))
                {
                    EMPRESA_FILIAL.DOC_FIN.Add(this);
                }
    
                DocFinOrigEmpCod = EMPRESA_FILIAL.EmpCod;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("EMPRESA_FILIAL")
                    && (ChangeTracker.OriginalValues["EMPRESA_FILIAL"] == EMPRESA_FILIAL))
                {
                    ChangeTracker.OriginalValues.Remove("EMPRESA_FILIAL");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("EMPRESA_FILIAL", previousValue);
                }
                if (EMPRESA_FILIAL != null && !EMPRESA_FILIAL.ChangeTracker.ChangeTrackingEnabled)
                {
                    EMPRESA_FILIAL.StartTracking();
                }
            }
        }
    
        private void FixupENTIDADE2(ENTIDADE previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DOC_FIN1.Contains(this))
            {
                previousValue.DOC_FIN1.Remove(this);
            }
    
            if (ENTIDADE2 != null)
            {
                if (!ENTIDADE2.DOC_FIN1.Contains(this))
                {
                    ENTIDADE2.DOC_FIN1.Add(this);
                }
    
                DocFinEntCodContato = ENTIDADE2.EntCod;
            }
            else if (!skipKeys)
            {
                DocFinEntCodContato = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ENTIDADE2")
                    && (ChangeTracker.OriginalValues["ENTIDADE2"] == ENTIDADE2))
                {
                    ChangeTracker.OriginalValues.Remove("ENTIDADE2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ENTIDADE2", previousValue);
                }
                if (ENTIDADE2 != null && !ENTIDADE2.ChangeTracker.ChangeTrackingEnabled)
                {
                    ENTIDADE2.StartTracking();
                }
            }
        }
    
        private void FixupEMPRESA_FILIAL1(EMPRESA_FILIAL previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DOC_FIN1.Contains(this))
            {
                previousValue.DOC_FIN1.Remove(this);
            }
    
            if (EMPRESA_FILIAL1 != null)
            {
                if (!EMPRESA_FILIAL1.DOC_FIN1.Contains(this))
                {
                    EMPRESA_FILIAL1.DOC_FIN1.Add(this);
                }
    
                EmpCod = EMPRESA_FILIAL1.EmpCod;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("EMPRESA_FILIAL1")
                    && (ChangeTracker.OriginalValues["EMPRESA_FILIAL1"] == EMPRESA_FILIAL1))
                {
                    ChangeTracker.OriginalValues.Remove("EMPRESA_FILIAL1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("EMPRESA_FILIAL1", previousValue);
                }
                if (EMPRESA_FILIAL1 != null && !EMPRESA_FILIAL1.ChangeTracker.ChangeTrackingEnabled)
                {
                    EMPRESA_FILIAL1.StartTracking();
                }
            }
        }
    
        private void FixupPARC_DOC_FIN(PARC_DOC_FIN previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DOC_FIN.Contains(this))
            {
                previousValue.DOC_FIN.Remove(this);
            }
    
            if (PARC_DOC_FIN != null)
            {
                if (!PARC_DOC_FIN.DOC_FIN.Contains(this))
                {
                    PARC_DOC_FIN.DOC_FIN.Add(this);
                }
    
                DOCFINORIGEMPCODEST = PARC_DOC_FIN.EmpCod;
                DOCFINORIGESTCHV = PARC_DOC_FIN.DocFinChv;
                PARCDOCFINSEQORIGEST = PARC_DOC_FIN.ParcDocFinSeq;
                PARCDOCFINDESMPAGORIGEST = PARC_DOC_FIN.ParcDocFinDesmPag;
            }
            else if (!skipKeys)
            {
                DOCFINORIGEMPCODEST = null;
                DOCFINORIGESTCHV = null;
                PARCDOCFINSEQORIGEST = null;
                PARCDOCFINDESMPAGORIGEST = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("PARC_DOC_FIN")
                    && (ChangeTracker.OriginalValues["PARC_DOC_FIN"] == PARC_DOC_FIN))
                {
                    ChangeTracker.OriginalValues.Remove("PARC_DOC_FIN");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("PARC_DOC_FIN", previousValue);
                }
                if (PARC_DOC_FIN != null && !PARC_DOC_FIN.ChangeTracker.ChangeTrackingEnabled)
                {
                    PARC_DOC_FIN.StartTracking();
                }
            }
        }
    
        private void FixupCIDADE1(CIDADE previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DOC_FIN1.Contains(this))
            {
                previousValue.DOC_FIN1.Remove(this);
            }
    
            if (CIDADE1 != null)
            {
                if (!CIDADE1.DOC_FIN1.Contains(this))
                {
                    CIDADE1.DOC_FIN1.Add(this);
                }
    
                CidCodOrig = CIDADE1.CidCod;
            }
            else if (!skipKeys)
            {
                CidCodOrig = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("CIDADE1")
                    && (ChangeTracker.OriginalValues["CIDADE1"] == CIDADE1))
                {
                    ChangeTracker.OriginalValues.Remove("CIDADE1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("CIDADE1", previousValue);
                }
                if (CIDADE1 != null && !CIDADE1.ChangeTracker.ChangeTrackingEnabled)
                {
                    CIDADE1.StartTracking();
                }
            }
        }
    
        private void FixupCIDADE2(CIDADE previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DOC_FIN2.Contains(this))
            {
                previousValue.DOC_FIN2.Remove(this);
            }
    
            if (CIDADE2 != null)
            {
                if (!CIDADE2.DOC_FIN2.Contains(this))
                {
                    CIDADE2.DOC_FIN2.Add(this);
                }
    
                CidCodDest = CIDADE2.CidCod;
            }
            else if (!skipKeys)
            {
                CidCodDest = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("CIDADE2")
                    && (ChangeTracker.OriginalValues["CIDADE2"] == CIDADE2))
                {
                    ChangeTracker.OriginalValues.Remove("CIDADE2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("CIDADE2", previousValue);
                }
                if (CIDADE2 != null && !CIDADE2.ChangeTracker.ChangeTrackingEnabled)
                {
                    CIDADE2.StartTracking();
                }
            }
        }
    
        private void FixupNAT_OPERACAO(NAT_OPERACAO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DOC_FIN.Contains(this))
            {
                previousValue.DOC_FIN.Remove(this);
            }
    
            if (NAT_OPERACAO != null)
            {
                if (!NAT_OPERACAO.DOC_FIN.Contains(this))
                {
                    NAT_OPERACAO.DOC_FIN.Add(this);
                }
    
                NatOpCodEstr = NAT_OPERACAO.NatOpCodEstr;
            }
            else if (!skipKeys)
            {
                NatOpCodEstr = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("NAT_OPERACAO")
                    && (ChangeTracker.OriginalValues["NAT_OPERACAO"] == NAT_OPERACAO))
                {
                    ChangeTracker.OriginalValues.Remove("NAT_OPERACAO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("NAT_OPERACAO", previousValue);
                }
                if (NAT_OPERACAO != null && !NAT_OPERACAO.ChangeTracker.ChangeTrackingEnabled)
                {
                    NAT_OPERACAO.StartTracking();
                }
            }
        }
    
        private void FixupCOND_PAG(COND_PAG previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DOC_FIN.Contains(this))
            {
                previousValue.DOC_FIN.Remove(this);
            }
    
            if (COND_PAG != null)
            {
                if (!COND_PAG.DOC_FIN.Contains(this))
                {
                    COND_PAG.DOC_FIN.Add(this);
                }
    
                CondPagCod = COND_PAG.CondPagCod;
            }
            else if (!skipKeys)
            {
                CondPagCod = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("COND_PAG")
                    && (ChangeTracker.OriginalValues["COND_PAG"] == COND_PAG))
                {
                    ChangeTracker.OriginalValues.Remove("COND_PAG");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("COND_PAG", previousValue);
                }
                if (COND_PAG != null && !COND_PAG.ChangeTracker.ChangeTrackingEnabled)
                {
                    COND_PAG.StartTracking();
                }
            }
        }
    
        private void FixupDOC_FIN1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DOC_FIN item in e.NewItems)
                {
                    item.DOC_FIN2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DOC_FIN1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DOC_FIN item in e.OldItems)
                {
                    if (ReferenceEquals(item.DOC_FIN2, this))
                    {
                        item.DOC_FIN2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DOC_FIN1", item);
                    }
                }
            }
        }
    
        private void FixupDOC_FIN11(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DOC_FIN item in e.NewItems)
                {
                    item.DOC_FIN3 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DOC_FIN11", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DOC_FIN item in e.OldItems)
                {
                    if (ReferenceEquals(item.DOC_FIN3, this))
                    {
                        item.DOC_FIN3 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DOC_FIN11", item);
                    }
                }
            }
        }
    
        private void FixupDOC_FIN12(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DOC_FIN item in e.NewItems)
                {
                    item.DOC_FIN4 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DOC_FIN12", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DOC_FIN item in e.OldItems)
                {
                    if (ReferenceEquals(item.DOC_FIN4, this))
                    {
                        item.DOC_FIN4 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DOC_FIN12", item);
                    }
                }
            }
        }
    
        private void FixupPARC_DOC_FIN1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PARC_DOC_FIN item in e.NewItems)
                {
                    item.DOC_FIN1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PARC_DOC_FIN1", item);
                    }
                    // This is the principal end in an association that performs cascade deletes.
                    // Update the event listener to refer to the new dependent.
                    ChangeTracker.ObjectStateChanging += item.HandleCascadeDelete;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PARC_DOC_FIN item in e.OldItems)
                {
                    if (ReferenceEquals(item.DOC_FIN1, this))
                    {
                        item.DOC_FIN1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PARC_DOC_FIN1", item);
                        // Delete the dependent end of this identifying association. If the current state is Added,
                        // allow the relationship to be changed without causing the dependent to be deleted.
                        if (item.ChangeTracker.State != ObjectState.Added)
                        {
                            item.MarkAsDeleted();
                        }
                    }
                    // This is the principal end in an association that performs cascade deletes.
                    // Remove the previous dependent from the event listener.
                    ChangeTracker.ObjectStateChanging -= item.HandleCascadeDelete;
                }
            }
        }

        #endregion

    }
}

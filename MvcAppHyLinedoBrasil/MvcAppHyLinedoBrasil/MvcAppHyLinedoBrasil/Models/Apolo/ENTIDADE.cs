//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHyLinedoBrasil.Models.Apolo
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(CIDADE))]
    [KnownType(typeof(ENTIDADE))]
    [KnownType(typeof(ENTIDADE1))]
    [KnownType(typeof(VENDEDOR))]
    [KnownType(typeof(PRODUTO))]
    [KnownType(typeof(PED_VENDA1))]
    [KnownType(typeof(ITEM_NF))]
    [KnownType(typeof(NOTA_FISCAL))]
    public partial class ENTIDADE: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public string EntCod
        {
            get { return _entCod; }
            set
            {
                if (_entCod != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'EntCod' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _entCod = value;
                    OnPropertyChanged("EntCod");
                }
            }
        }
        private string _entCod;
    
        [DataMember]
        public string TipoTratCod
        {
            get { return _tipoTratCod; }
            set
            {
                if (_tipoTratCod != value)
                {
                    _tipoTratCod = value;
                    OnPropertyChanged("TipoTratCod");
                }
            }
        }
        private string _tipoTratCod;
    
        [DataMember]
        public string EntNome
        {
            get { return _entNome; }
            set
            {
                if (_entNome != value)
                {
                    _entNome = value;
                    OnPropertyChanged("EntNome");
                }
            }
        }
        private string _entNome;
    
        [DataMember]
        public string EntNomeFant
        {
            get { return _entNomeFant; }
            set
            {
                if (_entNomeFant != value)
                {
                    _entNomeFant = value;
                    OnPropertyChanged("EntNomeFant");
                }
            }
        }
        private string _entNomeFant;
    
        [DataMember]
        public string AtivEconCodEstr
        {
            get { return _ativEconCodEstr; }
            set
            {
                if (_ativEconCodEstr != value)
                {
                    _ativEconCodEstr = value;
                    OnPropertyChanged("AtivEconCodEstr");
                }
            }
        }
        private string _ativEconCodEstr;
    
        [DataMember]
        public string OrigCodEstr
        {
            get { return _origCodEstr; }
            set
            {
                if (_origCodEstr != value)
                {
                    _origCodEstr = value;
                    OnPropertyChanged("OrigCodEstr");
                }
            }
        }
        private string _origCodEstr;
    
        [DataMember]
        public Nullable<System.DateTime> EntDesdeData
        {
            get { return _entDesdeData; }
            set
            {
                if (_entDesdeData != value)
                {
                    _entDesdeData = value;
                    OnPropertyChanged("EntDesdeData");
                }
            }
        }
        private Nullable<System.DateTime> _entDesdeData;
    
        [DataMember]
        public Nullable<System.DateTime> EntDataCad
        {
            get { return _entDataCad; }
            set
            {
                if (_entDataCad != value)
                {
                    _entDataCad = value;
                    OnPropertyChanged("EntDataCad");
                }
            }
        }
        private Nullable<System.DateTime> _entDataCad;
    
        [DataMember]
        public string EntLograd
        {
            get { return _entLograd; }
            set
            {
                if (_entLograd != value)
                {
                    _entLograd = value;
                    OnPropertyChanged("EntLograd");
                }
            }
        }
        private string _entLograd;
    
        [DataMember]
        public string EntEnder
        {
            get { return _entEnder; }
            set
            {
                if (_entEnder != value)
                {
                    _entEnder = value;
                    OnPropertyChanged("EntEnder");
                }
            }
        }
        private string _entEnder;
    
        [DataMember]
        public string EntEnderNo
        {
            get { return _entEnderNo; }
            set
            {
                if (_entEnderNo != value)
                {
                    _entEnderNo = value;
                    OnPropertyChanged("EntEnderNo");
                }
            }
        }
        private string _entEnderNo;
    
        [DataMember]
        public string EntEnderNoPI
        {
            get { return _entEnderNoPI; }
            set
            {
                if (_entEnderNoPI != value)
                {
                    _entEnderNoPI = value;
                    OnPropertyChanged("EntEnderNoPI");
                }
            }
        }
        private string _entEnderNoPI;
    
        [DataMember]
        public string EntEnderComp
        {
            get { return _entEnderComp; }
            set
            {
                if (_entEnderComp != value)
                {
                    _entEnderComp = value;
                    OnPropertyChanged("EntEnderComp");
                }
            }
        }
        private string _entEnderComp;
    
        [DataMember]
        public string EntBair
        {
            get { return _entBair; }
            set
            {
                if (_entBair != value)
                {
                    _entBair = value;
                    OnPropertyChanged("EntBair");
                }
            }
        }
        private string _entBair;
    
        [DataMember]
        public string CidCod
        {
            get { return _cidCod; }
            set
            {
                if (_cidCod != value)
                {
                    ChangeTracker.RecordOriginalValue("CidCod", _cidCod);
                    if (!IsDeserializing)
                    {
                        if (CIDADE2 != null && CIDADE2.CidCod != value)
                        {
                            CIDADE2 = null;
                        }
                    }
                    _cidCod = value;
                    OnPropertyChanged("CidCod");
                }
            }
        }
        private string _cidCod;
    
        [DataMember]
        public string EntCep
        {
            get { return _entCep; }
            set
            {
                if (_entCep != value)
                {
                    _entCep = value;
                    OnPropertyChanged("EntCep");
                }
            }
        }
        private string _entCep;
    
        [DataMember]
        public string EntTipoFJ
        {
            get { return _entTipoFJ; }
            set
            {
                if (_entTipoFJ != value)
                {
                    _entTipoFJ = value;
                    OnPropertyChanged("EntTipoFJ");
                }
            }
        }
        private string _entTipoFJ;
    
        [DataMember]
        public string EntCpfCgc
        {
            get { return _entCpfCgc; }
            set
            {
                if (_entCpfCgc != value)
                {
                    _entCpfCgc = value;
                    OnPropertyChanged("EntCpfCgc");
                }
            }
        }
        private string _entCpfCgc;
    
        [DataMember]
        public string EntRgIe
        {
            get { return _entRgIe; }
            set
            {
                if (_entRgIe != value)
                {
                    _entRgIe = value;
                    OnPropertyChanged("EntRgIe");
                }
            }
        }
        private string _entRgIe;
    
        [DataMember]
        public string EntRgOrgExped
        {
            get { return _entRgOrgExped; }
            set
            {
                if (_entRgOrgExped != value)
                {
                    _entRgOrgExped = value;
                    OnPropertyChanged("EntRgOrgExped");
                }
            }
        }
        private string _entRgOrgExped;
    
        [DataMember]
        public string EntAgrop
        {
            get { return _entAgrop; }
            set
            {
                if (_entAgrop != value)
                {
                    _entAgrop = value;
                    OnPropertyChanged("EntAgrop");
                }
            }
        }
        private string _entAgrop;
    
        [DataMember]
        public string EntAgropInsc
        {
            get { return _entAgropInsc; }
            set
            {
                if (_entAgropInsc != value)
                {
                    _entAgropInsc = value;
                    OnPropertyChanged("EntAgropInsc");
                }
            }
        }
        private string _entAgropInsc;
    
        [DataMember]
        public string EntCxaPost
        {
            get { return _entCxaPost; }
            set
            {
                if (_entCxaPost != value)
                {
                    _entCxaPost = value;
                    OnPropertyChanged("EntCxaPost");
                }
            }
        }
        private string _entCxaPost;
    
        [DataMember]
        public string RegCodEstr
        {
            get { return _regCodEstr; }
            set
            {
                if (_regCodEstr != value)
                {
                    _regCodEstr = value;
                    OnPropertyChanged("RegCodEstr");
                }
            }
        }
        private string _regCodEstr;
    
        [DataMember]
        public string EntConceito
        {
            get { return _entConceito; }
            set
            {
                if (_entConceito != value)
                {
                    _entConceito = value;
                    OnPropertyChanged("EntConceito");
                }
            }
        }
        private string _entConceito;
    
        [DataMember]
        public string CondPagCod
        {
            get { return _condPagCod; }
            set
            {
                if (_condPagCod != value)
                {
                    _condPagCod = value;
                    OnPropertyChanged("CondPagCod");
                }
            }
        }
        private string _condPagCod;
    
        [DataMember]
        public string EntAltCondPag
        {
            get { return _entAltCondPag; }
            set
            {
                if (_entAltCondPag != value)
                {
                    _entAltCondPag = value;
                    OnPropertyChanged("EntAltCondPag");
                }
            }
        }
        private string _entAltCondPag;
    
        [DataMember]
        public string TipoCobCod
        {
            get { return _tipoCobCod; }
            set
            {
                if (_tipoCobCod != value)
                {
                    _tipoCobCod = value;
                    OnPropertyChanged("TipoCobCod");
                }
            }
        }
        private string _tipoCobCod;
    
        [DataMember]
        public Nullable<System.DateTime> EntDataAnivFund
        {
            get { return _entDataAnivFund; }
            set
            {
                if (_entDataAnivFund != value)
                {
                    _entDataAnivFund = value;
                    OnPropertyChanged("EntDataAnivFund");
                }
            }
        }
        private Nullable<System.DateTime> _entDataAnivFund;
    
        [DataMember]
        public string CargoCodEstr
        {
            get { return _cargoCodEstr; }
            set
            {
                if (_cargoCodEstr != value)
                {
                    _cargoCodEstr = value;
                    OnPropertyChanged("CargoCodEstr");
                }
            }
        }
        private string _cargoCodEstr;
    
        [DataMember]
        public string EntGenero
        {
            get { return _entGenero; }
            set
            {
                if (_entGenero != value)
                {
                    _entGenero = value;
                    OnPropertyChanged("EntGenero");
                }
            }
        }
        private string _entGenero;
    
        [DataMember]
        public string EntComunEtiq
        {
            get { return _entComunEtiq; }
            set
            {
                if (_entComunEtiq != value)
                {
                    _entComunEtiq = value;
                    OnPropertyChanged("EntComunEtiq");
                }
            }
        }
        private string _entComunEtiq;
    
        [DataMember]
        public string EntComunMaladir
        {
            get { return _entComunMaladir; }
            set
            {
                if (_entComunMaladir != value)
                {
                    _entComunMaladir = value;
                    OnPropertyChanged("EntComunMaladir");
                }
            }
        }
        private string _entComunMaladir;
    
        [DataMember]
        public string EntComunEMail
        {
            get { return _entComunEMail; }
            set
            {
                if (_entComunEMail != value)
                {
                    _entComunEMail = value;
                    OnPropertyChanged("EntComunEMail");
                }
            }
        }
        private string _entComunEMail;
    
        [DataMember]
        public string EntComunFaxmark
        {
            get { return _entComunFaxmark; }
            set
            {
                if (_entComunFaxmark != value)
                {
                    _entComunFaxmark = value;
                    OnPropertyChanged("EntComunFaxmark");
                }
            }
        }
        private string _entComunFaxmark;
    
        [DataMember]
        public string EntComunTlmark
        {
            get { return _entComunTlmark; }
            set
            {
                if (_entComunTlmark != value)
                {
                    _entComunTlmark = value;
                    OnPropertyChanged("EntComunTlmark");
                }
            }
        }
        private string _entComunTlmark;
    
        [DataMember]
        public string EntStrDesc
        {
            get { return _entStrDesc; }
            set
            {
                if (_entStrDesc != value)
                {
                    _entStrDesc = value;
                    OnPropertyChanged("EntStrDesc");
                }
            }
        }
        private string _entStrDesc;
    
        [DataMember]
        public Nullable<decimal> EntPercDesc
        {
            get { return _entPercDesc; }
            set
            {
                if (_entPercDesc != value)
                {
                    _entPercDesc = value;
                    OnPropertyChanged("EntPercDesc");
                }
            }
        }
        private Nullable<decimal> _entPercDesc;
    
        [DataMember]
        public Nullable<System.DateTime> EntDataValidDesc
        {
            get { return _entDataValidDesc; }
            set
            {
                if (_entDataValidDesc != value)
                {
                    _entDataValidDesc = value;
                    OnPropertyChanged("EntDataValidDesc");
                }
            }
        }
        private Nullable<System.DateTime> _entDataValidDesc;
    
        [DataMember]
        public string EntStrAcresc
        {
            get { return _entStrAcresc; }
            set
            {
                if (_entStrAcresc != value)
                {
                    _entStrAcresc = value;
                    OnPropertyChanged("EntStrAcresc");
                }
            }
        }
        private string _entStrAcresc;
    
        [DataMember]
        public Nullable<decimal> EntPercAcresc
        {
            get { return _entPercAcresc; }
            set
            {
                if (_entPercAcresc != value)
                {
                    _entPercAcresc = value;
                    OnPropertyChanged("EntPercAcresc");
                }
            }
        }
        private Nullable<decimal> _entPercAcresc;
    
        [DataMember]
        public Nullable<System.DateTime> EntDataValidAcresc
        {
            get { return _entDataValidAcresc; }
            set
            {
                if (_entDataValidAcresc != value)
                {
                    _entDataValidAcresc = value;
                    OnPropertyChanged("EntDataValidAcresc");
                }
            }
        }
        private Nullable<System.DateTime> _entDataValidAcresc;
    
        [DataMember]
        public Nullable<System.DateTime> EntContatoAposData
        {
            get { return _entContatoAposData; }
            set
            {
                if (_entContatoAposData != value)
                {
                    _entContatoAposData = value;
                    OnPropertyChanged("EntContatoAposData");
                }
            }
        }
        private Nullable<System.DateTime> _entContatoAposData;
    
        [DataMember]
        public string BcoNum
        {
            get { return _bcoNum; }
            set
            {
                if (_bcoNum != value)
                {
                    _bcoNum = value;
                    OnPropertyChanged("BcoNum");
                }
            }
        }
        private string _bcoNum;
    
        [DataMember]
        public string AgNum
        {
            get { return _agNum; }
            set
            {
                if (_agNum != value)
                {
                    _agNum = value;
                    OnPropertyChanged("AgNum");
                }
            }
        }
        private string _agNum;
    
        [DataMember]
        public string EntBcoAgCamCompens
        {
            get { return _entBcoAgCamCompens; }
            set
            {
                if (_entBcoAgCamCompens != value)
                {
                    _entBcoAgCamCompens = value;
                    OnPropertyChanged("EntBcoAgCamCompens");
                }
            }
        }
        private string _entBcoAgCamCompens;
    
        [DataMember]
        public string EntBcoAgCCorNum
        {
            get { return _entBcoAgCCorNum; }
            set
            {
                if (_entBcoAgCCorNum != value)
                {
                    _entBcoAgCCorNum = value;
                    OnPropertyChanged("EntBcoAgCCorNum");
                }
            }
        }
        private string _entBcoAgCCorNum;
    
        [DataMember]
        public Nullable<decimal> EntValLimCred
        {
            get { return _entValLimCred; }
            set
            {
                if (_entValLimCred != value)
                {
                    _entValLimCred = value;
                    OnPropertyChanged("EntValLimCred");
                }
            }
        }
        private Nullable<decimal> _entValLimCred;
    
        [DataMember]
        public Nullable<decimal> EntValLimDeb
        {
            get { return _entValLimDeb; }
            set
            {
                if (_entValLimDeb != value)
                {
                    _entValLimDeb = value;
                    OnPropertyChanged("EntValLimDeb");
                }
            }
        }
        private Nullable<decimal> _entValLimDeb;
    
        [DataMember]
        public string EntIdioma1
        {
            get { return _entIdioma1; }
            set
            {
                if (_entIdioma1 != value)
                {
                    _entIdioma1 = value;
                    OnPropertyChanged("EntIdioma1");
                }
            }
        }
        private string _entIdioma1;
    
        [DataMember]
        public string EntIdioma1Niv
        {
            get { return _entIdioma1Niv; }
            set
            {
                if (_entIdioma1Niv != value)
                {
                    _entIdioma1Niv = value;
                    OnPropertyChanged("EntIdioma1Niv");
                }
            }
        }
        private string _entIdioma1Niv;
    
        [DataMember]
        public string EntIdioma1Conhec
        {
            get { return _entIdioma1Conhec; }
            set
            {
                if (_entIdioma1Conhec != value)
                {
                    _entIdioma1Conhec = value;
                    OnPropertyChanged("EntIdioma1Conhec");
                }
            }
        }
        private string _entIdioma1Conhec;
    
        [DataMember]
        public string EntIdioma2
        {
            get { return _entIdioma2; }
            set
            {
                if (_entIdioma2 != value)
                {
                    _entIdioma2 = value;
                    OnPropertyChanged("EntIdioma2");
                }
            }
        }
        private string _entIdioma2;
    
        [DataMember]
        public string EntIdioma2Niv
        {
            get { return _entIdioma2Niv; }
            set
            {
                if (_entIdioma2Niv != value)
                {
                    _entIdioma2Niv = value;
                    OnPropertyChanged("EntIdioma2Niv");
                }
            }
        }
        private string _entIdioma2Niv;
    
        [DataMember]
        public string EntIdioma2Conhec
        {
            get { return _entIdioma2Conhec; }
            set
            {
                if (_entIdioma2Conhec != value)
                {
                    _entIdioma2Conhec = value;
                    OnPropertyChanged("EntIdioma2Conhec");
                }
            }
        }
        private string _entIdioma2Conhec;
    
        [DataMember]
        public string EntIdioma3
        {
            get { return _entIdioma3; }
            set
            {
                if (_entIdioma3 != value)
                {
                    _entIdioma3 = value;
                    OnPropertyChanged("EntIdioma3");
                }
            }
        }
        private string _entIdioma3;
    
        [DataMember]
        public string EntIdioma3Niv
        {
            get { return _entIdioma3Niv; }
            set
            {
                if (_entIdioma3Niv != value)
                {
                    _entIdioma3Niv = value;
                    OnPropertyChanged("EntIdioma3Niv");
                }
            }
        }
        private string _entIdioma3Niv;
    
        [DataMember]
        public string EntIdioma3Conhec
        {
            get { return _entIdioma3Conhec; }
            set
            {
                if (_entIdioma3Conhec != value)
                {
                    _entIdioma3Conhec = value;
                    OnPropertyChanged("EntIdioma3Conhec");
                }
            }
        }
        private string _entIdioma3Conhec;
    
        [DataMember]
        public string EntIdioma4
        {
            get { return _entIdioma4; }
            set
            {
                if (_entIdioma4 != value)
                {
                    _entIdioma4 = value;
                    OnPropertyChanged("EntIdioma4");
                }
            }
        }
        private string _entIdioma4;
    
        [DataMember]
        public string EntIdioma4Niv
        {
            get { return _entIdioma4Niv; }
            set
            {
                if (_entIdioma4Niv != value)
                {
                    _entIdioma4Niv = value;
                    OnPropertyChanged("EntIdioma4Niv");
                }
            }
        }
        private string _entIdioma4Niv;
    
        [DataMember]
        public string EntIdioma4Conhec
        {
            get { return _entIdioma4Conhec; }
            set
            {
                if (_entIdioma4Conhec != value)
                {
                    _entIdioma4Conhec = value;
                    OnPropertyChanged("EntIdioma4Conhec");
                }
            }
        }
        private string _entIdioma4Conhec;
    
        [DataMember]
        public string EntIdioma5
        {
            get { return _entIdioma5; }
            set
            {
                if (_entIdioma5 != value)
                {
                    _entIdioma5 = value;
                    OnPropertyChanged("EntIdioma5");
                }
            }
        }
        private string _entIdioma5;
    
        [DataMember]
        public string EntIdioma5Niv
        {
            get { return _entIdioma5Niv; }
            set
            {
                if (_entIdioma5Niv != value)
                {
                    _entIdioma5Niv = value;
                    OnPropertyChanged("EntIdioma5Niv");
                }
            }
        }
        private string _entIdioma5Niv;
    
        [DataMember]
        public string EntIdioma5Conhec
        {
            get { return _entIdioma5Conhec; }
            set
            {
                if (_entIdioma5Conhec != value)
                {
                    _entIdioma5Conhec = value;
                    OnPropertyChanged("EntIdioma5Conhec");
                }
            }
        }
        private string _entIdioma5Conhec;
    
        [DataMember]
        public string EntNumMatchCode
        {
            get { return _entNumMatchCode; }
            set
            {
                if (_entNumMatchCode != value)
                {
                    _entNumMatchCode = value;
                    OnPropertyChanged("EntNumMatchCode");
                }
            }
        }
        private string _entNumMatchCode;
    
        [DataMember]
        public string EntLocCobrancaOMesmo
        {
            get { return _entLocCobrancaOMesmo; }
            set
            {
                if (_entLocCobrancaOMesmo != value)
                {
                    _entLocCobrancaOMesmo = value;
                    OnPropertyChanged("EntLocCobrancaOMesmo");
                }
            }
        }
        private string _entLocCobrancaOMesmo;
    
        [DataMember]
        public string EntLocEntregaOMesmo
        {
            get { return _entLocEntregaOMesmo; }
            set
            {
                if (_entLocEntregaOMesmo != value)
                {
                    _entLocEntregaOMesmo = value;
                    OnPropertyChanged("EntLocEntregaOMesmo");
                }
            }
        }
        private string _entLocEntregaOMesmo;
    
        [DataMember]
        public string EntTransporteOMesmo
        {
            get { return _entTransporteOMesmo; }
            set
            {
                if (_entTransporteOMesmo != value)
                {
                    _entTransporteOMesmo = value;
                    OnPropertyChanged("EntTransporteOMesmo");
                }
            }
        }
        private string _entTransporteOMesmo;
    
        [DataMember]
        public string EntTranspCod
        {
            get { return _entTranspCod; }
            set
            {
                if (_entTranspCod != value)
                {
                    ChangeTracker.RecordOriginalValue("EntTranspCod", _entTranspCod);
                    if (!IsDeserializing)
                    {
                        if (ENTIDADE3 != null && ENTIDADE3.EntCod != value)
                        {
                            ENTIDADE3 = null;
                        }
                    }
                    _entTranspCod = value;
                    OnPropertyChanged("EntTranspCod");
                }
            }
        }
        private string _entTranspCod;
    
        [DataMember]
        public string EntOficializ
        {
            get { return _entOficializ; }
            set
            {
                if (_entOficializ != value)
                {
                    _entOficializ = value;
                    OnPropertyChanged("EntOficializ");
                }
            }
        }
        private string _entOficializ;
    
        [DataMember]
        public string EntNaturCidCod
        {
            get { return _entNaturCidCod; }
            set
            {
                if (_entNaturCidCod != value)
                {
                    ChangeTracker.RecordOriginalValue("EntNaturCidCod", _entNaturCidCod);
                    if (!IsDeserializing)
                    {
                        if (CIDADE1 != null && CIDADE1.CidCod != value)
                        {
                            CIDADE1 = null;
                        }
                    }
                    _entNaturCidCod = value;
                    OnPropertyChanged("EntNaturCidCod");
                }
            }
        }
        private string _entNaturCidCod;
    
        [DataMember]
        public string EntSegNacionPaisSigla
        {
            get { return _entSegNacionPaisSigla; }
            set
            {
                if (_entSegNacionPaisSigla != value)
                {
                    _entSegNacionPaisSigla = value;
                    OnPropertyChanged("EntSegNacionPaisSigla");
                }
            }
        }
        private string _entSegNacionPaisSigla;
    
        [DataMember]
        public string EntPassapNum
        {
            get { return _entPassapNum; }
            set
            {
                if (_entPassapNum != value)
                {
                    _entPassapNum = value;
                    OnPropertyChanged("EntPassapNum");
                }
            }
        }
        private string _entPassapNum;
    
        [DataMember]
        public Nullable<System.DateTime> EntPassapDataValid
        {
            get { return _entPassapDataValid; }
            set
            {
                if (_entPassapDataValid != value)
                {
                    _entPassapDataValid = value;
                    OnPropertyChanged("EntPassapDataValid");
                }
            }
        }
        private Nullable<System.DateTime> _entPassapDataValid;
    
        [DataMember]
        public string EntFumante
        {
            get { return _entFumante; }
            set
            {
                if (_entFumante != value)
                {
                    _entFumante = value;
                    OnPropertyChanged("EntFumante");
                }
            }
        }
        private string _entFumante;
    
        [DataMember]
        public string EntAlergiaPor
        {
            get { return _entAlergiaPor; }
            set
            {
                if (_entAlergiaPor != value)
                {
                    _entAlergiaPor = value;
                    OnPropertyChanged("EntAlergiaPor");
                }
            }
        }
        private string _entAlergiaPor;
    
        [DataMember]
        public string EntEstCivil
        {
            get { return _entEstCivil; }
            set
            {
                if (_entEstCivil != value)
                {
                    _entEstCivil = value;
                    OnPropertyChanged("EntEstCivil");
                }
            }
        }
        private string _entEstCivil;
    
        [DataMember]
        public string EntVeget
        {
            get { return _entVeget; }
            set
            {
                if (_entVeget != value)
                {
                    _entVeget = value;
                    OnPropertyChanged("EntVeget");
                }
            }
        }
        private string _entVeget;
    
        [DataMember]
        public string EntPrefSemAnim
        {
            get { return _entPrefSemAnim; }
            set
            {
                if (_entPrefSemAnim != value)
                {
                    _entPrefSemAnim = value;
                    OnPropertyChanged("EntPrefSemAnim");
                }
            }
        }
        private string _entPrefSemAnim;
    
        [DataMember]
        public string EntPrefSemCrianc
        {
            get { return _entPrefSemCrianc; }
            set
            {
                if (_entPrefSemCrianc != value)
                {
                    _entPrefSemCrianc = value;
                    OnPropertyChanged("EntPrefSemCrianc");
                }
            }
        }
        private string _entPrefSemCrianc;
    
        [DataMember]
        public string EntNomePai
        {
            get { return _entNomePai; }
            set
            {
                if (_entNomePai != value)
                {
                    _entNomePai = value;
                    OnPropertyChanged("EntNomePai");
                }
            }
        }
        private string _entNomePai;
    
        [DataMember]
        public string EntNomeMae
        {
            get { return _entNomeMae; }
            set
            {
                if (_entNomeMae != value)
                {
                    _entNomeMae = value;
                    OnPropertyChanged("EntNomeMae");
                }
            }
        }
        private string _entNomeMae;
    
        [DataMember]
        public string EntEmpPagaDespTotHospede
        {
            get { return _entEmpPagaDespTotHospede; }
            set
            {
                if (_entEmpPagaDespTotHospede != value)
                {
                    _entEmpPagaDespTotHospede = value;
                    OnPropertyChanged("EntEmpPagaDespTotHospede");
                }
            }
        }
        private string _entEmpPagaDespTotHospede;
    
        [DataMember]
        public string EntPossuiFilho
        {
            get { return _entPossuiFilho; }
            set
            {
                if (_entPossuiFilho != value)
                {
                    _entPossuiFilho = value;
                    OnPropertyChanged("EntPossuiFilho");
                }
            }
        }
        private string _entPossuiFilho;
    
        [DataMember]
        public string EntMoraCom
        {
            get { return _entMoraCom; }
            set
            {
                if (_entMoraCom != value)
                {
                    _entMoraCom = value;
                    OnPropertyChanged("EntMoraCom");
                }
            }
        }
        private string _entMoraCom;
    
        [DataMember]
        public string EntGrauEscol
        {
            get { return _entGrauEscol; }
            set
            {
                if (_entGrauEscol != value)
                {
                    _entGrauEscol = value;
                    OnPropertyChanged("EntGrauEscol");
                }
            }
        }
        private string _entGrauEscol;
    
        [DataMember]
        public string EntHabitoLazer1
        {
            get { return _entHabitoLazer1; }
            set
            {
                if (_entHabitoLazer1 != value)
                {
                    _entHabitoLazer1 = value;
                    OnPropertyChanged("EntHabitoLazer1");
                }
            }
        }
        private string _entHabitoLazer1;
    
        [DataMember]
        public string EntHabitoLazer2
        {
            get { return _entHabitoLazer2; }
            set
            {
                if (_entHabitoLazer2 != value)
                {
                    _entHabitoLazer2 = value;
                    OnPropertyChanged("EntHabitoLazer2");
                }
            }
        }
        private string _entHabitoLazer2;
    
        [DataMember]
        public string EntHabitoLazer3
        {
            get { return _entHabitoLazer3; }
            set
            {
                if (_entHabitoLazer3 != value)
                {
                    _entHabitoLazer3 = value;
                    OnPropertyChanged("EntHabitoLazer3");
                }
            }
        }
        private string _entHabitoLazer3;
    
        [DataMember]
        public string EntTexto
        {
            get { return _entTexto; }
            set
            {
                if (_entTexto != value)
                {
                    _entTexto = value;
                    OnPropertyChanged("EntTexto");
                }
            }
        }
        private string _entTexto;
    
        [DataMember]
        public string NIVCOD
        {
            get { return _nIVCOD; }
            set
            {
                if (_nIVCOD != value)
                {
                    _nIVCOD = value;
                    OnPropertyChanged("NIVCOD");
                }
            }
        }
        private string _nIVCOD;
    
        [DataMember]
        public string EntInscSuframa
        {
            get { return _entInscSuframa; }
            set
            {
                if (_entInscSuframa != value)
                {
                    _entInscSuframa = value;
                    OnPropertyChanged("EntInscSuframa");
                }
            }
        }
        private string _entInscSuframa;
    
        [DataMember]
        public string EntNat
        {
            get { return _entNat; }
            set
            {
                if (_entNat != value)
                {
                    _entNat = value;
                    OnPropertyChanged("EntNat");
                }
            }
        }
        private string _entNat;
    
        [DataMember]
        public string EntInscIata
        {
            get { return _entInscIata; }
            set
            {
                if (_entInscIata != value)
                {
                    _entInscIata = value;
                    OnPropertyChanged("EntInscIata");
                }
            }
        }
        private string _entInscIata;
    
        [DataMember]
        public string EntInscEmbratur
        {
            get { return _entInscEmbratur; }
            set
            {
                if (_entInscEmbratur != value)
                {
                    _entInscEmbratur = value;
                    OnPropertyChanged("EntInscEmbratur");
                }
            }
        }
        private string _entInscEmbratur;
    
        [DataMember]
        public string IndEconCod
        {
            get { return _indEconCod; }
            set
            {
                if (_indEconCod != value)
                {
                    _indEconCod = value;
                    OnPropertyChanged("IndEconCod");
                }
            }
        }
        private string _indEconCod;
    
        [DataMember]
        public string EntRespDesp
        {
            get { return _entRespDesp; }
            set
            {
                if (_entRespDesp != value)
                {
                    _entRespDesp = value;
                    OnPropertyChanged("EntRespDesp");
                }
            }
        }
        private string _entRespDesp;
    
        [DataMember]
        public Nullable<short> EntQtdDepend
        {
            get { return _entQtdDepend; }
            set
            {
                if (_entQtdDepend != value)
                {
                    _entQtdDepend = value;
                    OnPropertyChanged("EntQtdDepend");
                }
            }
        }
        private Nullable<short> _entQtdDepend;
    
        [DataMember]
        public string EntUtilizaSoTabPvRelac
        {
            get { return _entUtilizaSoTabPvRelac; }
            set
            {
                if (_entUtilizaSoTabPvRelac != value)
                {
                    _entUtilizaSoTabPvRelac = value;
                    OnPropertyChanged("EntUtilizaSoTabPvRelac");
                }
            }
        }
        private string _entUtilizaSoTabPvRelac;
    
        [DataMember]
        public string ENTFATURAMOMESMO
        {
            get { return _eNTFATURAMOMESMO; }
            set
            {
                if (_eNTFATURAMOMESMO != value)
                {
                    _eNTFATURAMOMESMO = value;
                    OnPropertyChanged("ENTFATURAMOMESMO");
                }
            }
        }
        private string _eNTFATURAMOMESMO;
    
        [DataMember]
        public string EntPermAgrupBoleto
        {
            get { return _entPermAgrupBoleto; }
            set
            {
                if (_entPermAgrupBoleto != value)
                {
                    _entPermAgrupBoleto = value;
                    OnPropertyChanged("EntPermAgrupBoleto");
                }
            }
        }
        private string _entPermAgrupBoleto;
    
        [DataMember]
        public Nullable<System.DateTime> EntDataUltBalancoPat
        {
            get { return _entDataUltBalancoPat; }
            set
            {
                if (_entDataUltBalancoPat != value)
                {
                    _entDataUltBalancoPat = value;
                    OnPropertyChanged("EntDataUltBalancoPat");
                }
            }
        }
        private Nullable<System.DateTime> _entDataUltBalancoPat;
    
        [DataMember]
        public Nullable<System.DateTime> EntDataValidCartCnpjCpf
        {
            get { return _entDataValidCartCnpjCpf; }
            set
            {
                if (_entDataValidCartCnpjCpf != value)
                {
                    _entDataValidCartCnpjCpf = value;
                    OnPropertyChanged("EntDataValidCartCnpjCpf");
                }
            }
        }
        private Nullable<System.DateTime> _entDataValidCartCnpjCpf;
    
        [DataMember]
        public Nullable<System.DateTime> EntDataValidCertFazFed
        {
            get { return _entDataValidCertFazFed; }
            set
            {
                if (_entDataValidCertFazFed != value)
                {
                    _entDataValidCertFazFed = value;
                    OnPropertyChanged("EntDataValidCertFazFed");
                }
            }
        }
        private Nullable<System.DateTime> _entDataValidCertFazFed;
    
        [DataMember]
        public Nullable<System.DateTime> EntDataValidCertFazEst
        {
            get { return _entDataValidCertFazEst; }
            set
            {
                if (_entDataValidCertFazEst != value)
                {
                    _entDataValidCertFazEst = value;
                    OnPropertyChanged("EntDataValidCertFazEst");
                }
            }
        }
        private Nullable<System.DateTime> _entDataValidCertFazEst;
    
        [DataMember]
        public Nullable<System.DateTime> EntDataValidCertFazMun
        {
            get { return _entDataValidCertFazMun; }
            set
            {
                if (_entDataValidCertFazMun != value)
                {
                    _entDataValidCertFazMun = value;
                    OnPropertyChanged("EntDataValidCertFazMun");
                }
            }
        }
        private Nullable<System.DateTime> _entDataValidCertFazMun;
    
        [DataMember]
        public Nullable<System.DateTime> EntDataValidCertDivAtivaUniao
        {
            get { return _entDataValidCertDivAtivaUniao; }
            set
            {
                if (_entDataValidCertDivAtivaUniao != value)
                {
                    _entDataValidCertDivAtivaUniao = value;
                    OnPropertyChanged("EntDataValidCertDivAtivaUniao");
                }
            }
        }
        private Nullable<System.DateTime> _entDataValidCertDivAtivaUniao;
    
        [DataMember]
        public Nullable<System.DateTime> EntDataValidCertFgts
        {
            get { return _entDataValidCertFgts; }
            set
            {
                if (_entDataValidCertFgts != value)
                {
                    _entDataValidCertFgts = value;
                    OnPropertyChanged("EntDataValidCertFgts");
                }
            }
        }
        private Nullable<System.DateTime> _entDataValidCertFgts;
    
        [DataMember]
        public Nullable<System.DateTime> EntDataValidCertInss
        {
            get { return _entDataValidCertInss; }
            set
            {
                if (_entDataValidCertInss != value)
                {
                    _entDataValidCertInss = value;
                    OnPropertyChanged("EntDataValidCertInss");
                }
            }
        }
        private Nullable<System.DateTime> _entDataValidCertInss;
    
        [DataMember]
        public Nullable<System.DateTime> EntDataValidCertFalencConcord
        {
            get { return _entDataValidCertFalencConcord; }
            set
            {
                if (_entDataValidCertFalencConcord != value)
                {
                    _entDataValidCertFalencConcord = value;
                    OnPropertyChanged("EntDataValidCertFalencConcord");
                }
            }
        }
        private Nullable<System.DateTime> _entDataValidCertFalencConcord;
    
        [DataMember]
        public Nullable<System.DateTime> EntDataValidCertRegProfis
        {
            get { return _entDataValidCertRegProfis; }
            set
            {
                if (_entDataValidCertRegProfis != value)
                {
                    _entDataValidCertRegProfis = value;
                    OnPropertyChanged("EntDataValidCertRegProfis");
                }
            }
        }
        private Nullable<System.DateTime> _entDataValidCertRegProfis;
    
        [DataMember]
        public Nullable<decimal> EntValCapSocial
        {
            get { return _entValCapSocial; }
            set
            {
                if (_entValCapSocial != value)
                {
                    _entValCapSocial = value;
                    OnPropertyChanged("EntValCapSocial");
                }
            }
        }
        private Nullable<decimal> _entValCapSocial;
    
        [DataMember]
        public Nullable<decimal> EntValLiqGeral
        {
            get { return _entValLiqGeral; }
            set
            {
                if (_entValLiqGeral != value)
                {
                    _entValLiqGeral = value;
                    OnPropertyChanged("EntValLiqGeral");
                }
            }
        }
        private Nullable<decimal> _entValLiqGeral;
    
        [DataMember]
        public Nullable<decimal> EntValLiqSeca
        {
            get { return _entValLiqSeca; }
            set
            {
                if (_entValLiqSeca != value)
                {
                    _entValLiqSeca = value;
                    OnPropertyChanged("EntValLiqSeca");
                }
            }
        }
        private Nullable<decimal> _entValLiqSeca;
    
        [DataMember]
        public Nullable<decimal> EntValLiqCorrente
        {
            get { return _entValLiqCorrente; }
            set
            {
                if (_entValLiqCorrente != value)
                {
                    _entValLiqCorrente = value;
                    OnPropertyChanged("EntValLiqCorrente");
                }
            }
        }
        private Nullable<decimal> _entValLiqCorrente;
    
        [DataMember]
        public Nullable<decimal> EntValGrauEndiv
        {
            get { return _entValGrauEndiv; }
            set
            {
                if (_entValGrauEndiv != value)
                {
                    _entValGrauEndiv = value;
                    OnPropertyChanged("EntValGrauEndiv");
                }
            }
        }
        private Nullable<decimal> _entValGrauEndiv;
    
        [DataMember]
        public Nullable<decimal> EntValFatorInsolv
        {
            get { return _entValFatorInsolv; }
            set
            {
                if (_entValFatorInsolv != value)
                {
                    _entValFatorInsolv = value;
                    OnPropertyChanged("EntValFatorInsolv");
                }
            }
        }
        private Nullable<decimal> _entValFatorInsolv;
    
        [DataMember]
        public string EntTextoHist
        {
            get { return _entTextoHist; }
            set
            {
                if (_entTextoHist != value)
                {
                    _entTextoHist = value;
                    OnPropertyChanged("EntTextoHist");
                }
            }
        }
        private string _entTextoHist;
    
        [DataMember]
        public string EntStatCartCnpjCpf
        {
            get { return _entStatCartCnpjCpf; }
            set
            {
                if (_entStatCartCnpjCpf != value)
                {
                    _entStatCartCnpjCpf = value;
                    OnPropertyChanged("EntStatCartCnpjCpf");
                }
            }
        }
        private string _entStatCartCnpjCpf;
    
        [DataMember]
        public string EntSitPrestServRefIss
        {
            get { return _entSitPrestServRefIss; }
            set
            {
                if (_entSitPrestServRefIss != value)
                {
                    _entSitPrestServRefIss = value;
                    OnPropertyChanged("EntSitPrestServRefIss");
                }
            }
        }
        private string _entSitPrestServRefIss;
    
        [DataMember]
        public string TurnoTrabCod
        {
            get { return _turnoTrabCod; }
            set
            {
                if (_turnoTrabCod != value)
                {
                    _turnoTrabCod = value;
                    OnPropertyChanged("TurnoTrabCod");
                }
            }
        }
        private string _turnoTrabCod;
    
        [DataMember]
        public string EntBcoNumCaucao
        {
            get { return _entBcoNumCaucao; }
            set
            {
                if (_entBcoNumCaucao != value)
                {
                    _entBcoNumCaucao = value;
                    OnPropertyChanged("EntBcoNumCaucao");
                }
            }
        }
        private string _entBcoNumCaucao;
    
        [DataMember]
        public string EntAgNumCaucao
        {
            get { return _entAgNumCaucao; }
            set
            {
                if (_entAgNumCaucao != value)
                {
                    _entAgNumCaucao = value;
                    OnPropertyChanged("EntAgNumCaucao");
                }
            }
        }
        private string _entAgNumCaucao;
    
        [DataMember]
        public string EntCtrlMovPedTur
        {
            get { return _entCtrlMovPedTur; }
            set
            {
                if (_entCtrlMovPedTur != value)
                {
                    _entCtrlMovPedTur = value;
                    OnPropertyChanged("EntCtrlMovPedTur");
                }
            }
        }
        private string _entCtrlMovPedTur;
    
        [DataMember]
        public string EntAplicaAcresValParcTabFin
        {
            get { return _entAplicaAcresValParcTabFin; }
            set
            {
                if (_entAplicaAcresValParcTabFin != value)
                {
                    _entAplicaAcresValParcTabFin = value;
                    OnPropertyChanged("EntAplicaAcresValParcTabFin");
                }
            }
        }
        private string _entAplicaAcresValParcTabFin;
    
        [DataMember]
        public string EntOptanteSimples
        {
            get { return _entOptanteSimples; }
            set
            {
                if (_entOptanteSimples != value)
                {
                    _entOptanteSimples = value;
                    OnPropertyChanged("EntOptanteSimples");
                }
            }
        }
        private string _entOptanteSimples;
    
        [DataMember]
        public string ClasseEntCod
        {
            get { return _classeEntCod; }
            set
            {
                if (_classeEntCod != value)
                {
                    _classeEntCod = value;
                    OnPropertyChanged("ClasseEntCod");
                }
            }
        }
        private string _classeEntCod;
    
        [DataMember]
        public Nullable<short> EntQtdDiasEntrega
        {
            get { return _entQtdDiasEntrega; }
            set
            {
                if (_entQtdDiasEntrega != value)
                {
                    _entQtdDiasEntrega = value;
                    OnPropertyChanged("EntQtdDiasEntrega");
                }
            }
        }
        private Nullable<short> _entQtdDiasEntrega;
    
        [DataMember]
        public string EntHttpImage
        {
            get { return _entHttpImage; }
            set
            {
                if (_entHttpImage != value)
                {
                    _entHttpImage = value;
                    OnPropertyChanged("EntHttpImage");
                }
            }
        }
        private string _entHttpImage;
    
        [DataMember]
        public string EntIncIpiBaseIcmsPad
        {
            get { return _entIncIpiBaseIcmsPad; }
            set
            {
                if (_entIncIpiBaseIcmsPad != value)
                {
                    _entIncIpiBaseIcmsPad = value;
                    OnPropertyChanged("EntIncIpiBaseIcmsPad");
                }
            }
        }
        private string _entIncIpiBaseIcmsPad;
    
        [DataMember]
        public Nullable<decimal> EntPercCofinsFormPv
        {
            get { return _entPercCofinsFormPv; }
            set
            {
                if (_entPercCofinsFormPv != value)
                {
                    _entPercCofinsFormPv = value;
                    OnPropertyChanged("EntPercCofinsFormPv");
                }
            }
        }
        private Nullable<decimal> _entPercCofinsFormPv;
    
        [DataMember]
        public string EntTurGeraFin
        {
            get { return _entTurGeraFin; }
            set
            {
                if (_entTurGeraFin != value)
                {
                    _entTurGeraFin = value;
                    OnPropertyChanged("EntTurGeraFin");
                }
            }
        }
        private string _entTurGeraFin;
    
        [DataMember]
        public string EntNatGov
        {
            get { return _entNatGov; }
            set
            {
                if (_entNatGov != value)
                {
                    _entNatGov = value;
                    OnPropertyChanged("EntNatGov");
                }
            }
        }
        private string _entNatGov;
    
        [DataMember]
        public string EntNaoRetCofinsAmparPor
        {
            get { return _entNaoRetCofinsAmparPor; }
            set
            {
                if (_entNaoRetCofinsAmparPor != value)
                {
                    _entNaoRetCofinsAmparPor = value;
                    OnPropertyChanged("EntNaoRetCofinsAmparPor");
                }
            }
        }
        private string _entNaoRetCofinsAmparPor;
    
        [DataMember]
        public string EntNaoRetCsllAmparPor
        {
            get { return _entNaoRetCsllAmparPor; }
            set
            {
                if (_entNaoRetCsllAmparPor != value)
                {
                    _entNaoRetCsllAmparPor = value;
                    OnPropertyChanged("EntNaoRetCsllAmparPor");
                }
            }
        }
        private string _entNaoRetCsllAmparPor;
    
        [DataMember]
        public string EntNaoRetPisAmparPor
        {
            get { return _entNaoRetPisAmparPor; }
            set
            {
                if (_entNaoRetPisAmparPor != value)
                {
                    _entNaoRetPisAmparPor = value;
                    OnPropertyChanged("EntNaoRetPisAmparPor");
                }
            }
        }
        private string _entNaoRetPisAmparPor;
    
        [DataMember]
        public string TipoEtapaCodEstr
        {
            get { return _tipoEtapaCodEstr; }
            set
            {
                if (_tipoEtapaCodEstr != value)
                {
                    _tipoEtapaCodEstr = value;
                    OnPropertyChanged("TipoEtapaCodEstr");
                }
            }
        }
        private string _tipoEtapaCodEstr;
    
        [DataMember]
        public string EntOptanteSimplesFed
        {
            get { return _entOptanteSimplesFed; }
            set
            {
                if (_entOptanteSimplesFed != value)
                {
                    _entOptanteSimplesFed = value;
                    OnPropertyChanged("EntOptanteSimplesFed");
                }
            }
        }
        private string _entOptanteSimplesFed;
    
        [DataMember]
        public string EntInscMunic
        {
            get { return _entInscMunic; }
            set
            {
                if (_entInscMunic != value)
                {
                    _entInscMunic = value;
                    OnPropertyChanged("EntInscMunic");
                }
            }
        }
        private string _entInscMunic;
    
        [DataMember]
        public string EntCodGrupoBloq
        {
            get { return _entCodGrupoBloq; }
            set
            {
                if (_entCodGrupoBloq != value)
                {
                    ChangeTracker.RecordOriginalValue("EntCodGrupoBloq", _entCodGrupoBloq);
                    if (!IsDeserializing)
                    {
                        if (ENTIDADE2 != null && ENTIDADE2.EntCod != value)
                        {
                            ENTIDADE2 = null;
                        }
                    }
                    _entCodGrupoBloq = value;
                    OnPropertyChanged("EntCodGrupoBloq");
                }
            }
        }
        private string _entCodGrupoBloq;
    
        [DataMember]
        public Nullable<decimal> EntPercDescComisVendaDir
        {
            get { return _entPercDescComisVendaDir; }
            set
            {
                if (_entPercDescComisVendaDir != value)
                {
                    _entPercDescComisVendaDir = value;
                    OnPropertyChanged("EntPercDescComisVendaDir");
                }
            }
        }
        private Nullable<decimal> _entPercDescComisVendaDir;
    
        [DataMember]
        public string EntCEI
        {
            get { return _entCEI; }
            set
            {
                if (_entCEI != value)
                {
                    _entCEI = value;
                    OnPropertyChanged("EntCEI");
                }
            }
        }
        private string _entCEI;
    
        [DataMember]
        public string EntCalcIrrf
        {
            get { return _entCalcIrrf; }
            set
            {
                if (_entCalcIrrf != value)
                {
                    _entCalcIrrf = value;
                    OnPropertyChanged("EntCalcIrrf");
                }
            }
        }
        private string _entCalcIrrf;
    
        [DataMember]
        public Nullable<decimal> EntFatorSegA
        {
            get { return _entFatorSegA; }
            set
            {
                if (_entFatorSegA != value)
                {
                    _entFatorSegA = value;
                    OnPropertyChanged("EntFatorSegA");
                }
            }
        }
        private Nullable<decimal> _entFatorSegA;
    
        [DataMember]
        public Nullable<decimal> EntFatorSegB
        {
            get { return _entFatorSegB; }
            set
            {
                if (_entFatorSegB != value)
                {
                    _entFatorSegB = value;
                    OnPropertyChanged("EntFatorSegB");
                }
            }
        }
        private Nullable<decimal> _entFatorSegB;
    
        [DataMember]
        public Nullable<decimal> EntFatorSegC
        {
            get { return _entFatorSegC; }
            set
            {
                if (_entFatorSegC != value)
                {
                    _entFatorSegC = value;
                    OnPropertyChanged("EntFatorSegC");
                }
            }
        }
        private Nullable<decimal> _entFatorSegC;
    
        [DataMember]
        public string NatJurCod
        {
            get { return _natJurCod; }
            set
            {
                if (_natJurCod != value)
                {
                    _natJurCod = value;
                    OnPropertyChanged("NatJurCod");
                }
            }
        }
        private string _natJurCod;
    
        [DataMember]
        public string ENTBCONUMDEPOSITO
        {
            get { return _eNTBCONUMDEPOSITO; }
            set
            {
                if (_eNTBCONUMDEPOSITO != value)
                {
                    _eNTBCONUMDEPOSITO = value;
                    OnPropertyChanged("ENTBCONUMDEPOSITO");
                }
            }
        }
        private string _eNTBCONUMDEPOSITO;
    
        [DataMember]
        public string ENTAGNUMDEPOSITO
        {
            get { return _eNTAGNUMDEPOSITO; }
            set
            {
                if (_eNTAGNUMDEPOSITO != value)
                {
                    _eNTAGNUMDEPOSITO = value;
                    OnPropertyChanged("ENTAGNUMDEPOSITO");
                }
            }
        }
        private string _eNTAGNUMDEPOSITO;
    
        [DataMember]
        public string EntIncluiIssPrecoVenda
        {
            get { return _entIncluiIssPrecoVenda; }
            set
            {
                if (_entIncluiIssPrecoVenda != value)
                {
                    _entIncluiIssPrecoVenda = value;
                    OnPropertyChanged("EntIncluiIssPrecoVenda");
                }
            }
        }
        private string _entIncluiIssPrecoVenda;
    
        [DataMember]
        public string EntIncluiIcmsPrecoVenda
        {
            get { return _entIncluiIcmsPrecoVenda; }
            set
            {
                if (_entIncluiIcmsPrecoVenda != value)
                {
                    _entIncluiIcmsPrecoVenda = value;
                    OnPropertyChanged("EntIncluiIcmsPrecoVenda");
                }
            }
        }
        private string _entIncluiIcmsPrecoVenda;
    
        [DataMember]
        public string NivCodIndireta
        {
            get { return _nivCodIndireta; }
            set
            {
                if (_nivCodIndireta != value)
                {
                    _nivCodIndireta = value;
                    OnPropertyChanged("NivCodIndireta");
                }
            }
        }
        private string _nivCodIndireta;
    
        [DataMember]
        public string EntExportArqFat
        {
            get { return _entExportArqFat; }
            set
            {
                if (_entExportArqFat != value)
                {
                    _entExportArqFat = value;
                    OnPropertyChanged("EntExportArqFat");
                }
            }
        }
        private string _entExportArqFat;
    
        [DataMember]
        public string EntObrigEntParcVendaWeb
        {
            get { return _entObrigEntParcVendaWeb; }
            set
            {
                if (_entObrigEntParcVendaWeb != value)
                {
                    _entObrigEntParcVendaWeb = value;
                    OnPropertyChanged("EntObrigEntParcVendaWeb");
                }
            }
        }
        private string _entObrigEntParcVendaWeb;
    
        [DataMember]
        public string ENTCONSIDQTDMINFAT
        {
            get { return _eNTCONSIDQTDMINFAT; }
            set
            {
                if (_eNTCONSIDQTDMINFAT != value)
                {
                    _eNTCONSIDQTDMINFAT = value;
                    OnPropertyChanged("ENTCONSIDQTDMINFAT");
                }
            }
        }
        private string _eNTCONSIDQTDMINFAT;
    
        [DataMember]
        public string EntHabTelaEntVendaWeb
        {
            get { return _entHabTelaEntVendaWeb; }
            set
            {
                if (_entHabTelaEntVendaWeb != value)
                {
                    _entHabTelaEntVendaWeb = value;
                    OnPropertyChanged("EntHabTelaEntVendaWeb");
                }
            }
        }
        private string _entHabTelaEntVendaWeb;
    
        [DataMember]
        public string EntCodAlt
        {
            get { return _entCodAlt; }
            set
            {
                if (_entCodAlt != value)
                {
                    _entCodAlt = value;
                    OnPropertyChanged("EntCodAlt");
                }
            }
        }
        private string _entCodAlt;
    
        [DataMember]
        public string EntUtilizDescISS
        {
            get { return _entUtilizDescISS; }
            set
            {
                if (_entUtilizDescISS != value)
                {
                    _entUtilizDescISS = value;
                    OnPropertyChanged("EntUtilizDescISS");
                }
            }
        }
        private string _entUtilizDescISS;
    
        [DataMember]
        public string EntUtilizDescICMS
        {
            get { return _entUtilizDescICMS; }
            set
            {
                if (_entUtilizDescICMS != value)
                {
                    _entUtilizDescICMS = value;
                    OnPropertyChanged("EntUtilizDescICMS");
                }
            }
        }
        private string _entUtilizDescICMS;
    
        [DataMember]
        public string EntDesconsidValMinIrrf
        {
            get { return _entDesconsidValMinIrrf; }
            set
            {
                if (_entDesconsidValMinIrrf != value)
                {
                    _entDesconsidValMinIrrf = value;
                    OnPropertyChanged("EntDesconsidValMinIrrf");
                }
            }
        }
        private string _entDesconsidValMinIrrf;
    
        [DataMember]
        public string StatEntCod
        {
            get { return _statEntCod; }
            set
            {
                if (_statEntCod != value)
                {
                    _statEntCod = value;
                    OnPropertyChanged("StatEntCod");
                }
            }
        }
        private string _statEntCod;
    
        [DataMember]
        public string EntStatDescr
        {
            get { return _entStatDescr; }
            set
            {
                if (_entStatDescr != value)
                {
                    _entStatDescr = value;
                    OnPropertyChanged("EntStatDescr");
                }
            }
        }
        private string _entStatDescr;
    
        [DataMember]
        public string EntHttpImageRelatorio
        {
            get { return _entHttpImageRelatorio; }
            set
            {
                if (_entHttpImageRelatorio != value)
                {
                    _entHttpImageRelatorio = value;
                    OnPropertyChanged("EntHttpImageRelatorio");
                }
            }
        }
        private string _entHttpImageRelatorio;
    
        [DataMember]
        public string EntVisualizaTelaEstqTerc
        {
            get { return _entVisualizaTelaEstqTerc; }
            set
            {
                if (_entVisualizaTelaEstqTerc != value)
                {
                    _entVisualizaTelaEstqTerc = value;
                    OnPropertyChanged("EntVisualizaTelaEstqTerc");
                }
            }
        }
        private string _entVisualizaTelaEstqTerc;
    
        [DataMember]
        public string EntVisualizaTelaUltVendas
        {
            get { return _entVisualizaTelaUltVendas; }
            set
            {
                if (_entVisualizaTelaUltVendas != value)
                {
                    _entVisualizaTelaUltVendas = value;
                    OnPropertyChanged("EntVisualizaTelaUltVendas");
                }
            }
        }
        private string _entVisualizaTelaUltVendas;
    
        [DataMember]
        public string ENTTIPOVISUALPACOTE
        {
            get { return _eNTTIPOVISUALPACOTE; }
            set
            {
                if (_eNTTIPOVISUALPACOTE != value)
                {
                    _eNTTIPOVISUALPACOTE = value;
                    OnPropertyChanged("ENTTIPOVISUALPACOTE");
                }
            }
        }
        private string _eNTTIPOVISUALPACOTE;
    
        [DataMember]
        public string EntRegExportado
        {
            get { return _entRegExportado; }
            set
            {
                if (_entRegExportado != value)
                {
                    _entRegExportado = value;
                    OnPropertyChanged("EntRegExportado");
                }
            }
        }
        private string _entRegExportado;
    
        [DataMember]
        public string EntVerificaBloqLib
        {
            get { return _entVerificaBloqLib; }
            set
            {
                if (_entVerificaBloqLib != value)
                {
                    _entVerificaBloqLib = value;
                    OnPropertyChanged("EntVerificaBloqLib");
                }
            }
        }
        private string _entVerificaBloqLib;
    
        [DataMember]
        public string EquipCodEstr
        {
            get { return _equipCodEstr; }
            set
            {
                if (_equipCodEstr != value)
                {
                    _equipCodEstr = value;
                    OnPropertyChanged("EquipCodEstr");
                }
            }
        }
        private string _equipCodEstr;
    
        [DataMember]
        public string EntIgnoraHomForn
        {
            get { return _entIgnoraHomForn; }
            set
            {
                if (_entIgnoraHomForn != value)
                {
                    _entIgnoraHomForn = value;
                    OnPropertyChanged("EntIgnoraHomForn");
                }
            }
        }
        private string _entIgnoraHomForn;
    
        [DataMember]
        public string EntIncluiValFretePrecoLista
        {
            get { return _entIncluiValFretePrecoLista; }
            set
            {
                if (_entIncluiValFretePrecoLista != value)
                {
                    _entIncluiValFretePrecoLista = value;
                    OnPropertyChanged("EntIncluiValFretePrecoLista");
                }
            }
        }
        private string _entIncluiValFretePrecoLista;
    
        [DataMember]
        public string EntStatFreteVenda
        {
            get { return _entStatFreteVenda; }
            set
            {
                if (_entStatFreteVenda != value)
                {
                    _entStatFreteVenda = value;
                    OnPropertyChanged("EntStatFreteVenda");
                }
            }
        }
        private string _entStatFreteVenda;
    
        [DataMember]
        public string EntInfFinCodigo
        {
            get { return _entInfFinCodigo; }
            set
            {
                if (_entInfFinCodigo != value)
                {
                    _entInfFinCodigo = value;
                    OnPropertyChanged("EntInfFinCodigo");
                }
            }
        }
        private string _entInfFinCodigo;
    
        [DataMember]
        public string EntInfFinAvaliacao
        {
            get { return _entInfFinAvaliacao; }
            set
            {
                if (_entInfFinAvaliacao != value)
                {
                    _entInfFinAvaliacao = value;
                    OnPropertyChanged("EntInfFinAvaliacao");
                }
            }
        }
        private string _entInfFinAvaliacao;
    
        [DataMember]
        public string EntInfFinProblema
        {
            get { return _entInfFinProblema; }
            set
            {
                if (_entInfFinProblema != value)
                {
                    _entInfFinProblema = value;
                    OnPropertyChanged("EntInfFinProblema");
                }
            }
        }
        private string _entInfFinProblema;
    
        [DataMember]
        public string EntInfFinCancelamento
        {
            get { return _entInfFinCancelamento; }
            set
            {
                if (_entInfFinCancelamento != value)
                {
                    _entInfFinCancelamento = value;
                    OnPropertyChanged("EntInfFinCancelamento");
                }
            }
        }
        private string _entInfFinCancelamento;
    
        [DataMember]
        public string EntInfFinAdicional
        {
            get { return _entInfFinAdicional; }
            set
            {
                if (_entInfFinAdicional != value)
                {
                    _entInfFinAdicional = value;
                    OnPropertyChanged("EntInfFinAdicional");
                }
            }
        }
        private string _entInfFinAdicional;
    
        [DataMember]
        public string EntInfFinEmpRep
        {
            get { return _entInfFinEmpRep; }
            set
            {
                if (_entInfFinEmpRep != value)
                {
                    _entInfFinEmpRep = value;
                    OnPropertyChanged("EntInfFinEmpRep");
                }
            }
        }
        private string _entInfFinEmpRep;
    
        [DataMember]
        public string EntInfMailingManual
        {
            get { return _entInfMailingManual; }
            set
            {
                if (_entInfMailingManual != value)
                {
                    _entInfMailingManual = value;
                    OnPropertyChanged("EntInfMailingManual");
                }
            }
        }
        private string _entInfMailingManual;
    
        [DataMember]
        public string EntInfMailingConvite1
        {
            get { return _entInfMailingConvite1; }
            set
            {
                if (_entInfMailingConvite1 != value)
                {
                    _entInfMailingConvite1 = value;
                    OnPropertyChanged("EntInfMailingConvite1");
                }
            }
        }
        private string _entInfMailingConvite1;
    
        [DataMember]
        public string EntInfMailingConvite2
        {
            get { return _entInfMailingConvite2; }
            set
            {
                if (_entInfMailingConvite2 != value)
                {
                    _entInfMailingConvite2 = value;
                    OnPropertyChanged("EntInfMailingConvite2");
                }
            }
        }
        private string _entInfMailingConvite2;
    
        [DataMember]
        public string EntInfMailingCracha1
        {
            get { return _entInfMailingCracha1; }
            set
            {
                if (_entInfMailingCracha1 != value)
                {
                    _entInfMailingCracha1 = value;
                    OnPropertyChanged("EntInfMailingCracha1");
                }
            }
        }
        private string _entInfMailingCracha1;
    
        [DataMember]
        public string EntInfMailingCracha2
        {
            get { return _entInfMailingCracha2; }
            set
            {
                if (_entInfMailingCracha2 != value)
                {
                    _entInfMailingCracha2 = value;
                    OnPropertyChanged("EntInfMailingCracha2");
                }
            }
        }
        private string _entInfMailingCracha2;
    
        [DataMember]
        public string EntInfMailingCracha3
        {
            get { return _entInfMailingCracha3; }
            set
            {
                if (_entInfMailingCracha3 != value)
                {
                    _entInfMailingCracha3 = value;
                    OnPropertyChanged("EntInfMailingCracha3");
                }
            }
        }
        private string _entInfMailingCracha3;
    
        [DataMember]
        public string EntInfMailingCracha4
        {
            get { return _entInfMailingCracha4; }
            set
            {
                if (_entInfMailingCracha4 != value)
                {
                    _entInfMailingCracha4 = value;
                    OnPropertyChanged("EntInfMailingCracha4");
                }
            }
        }
        private string _entInfMailingCracha4;
    
        [DataMember]
        public string EntInfMailingNewsletter
        {
            get { return _entInfMailingNewsletter; }
            set
            {
                if (_entInfMailingNewsletter != value)
                {
                    _entInfMailingNewsletter = value;
                    OnPropertyChanged("EntInfMailingNewsletter");
                }
            }
        }
        private string _entInfMailingNewsletter;
    
        [DataMember]
        public string EntInfMailingEtiquetas
        {
            get { return _entInfMailingEtiquetas; }
            set
            {
                if (_entInfMailingEtiquetas != value)
                {
                    _entInfMailingEtiquetas = value;
                    OnPropertyChanged("EntInfMailingEtiquetas");
                }
            }
        }
        private string _entInfMailingEtiquetas;
    
        [DataMember]
        public string EntInfMailingOutrasInf1
        {
            get { return _entInfMailingOutrasInf1; }
            set
            {
                if (_entInfMailingOutrasInf1 != value)
                {
                    _entInfMailingOutrasInf1 = value;
                    OnPropertyChanged("EntInfMailingOutrasInf1");
                }
            }
        }
        private string _entInfMailingOutrasInf1;
    
        [DataMember]
        public string EntInfMailingOutrasInf2
        {
            get { return _entInfMailingOutrasInf2; }
            set
            {
                if (_entInfMailingOutrasInf2 != value)
                {
                    _entInfMailingOutrasInf2 = value;
                    OnPropertyChanged("EntInfMailingOutrasInf2");
                }
            }
        }
        private string _entInfMailingOutrasInf2;
    
        [DataMember]
        public string ENTRECEBENEWSLETTER
        {
            get { return _eNTRECEBENEWSLETTER; }
            set
            {
                if (_eNTRECEBENEWSLETTER != value)
                {
                    _eNTRECEBENEWSLETTER = value;
                    OnPropertyChanged("ENTRECEBENEWSLETTER");
                }
            }
        }
        private string _eNTRECEBENEWSLETTER;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<CIDADE> CIDADE
        {
            get
            {
                if (_cIDADE == null)
                {
                    _cIDADE = new TrackableCollection<CIDADE>();
                    _cIDADE.CollectionChanged += FixupCIDADE;
                }
                return _cIDADE;
            }
            set
            {
                if (!ReferenceEquals(_cIDADE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cIDADE != null)
                    {
                        _cIDADE.CollectionChanged -= FixupCIDADE;
                    }
                    _cIDADE = value;
                    if (_cIDADE != null)
                    {
                        _cIDADE.CollectionChanged += FixupCIDADE;
                    }
                    OnNavigationPropertyChanged("CIDADE");
                }
            }
        }
        private TrackableCollection<CIDADE> _cIDADE;
    
        [DataMember]
        public CIDADE CIDADE1
        {
            get { return _cIDADE1; }
            set
            {
                if (!ReferenceEquals(_cIDADE1, value))
                {
                    var previousValue = _cIDADE1;
                    _cIDADE1 = value;
                    FixupCIDADE1(previousValue);
                    OnNavigationPropertyChanged("CIDADE1");
                }
            }
        }
        private CIDADE _cIDADE1;
    
        [DataMember]
        public CIDADE CIDADE2
        {
            get { return _cIDADE2; }
            set
            {
                if (!ReferenceEquals(_cIDADE2, value))
                {
                    var previousValue = _cIDADE2;
                    _cIDADE2 = value;
                    FixupCIDADE2(previousValue);
                    OnNavigationPropertyChanged("CIDADE2");
                }
            }
        }
        private CIDADE _cIDADE2;
    
        [DataMember]
        public TrackableCollection<ENTIDADE> ENTIDADE1
        {
            get
            {
                if (_eNTIDADE1 == null)
                {
                    _eNTIDADE1 = new TrackableCollection<ENTIDADE>();
                    _eNTIDADE1.CollectionChanged += FixupENTIDADE1;
                }
                return _eNTIDADE1;
            }
            set
            {
                if (!ReferenceEquals(_eNTIDADE1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_eNTIDADE1 != null)
                    {
                        _eNTIDADE1.CollectionChanged -= FixupENTIDADE1;
                    }
                    _eNTIDADE1 = value;
                    if (_eNTIDADE1 != null)
                    {
                        _eNTIDADE1.CollectionChanged += FixupENTIDADE1;
                    }
                    OnNavigationPropertyChanged("ENTIDADE1");
                }
            }
        }
        private TrackableCollection<ENTIDADE> _eNTIDADE1;
    
        [DataMember]
        public ENTIDADE ENTIDADE2
        {
            get { return _eNTIDADE2; }
            set
            {
                if (!ReferenceEquals(_eNTIDADE2, value))
                {
                    var previousValue = _eNTIDADE2;
                    _eNTIDADE2 = value;
                    FixupENTIDADE2(previousValue);
                    OnNavigationPropertyChanged("ENTIDADE2");
                }
            }
        }
        private ENTIDADE _eNTIDADE2;
    
        [DataMember]
        public ENTIDADE1 ENTIDADE11
        {
            get { return _eNTIDADE11; }
            set
            {
                if (!ReferenceEquals(_eNTIDADE11, value))
                {
                    var previousValue = _eNTIDADE11;
                    _eNTIDADE11 = value;
                    FixupENTIDADE11(previousValue);
                    OnNavigationPropertyChanged("ENTIDADE11");
                }
            }
        }
        private ENTIDADE1 _eNTIDADE11;
    
        [DataMember]
        public TrackableCollection<ENTIDADE1> ENTIDADE12
        {
            get
            {
                if (_eNTIDADE12 == null)
                {
                    _eNTIDADE12 = new TrackableCollection<ENTIDADE1>();
                    _eNTIDADE12.CollectionChanged += FixupENTIDADE12;
                }
                return _eNTIDADE12;
            }
            set
            {
                if (!ReferenceEquals(_eNTIDADE12, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_eNTIDADE12 != null)
                    {
                        _eNTIDADE12.CollectionChanged -= FixupENTIDADE12;
                    }
                    _eNTIDADE12 = value;
                    if (_eNTIDADE12 != null)
                    {
                        _eNTIDADE12.CollectionChanged += FixupENTIDADE12;
                    }
                    OnNavigationPropertyChanged("ENTIDADE12");
                }
            }
        }
        private TrackableCollection<ENTIDADE1> _eNTIDADE12;
    
        [DataMember]
        public TrackableCollection<VENDEDOR> VENDEDOR
        {
            get
            {
                if (_vENDEDOR == null)
                {
                    _vENDEDOR = new TrackableCollection<VENDEDOR>();
                    _vENDEDOR.CollectionChanged += FixupVENDEDOR;
                }
                return _vENDEDOR;
            }
            set
            {
                if (!ReferenceEquals(_vENDEDOR, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_vENDEDOR != null)
                    {
                        _vENDEDOR.CollectionChanged -= FixupVENDEDOR;
                    }
                    _vENDEDOR = value;
                    if (_vENDEDOR != null)
                    {
                        _vENDEDOR.CollectionChanged += FixupVENDEDOR;
                    }
                    OnNavigationPropertyChanged("VENDEDOR");
                }
            }
        }
        private TrackableCollection<VENDEDOR> _vENDEDOR;
    
        [DataMember]
        public TrackableCollection<ENTIDADE> ENTIDADE13
        {
            get
            {
                if (_eNTIDADE13 == null)
                {
                    _eNTIDADE13 = new TrackableCollection<ENTIDADE>();
                    _eNTIDADE13.CollectionChanged += FixupENTIDADE13;
                }
                return _eNTIDADE13;
            }
            set
            {
                if (!ReferenceEquals(_eNTIDADE13, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_eNTIDADE13 != null)
                    {
                        _eNTIDADE13.CollectionChanged -= FixupENTIDADE13;
                    }
                    _eNTIDADE13 = value;
                    if (_eNTIDADE13 != null)
                    {
                        _eNTIDADE13.CollectionChanged += FixupENTIDADE13;
                    }
                    OnNavigationPropertyChanged("ENTIDADE13");
                }
            }
        }
        private TrackableCollection<ENTIDADE> _eNTIDADE13;
    
        [DataMember]
        public ENTIDADE ENTIDADE3
        {
            get { return _eNTIDADE3; }
            set
            {
                if (!ReferenceEquals(_eNTIDADE3, value))
                {
                    var previousValue = _eNTIDADE3;
                    _eNTIDADE3 = value;
                    FixupENTIDADE3(previousValue);
                    OnNavigationPropertyChanged("ENTIDADE3");
                }
            }
        }
        private ENTIDADE _eNTIDADE3;
    
        [DataMember]
        public TrackableCollection<PRODUTO> PRODUTO
        {
            get
            {
                if (_pRODUTO == null)
                {
                    _pRODUTO = new TrackableCollection<PRODUTO>();
                    _pRODUTO.CollectionChanged += FixupPRODUTO;
                }
                return _pRODUTO;
            }
            set
            {
                if (!ReferenceEquals(_pRODUTO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pRODUTO != null)
                    {
                        _pRODUTO.CollectionChanged -= FixupPRODUTO;
                    }
                    _pRODUTO = value;
                    if (_pRODUTO != null)
                    {
                        _pRODUTO.CollectionChanged += FixupPRODUTO;
                    }
                    OnNavigationPropertyChanged("PRODUTO");
                }
            }
        }
        private TrackableCollection<PRODUTO> _pRODUTO;
    
        [DataMember]
        public TrackableCollection<PED_VENDA1> PED_VENDA1
        {
            get
            {
                if (_pED_VENDA1 == null)
                {
                    _pED_VENDA1 = new TrackableCollection<PED_VENDA1>();
                    _pED_VENDA1.CollectionChanged += FixupPED_VENDA1;
                }
                return _pED_VENDA1;
            }
            set
            {
                if (!ReferenceEquals(_pED_VENDA1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pED_VENDA1 != null)
                    {
                        _pED_VENDA1.CollectionChanged -= FixupPED_VENDA1;
                    }
                    _pED_VENDA1 = value;
                    if (_pED_VENDA1 != null)
                    {
                        _pED_VENDA1.CollectionChanged += FixupPED_VENDA1;
                    }
                    OnNavigationPropertyChanged("PED_VENDA1");
                }
            }
        }
        private TrackableCollection<PED_VENDA1> _pED_VENDA1;
    
        [DataMember]
        public TrackableCollection<PED_VENDA1> PED_VENDA11
        {
            get
            {
                if (_pED_VENDA11 == null)
                {
                    _pED_VENDA11 = new TrackableCollection<PED_VENDA1>();
                    _pED_VENDA11.CollectionChanged += FixupPED_VENDA11;
                }
                return _pED_VENDA11;
            }
            set
            {
                if (!ReferenceEquals(_pED_VENDA11, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pED_VENDA11 != null)
                    {
                        _pED_VENDA11.CollectionChanged -= FixupPED_VENDA11;
                    }
                    _pED_VENDA11 = value;
                    if (_pED_VENDA11 != null)
                    {
                        _pED_VENDA11.CollectionChanged += FixupPED_VENDA11;
                    }
                    OnNavigationPropertyChanged("PED_VENDA11");
                }
            }
        }
        private TrackableCollection<PED_VENDA1> _pED_VENDA11;
    
        [DataMember]
        public TrackableCollection<PED_VENDA1> PED_VENDA12
        {
            get
            {
                if (_pED_VENDA12 == null)
                {
                    _pED_VENDA12 = new TrackableCollection<PED_VENDA1>();
                    _pED_VENDA12.CollectionChanged += FixupPED_VENDA12;
                }
                return _pED_VENDA12;
            }
            set
            {
                if (!ReferenceEquals(_pED_VENDA12, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pED_VENDA12 != null)
                    {
                        _pED_VENDA12.CollectionChanged -= FixupPED_VENDA12;
                    }
                    _pED_VENDA12 = value;
                    if (_pED_VENDA12 != null)
                    {
                        _pED_VENDA12.CollectionChanged += FixupPED_VENDA12;
                    }
                    OnNavigationPropertyChanged("PED_VENDA12");
                }
            }
        }
        private TrackableCollection<PED_VENDA1> _pED_VENDA12;
    
        [DataMember]
        public TrackableCollection<PED_VENDA1> PED_VENDA13
        {
            get
            {
                if (_pED_VENDA13 == null)
                {
                    _pED_VENDA13 = new TrackableCollection<PED_VENDA1>();
                    _pED_VENDA13.CollectionChanged += FixupPED_VENDA13;
                }
                return _pED_VENDA13;
            }
            set
            {
                if (!ReferenceEquals(_pED_VENDA13, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pED_VENDA13 != null)
                    {
                        _pED_VENDA13.CollectionChanged -= FixupPED_VENDA13;
                    }
                    _pED_VENDA13 = value;
                    if (_pED_VENDA13 != null)
                    {
                        _pED_VENDA13.CollectionChanged += FixupPED_VENDA13;
                    }
                    OnNavigationPropertyChanged("PED_VENDA13");
                }
            }
        }
        private TrackableCollection<PED_VENDA1> _pED_VENDA13;
    
        [DataMember]
        public TrackableCollection<ITEM_NF> ITEM_NF
        {
            get
            {
                if (_iTEM_NF == null)
                {
                    _iTEM_NF = new TrackableCollection<ITEM_NF>();
                    _iTEM_NF.CollectionChanged += FixupITEM_NF;
                }
                return _iTEM_NF;
            }
            set
            {
                if (!ReferenceEquals(_iTEM_NF, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_iTEM_NF != null)
                    {
                        _iTEM_NF.CollectionChanged -= FixupITEM_NF;
                    }
                    _iTEM_NF = value;
                    if (_iTEM_NF != null)
                    {
                        _iTEM_NF.CollectionChanged += FixupITEM_NF;
                    }
                    OnNavigationPropertyChanged("ITEM_NF");
                }
            }
        }
        private TrackableCollection<ITEM_NF> _iTEM_NF;
    
        [DataMember]
        public TrackableCollection<ITEM_NF> ITEM_NF1
        {
            get
            {
                if (_iTEM_NF1 == null)
                {
                    _iTEM_NF1 = new TrackableCollection<ITEM_NF>();
                    _iTEM_NF1.CollectionChanged += FixupITEM_NF1;
                }
                return _iTEM_NF1;
            }
            set
            {
                if (!ReferenceEquals(_iTEM_NF1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_iTEM_NF1 != null)
                    {
                        _iTEM_NF1.CollectionChanged -= FixupITEM_NF1;
                    }
                    _iTEM_NF1 = value;
                    if (_iTEM_NF1 != null)
                    {
                        _iTEM_NF1.CollectionChanged += FixupITEM_NF1;
                    }
                    OnNavigationPropertyChanged("ITEM_NF1");
                }
            }
        }
        private TrackableCollection<ITEM_NF> _iTEM_NF1;
    
        [DataMember]
        public TrackableCollection<NOTA_FISCAL> NOTA_FISCAL
        {
            get
            {
                if (_nOTA_FISCAL == null)
                {
                    _nOTA_FISCAL = new TrackableCollection<NOTA_FISCAL>();
                    _nOTA_FISCAL.CollectionChanged += FixupNOTA_FISCAL;
                }
                return _nOTA_FISCAL;
            }
            set
            {
                if (!ReferenceEquals(_nOTA_FISCAL, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_nOTA_FISCAL != null)
                    {
                        _nOTA_FISCAL.CollectionChanged -= FixupNOTA_FISCAL;
                    }
                    _nOTA_FISCAL = value;
                    if (_nOTA_FISCAL != null)
                    {
                        _nOTA_FISCAL.CollectionChanged += FixupNOTA_FISCAL;
                    }
                    OnNavigationPropertyChanged("NOTA_FISCAL");
                }
            }
        }
        private TrackableCollection<NOTA_FISCAL> _nOTA_FISCAL;
    
        [DataMember]
        public TrackableCollection<NOTA_FISCAL> NOTA_FISCAL1
        {
            get
            {
                if (_nOTA_FISCAL1 == null)
                {
                    _nOTA_FISCAL1 = new TrackableCollection<NOTA_FISCAL>();
                    _nOTA_FISCAL1.CollectionChanged += FixupNOTA_FISCAL1;
                }
                return _nOTA_FISCAL1;
            }
            set
            {
                if (!ReferenceEquals(_nOTA_FISCAL1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_nOTA_FISCAL1 != null)
                    {
                        _nOTA_FISCAL1.CollectionChanged -= FixupNOTA_FISCAL1;
                    }
                    _nOTA_FISCAL1 = value;
                    if (_nOTA_FISCAL1 != null)
                    {
                        _nOTA_FISCAL1.CollectionChanged += FixupNOTA_FISCAL1;
                    }
                    OnNavigationPropertyChanged("NOTA_FISCAL1");
                }
            }
        }
        private TrackableCollection<NOTA_FISCAL> _nOTA_FISCAL1;
    
        [DataMember]
        public TrackableCollection<NOTA_FISCAL> NOTA_FISCAL2
        {
            get
            {
                if (_nOTA_FISCAL2 == null)
                {
                    _nOTA_FISCAL2 = new TrackableCollection<NOTA_FISCAL>();
                    _nOTA_FISCAL2.CollectionChanged += FixupNOTA_FISCAL2;
                }
                return _nOTA_FISCAL2;
            }
            set
            {
                if (!ReferenceEquals(_nOTA_FISCAL2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_nOTA_FISCAL2 != null)
                    {
                        _nOTA_FISCAL2.CollectionChanged -= FixupNOTA_FISCAL2;
                    }
                    _nOTA_FISCAL2 = value;
                    if (_nOTA_FISCAL2 != null)
                    {
                        _nOTA_FISCAL2.CollectionChanged += FixupNOTA_FISCAL2;
                    }
                    OnNavigationPropertyChanged("NOTA_FISCAL2");
                }
            }
        }
        private TrackableCollection<NOTA_FISCAL> _nOTA_FISCAL2;
    
        [DataMember]
        public TrackableCollection<NOTA_FISCAL> NOTA_FISCAL3
        {
            get
            {
                if (_nOTA_FISCAL3 == null)
                {
                    _nOTA_FISCAL3 = new TrackableCollection<NOTA_FISCAL>();
                    _nOTA_FISCAL3.CollectionChanged += FixupNOTA_FISCAL3;
                }
                return _nOTA_FISCAL3;
            }
            set
            {
                if (!ReferenceEquals(_nOTA_FISCAL3, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_nOTA_FISCAL3 != null)
                    {
                        _nOTA_FISCAL3.CollectionChanged -= FixupNOTA_FISCAL3;
                    }
                    _nOTA_FISCAL3 = value;
                    if (_nOTA_FISCAL3 != null)
                    {
                        _nOTA_FISCAL3.CollectionChanged += FixupNOTA_FISCAL3;
                    }
                    OnNavigationPropertyChanged("NOTA_FISCAL3");
                }
            }
        }
        private TrackableCollection<NOTA_FISCAL> _nOTA_FISCAL3;
    
        [DataMember]
        public TrackableCollection<NOTA_FISCAL> NOTA_FISCAL4
        {
            get
            {
                if (_nOTA_FISCAL4 == null)
                {
                    _nOTA_FISCAL4 = new TrackableCollection<NOTA_FISCAL>();
                    _nOTA_FISCAL4.CollectionChanged += FixupNOTA_FISCAL4;
                }
                return _nOTA_FISCAL4;
            }
            set
            {
                if (!ReferenceEquals(_nOTA_FISCAL4, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_nOTA_FISCAL4 != null)
                    {
                        _nOTA_FISCAL4.CollectionChanged -= FixupNOTA_FISCAL4;
                    }
                    _nOTA_FISCAL4 = value;
                    if (_nOTA_FISCAL4 != null)
                    {
                        _nOTA_FISCAL4.CollectionChanged += FixupNOTA_FISCAL4;
                    }
                    OnNavigationPropertyChanged("NOTA_FISCAL4");
                }
            }
        }
        private TrackableCollection<NOTA_FISCAL> _nOTA_FISCAL4;
    
        [DataMember]
        public TrackableCollection<NOTA_FISCAL> NOTA_FISCAL5
        {
            get
            {
                if (_nOTA_FISCAL5 == null)
                {
                    _nOTA_FISCAL5 = new TrackableCollection<NOTA_FISCAL>();
                    _nOTA_FISCAL5.CollectionChanged += FixupNOTA_FISCAL5;
                }
                return _nOTA_FISCAL5;
            }
            set
            {
                if (!ReferenceEquals(_nOTA_FISCAL5, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_nOTA_FISCAL5 != null)
                    {
                        _nOTA_FISCAL5.CollectionChanged -= FixupNOTA_FISCAL5;
                    }
                    _nOTA_FISCAL5 = value;
                    if (_nOTA_FISCAL5 != null)
                    {
                        _nOTA_FISCAL5.CollectionChanged += FixupNOTA_FISCAL5;
                    }
                    OnNavigationPropertyChanged("NOTA_FISCAL5");
                }
            }
        }
        private TrackableCollection<NOTA_FISCAL> _nOTA_FISCAL5;
    
        [DataMember]
        public TrackableCollection<NOTA_FISCAL> NOTA_FISCAL6
        {
            get
            {
                if (_nOTA_FISCAL6 == null)
                {
                    _nOTA_FISCAL6 = new TrackableCollection<NOTA_FISCAL>();
                    _nOTA_FISCAL6.CollectionChanged += FixupNOTA_FISCAL6;
                }
                return _nOTA_FISCAL6;
            }
            set
            {
                if (!ReferenceEquals(_nOTA_FISCAL6, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_nOTA_FISCAL6 != null)
                    {
                        _nOTA_FISCAL6.CollectionChanged -= FixupNOTA_FISCAL6;
                    }
                    _nOTA_FISCAL6 = value;
                    if (_nOTA_FISCAL6 != null)
                    {
                        _nOTA_FISCAL6.CollectionChanged += FixupNOTA_FISCAL6;
                    }
                    OnNavigationPropertyChanged("NOTA_FISCAL6");
                }
            }
        }
        private TrackableCollection<NOTA_FISCAL> _nOTA_FISCAL6;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            CIDADE.Clear();
            CIDADE1 = null;
            CIDADE2 = null;
            ENTIDADE1.Clear();
            ENTIDADE2 = null;
            ENTIDADE11 = null;
            ENTIDADE12.Clear();
            VENDEDOR.Clear();
            ENTIDADE13.Clear();
            ENTIDADE3 = null;
            PRODUTO.Clear();
            PED_VENDA1.Clear();
            PED_VENDA11.Clear();
            PED_VENDA12.Clear();
            PED_VENDA13.Clear();
            ITEM_NF.Clear();
            ITEM_NF1.Clear();
            NOTA_FISCAL.Clear();
            NOTA_FISCAL1.Clear();
            NOTA_FISCAL2.Clear();
            NOTA_FISCAL3.Clear();
            NOTA_FISCAL4.Clear();
            NOTA_FISCAL5.Clear();
            NOTA_FISCAL6.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupCIDADE1(CIDADE previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ENTIDADE1.Contains(this))
            {
                previousValue.ENTIDADE1.Remove(this);
            }
    
            if (CIDADE1 != null)
            {
                if (!CIDADE1.ENTIDADE1.Contains(this))
                {
                    CIDADE1.ENTIDADE1.Add(this);
                }
    
                EntNaturCidCod = CIDADE1.CidCod;
            }
            else if (!skipKeys)
            {
                EntNaturCidCod = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("CIDADE1")
                    && (ChangeTracker.OriginalValues["CIDADE1"] == CIDADE1))
                {
                    ChangeTracker.OriginalValues.Remove("CIDADE1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("CIDADE1", previousValue);
                }
                if (CIDADE1 != null && !CIDADE1.ChangeTracker.ChangeTrackingEnabled)
                {
                    CIDADE1.StartTracking();
                }
            }
        }
    
        private void FixupCIDADE2(CIDADE previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ENTIDADE2.Contains(this))
            {
                previousValue.ENTIDADE2.Remove(this);
            }
    
            if (CIDADE2 != null)
            {
                if (!CIDADE2.ENTIDADE2.Contains(this))
                {
                    CIDADE2.ENTIDADE2.Add(this);
                }
    
                CidCod = CIDADE2.CidCod;
            }
            else if (!skipKeys)
            {
                CidCod = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("CIDADE2")
                    && (ChangeTracker.OriginalValues["CIDADE2"] == CIDADE2))
                {
                    ChangeTracker.OriginalValues.Remove("CIDADE2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("CIDADE2", previousValue);
                }
                if (CIDADE2 != null && !CIDADE2.ChangeTracker.ChangeTrackingEnabled)
                {
                    CIDADE2.StartTracking();
                }
            }
        }
    
        private void FixupENTIDADE2(ENTIDADE previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ENTIDADE1.Contains(this))
            {
                previousValue.ENTIDADE1.Remove(this);
            }
    
            if (ENTIDADE2 != null)
            {
                if (!ENTIDADE2.ENTIDADE1.Contains(this))
                {
                    ENTIDADE2.ENTIDADE1.Add(this);
                }
    
                EntCodGrupoBloq = ENTIDADE2.EntCod;
            }
            else if (!skipKeys)
            {
                EntCodGrupoBloq = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ENTIDADE2")
                    && (ChangeTracker.OriginalValues["ENTIDADE2"] == ENTIDADE2))
                {
                    ChangeTracker.OriginalValues.Remove("ENTIDADE2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ENTIDADE2", previousValue);
                }
                if (ENTIDADE2 != null && !ENTIDADE2.ChangeTracker.ChangeTrackingEnabled)
                {
                    ENTIDADE2.StartTracking();
                }
            }
        }
    
        private void FixupENTIDADE11(ENTIDADE1 previousValue)
        {
            // This is the principal end in an association that performs cascade deletes.
            // Update the event listener to refer to the new dependent.
            if (previousValue != null)
            {
                ChangeTracker.ObjectStateChanging -= previousValue.HandleCascadeDelete;
            }
    
            if (ENTIDADE11 != null)
            {
                ChangeTracker.ObjectStateChanging += ENTIDADE11.HandleCascadeDelete;
            }
    
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && ReferenceEquals(previousValue.ENTIDADE, this))
            {
                previousValue.ENTIDADE = null;
            }
    
            if (ENTIDADE11 != null)
            {
                ENTIDADE11.ENTIDADE = this;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ENTIDADE11")
                    && (ChangeTracker.OriginalValues["ENTIDADE11"] == ENTIDADE11))
                {
                    ChangeTracker.OriginalValues.Remove("ENTIDADE11");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ENTIDADE11", previousValue);
                    // This is the principal end of an identifying association, so the dependent must be deleted when the relationship is removed.
                    // If the current state of the dependent is Added, the relationship can be changed without causing the dependent to be deleted.
                    if (previousValue != null && previousValue.ChangeTracker.State != ObjectState.Added)
                    {
                        previousValue.MarkAsDeleted();
                    }
                }
                if (ENTIDADE11 != null && !ENTIDADE11.ChangeTracker.ChangeTrackingEnabled)
                {
                    ENTIDADE11.StartTracking();
                }
            }
        }
    
        private void FixupENTIDADE3(ENTIDADE previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ENTIDADE13.Contains(this))
            {
                previousValue.ENTIDADE13.Remove(this);
            }
    
            if (ENTIDADE3 != null)
            {
                if (!ENTIDADE3.ENTIDADE13.Contains(this))
                {
                    ENTIDADE3.ENTIDADE13.Add(this);
                }
    
                EntTranspCod = ENTIDADE3.EntCod;
            }
            else if (!skipKeys)
            {
                EntTranspCod = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ENTIDADE3")
                    && (ChangeTracker.OriginalValues["ENTIDADE3"] == ENTIDADE3))
                {
                    ChangeTracker.OriginalValues.Remove("ENTIDADE3");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ENTIDADE3", previousValue);
                }
                if (ENTIDADE3 != null && !ENTIDADE3.ChangeTracker.ChangeTrackingEnabled)
                {
                    ENTIDADE3.StartTracking();
                }
            }
        }
    
        private void FixupCIDADE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CIDADE item in e.NewItems)
                {
                    item.ENTIDADE = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CIDADE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CIDADE item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE, this))
                    {
                        item.ENTIDADE = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CIDADE", item);
                    }
                }
            }
        }
    
        private void FixupENTIDADE1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ENTIDADE item in e.NewItems)
                {
                    item.ENTIDADE2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ENTIDADE1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ENTIDADE item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE2, this))
                    {
                        item.ENTIDADE2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ENTIDADE1", item);
                    }
                }
            }
        }
    
        private void FixupENTIDADE12(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ENTIDADE1 item in e.NewItems)
                {
                    item.ENTIDADE2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ENTIDADE12", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ENTIDADE1 item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE2, this))
                    {
                        item.ENTIDADE2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ENTIDADE12", item);
                    }
                }
            }
        }
    
        private void FixupVENDEDOR(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (VENDEDOR item in e.NewItems)
                {
                    item.ENTIDADE = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("VENDEDOR", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (VENDEDOR item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE, this))
                    {
                        item.ENTIDADE = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("VENDEDOR", item);
                    }
                }
            }
        }
    
        private void FixupENTIDADE13(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ENTIDADE item in e.NewItems)
                {
                    item.ENTIDADE3 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ENTIDADE13", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ENTIDADE item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE3, this))
                    {
                        item.ENTIDADE3 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ENTIDADE13", item);
                    }
                }
            }
        }
    
        private void FixupPRODUTO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PRODUTO item in e.NewItems)
                {
                    item.ENTIDADE = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PRODUTO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PRODUTO item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE, this))
                    {
                        item.ENTIDADE = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PRODUTO", item);
                    }
                }
            }
        }
    
        private void FixupPED_VENDA1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PED_VENDA1 item in e.NewItems)
                {
                    item.ENTIDADE = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PED_VENDA1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PED_VENDA1 item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE, this))
                    {
                        item.ENTIDADE = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PED_VENDA1", item);
                    }
                }
            }
        }
    
        private void FixupPED_VENDA11(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PED_VENDA1 item in e.NewItems)
                {
                    item.ENTIDADE1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PED_VENDA11", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PED_VENDA1 item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE1, this))
                    {
                        item.ENTIDADE1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PED_VENDA11", item);
                    }
                }
            }
        }
    
        private void FixupPED_VENDA12(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PED_VENDA1 item in e.NewItems)
                {
                    item.ENTIDADE2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PED_VENDA12", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PED_VENDA1 item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE2, this))
                    {
                        item.ENTIDADE2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PED_VENDA12", item);
                    }
                }
            }
        }
    
        private void FixupPED_VENDA13(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PED_VENDA1 item in e.NewItems)
                {
                    item.ENTIDADE3 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PED_VENDA13", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PED_VENDA1 item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE3, this))
                    {
                        item.ENTIDADE3 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PED_VENDA13", item);
                    }
                }
            }
        }
    
        private void FixupITEM_NF(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ITEM_NF item in e.NewItems)
                {
                    item.ENTIDADE = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ITEM_NF", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ITEM_NF item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE, this))
                    {
                        item.ENTIDADE = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ITEM_NF", item);
                    }
                }
            }
        }
    
        private void FixupITEM_NF1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ITEM_NF item in e.NewItems)
                {
                    item.ENTIDADE1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ITEM_NF1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ITEM_NF item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE1, this))
                    {
                        item.ENTIDADE1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ITEM_NF1", item);
                    }
                }
            }
        }
    
        private void FixupNOTA_FISCAL(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NOTA_FISCAL item in e.NewItems)
                {
                    item.ENTIDADE = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NOTA_FISCAL", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NOTA_FISCAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE, this))
                    {
                        item.ENTIDADE = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NOTA_FISCAL", item);
                    }
                }
            }
        }
    
        private void FixupNOTA_FISCAL1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NOTA_FISCAL item in e.NewItems)
                {
                    item.ENTIDADE1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NOTA_FISCAL1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NOTA_FISCAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE1, this))
                    {
                        item.ENTIDADE1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NOTA_FISCAL1", item);
                    }
                }
            }
        }
    
        private void FixupNOTA_FISCAL2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NOTA_FISCAL item in e.NewItems)
                {
                    item.ENTIDADE2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NOTA_FISCAL2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NOTA_FISCAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE2, this))
                    {
                        item.ENTIDADE2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NOTA_FISCAL2", item);
                    }
                }
            }
        }
    
        private void FixupNOTA_FISCAL3(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NOTA_FISCAL item in e.NewItems)
                {
                    item.ENTIDADE3 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NOTA_FISCAL3", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NOTA_FISCAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE3, this))
                    {
                        item.ENTIDADE3 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NOTA_FISCAL3", item);
                    }
                }
            }
        }
    
        private void FixupNOTA_FISCAL4(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NOTA_FISCAL item in e.NewItems)
                {
                    item.ENTIDADE4 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NOTA_FISCAL4", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NOTA_FISCAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE4, this))
                    {
                        item.ENTIDADE4 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NOTA_FISCAL4", item);
                    }
                }
            }
        }
    
        private void FixupNOTA_FISCAL5(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NOTA_FISCAL item in e.NewItems)
                {
                    item.ENTIDADE5 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NOTA_FISCAL5", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NOTA_FISCAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE5, this))
                    {
                        item.ENTIDADE5 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NOTA_FISCAL5", item);
                    }
                }
            }
        }
    
        private void FixupNOTA_FISCAL6(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (NOTA_FISCAL item in e.NewItems)
                {
                    item.ENTIDADE6 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("NOTA_FISCAL6", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NOTA_FISCAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.ENTIDADE6, this))
                    {
                        item.ENTIDADE6 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("NOTA_FISCAL6", item);
                    }
                }
            }
        }

        #endregion

    }
}

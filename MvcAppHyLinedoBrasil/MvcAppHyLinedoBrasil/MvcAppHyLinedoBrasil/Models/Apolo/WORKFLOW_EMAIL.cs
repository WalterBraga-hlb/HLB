//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace MvcAppHyLinedoBrasil.Models.Apolo
{
    [DataContract(IsReference = true)]
    public partial class WORKFLOW_EMAIL: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int WorkFlowEmailSeq
        {
            get { return _workFlowEmailSeq; }
            set
            {
                if (_workFlowEmailSeq != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'WorkFlowEmailSeq' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _workFlowEmailSeq = value;
                    OnPropertyChanged("WorkFlowEmailSeq");
                }
            }
        }
        private int _workFlowEmailSeq;
    
        [DataMember]
        public string WorkFlowEmailStat
        {
            get { return _workFlowEmailStat; }
            set
            {
                if (_workFlowEmailStat != value)
                {
                    _workFlowEmailStat = value;
                    OnPropertyChanged("WorkFlowEmailStat");
                }
            }
        }
        private string _workFlowEmailStat;
    
        [DataMember]
        public string WorkFlowEmailAssunto
        {
            get { return _workFlowEmailAssunto; }
            set
            {
                if (_workFlowEmailAssunto != value)
                {
                    _workFlowEmailAssunto = value;
                    OnPropertyChanged("WorkFlowEmailAssunto");
                }
            }
        }
        private string _workFlowEmailAssunto;
    
        [DataMember]
        public Nullable<System.DateTime> WorkFlowEmailData
        {
            get { return _workFlowEmailData; }
            set
            {
                if (_workFlowEmailData != value)
                {
                    _workFlowEmailData = value;
                    OnPropertyChanged("WorkFlowEmailData");
                }
            }
        }
        private Nullable<System.DateTime> _workFlowEmailData;
    
        [DataMember]
        public string WorkFlowEmailParaNome
        {
            get { return _workFlowEmailParaNome; }
            set
            {
                if (_workFlowEmailParaNome != value)
                {
                    _workFlowEmailParaNome = value;
                    OnPropertyChanged("WorkFlowEmailParaNome");
                }
            }
        }
        private string _workFlowEmailParaNome;
    
        [DataMember]
        public string WorkFlowEmailParaEmail
        {
            get { return _workFlowEmailParaEmail; }
            set
            {
                if (_workFlowEmailParaEmail != value)
                {
                    _workFlowEmailParaEmail = value;
                    OnPropertyChanged("WorkFlowEmailParaEmail");
                }
            }
        }
        private string _workFlowEmailParaEmail;
    
        [DataMember]
        public string WorkFlowEmailDeNome
        {
            get { return _workFlowEmailDeNome; }
            set
            {
                if (_workFlowEmailDeNome != value)
                {
                    _workFlowEmailDeNome = value;
                    OnPropertyChanged("WorkFlowEmailDeNome");
                }
            }
        }
        private string _workFlowEmailDeNome;
    
        [DataMember]
        public string WorkFLowEmailDeEmail
        {
            get { return _workFLowEmailDeEmail; }
            set
            {
                if (_workFLowEmailDeEmail != value)
                {
                    _workFLowEmailDeEmail = value;
                    OnPropertyChanged("WorkFLowEmailDeEmail");
                }
            }
        }
        private string _workFLowEmailDeEmail;
    
        [DataMember]
        public string WorkFlowEmailCopiaPara
        {
            get { return _workFlowEmailCopiaPara; }
            set
            {
                if (_workFlowEmailCopiaPara != value)
                {
                    _workFlowEmailCopiaPara = value;
                    OnPropertyChanged("WorkFlowEmailCopiaPara");
                }
            }
        }
        private string _workFlowEmailCopiaPara;
    
        [DataMember]
        public string WorkFlowEmailFormato
        {
            get { return _workFlowEmailFormato; }
            set
            {
                if (_workFlowEmailFormato != value)
                {
                    _workFlowEmailFormato = value;
                    OnPropertyChanged("WorkFlowEmailFormato");
                }
            }
        }
        private string _workFlowEmailFormato;
    
        [DataMember]
        public Nullable<int> WorkFlowEmailPrioridade
        {
            get { return _workFlowEmailPrioridade; }
            set
            {
                if (_workFlowEmailPrioridade != value)
                {
                    _workFlowEmailPrioridade = value;
                    OnPropertyChanged("WorkFlowEmailPrioridade");
                }
            }
        }
        private Nullable<int> _workFlowEmailPrioridade;
    
        [DataMember]
        public string WorkFlowEmailCorpo
        {
            get { return _workFlowEmailCorpo; }
            set
            {
                if (_workFlowEmailCorpo != value)
                {
                    _workFlowEmailCorpo = value;
                    OnPropertyChanged("WorkFlowEmailCorpo");
                }
            }
        }
        private string _workFlowEmailCorpo;
    
        [DataMember]
        public string WorkFlowEmailDocEmpCod
        {
            get { return _workFlowEmailDocEmpCod; }
            set
            {
                if (_workFlowEmailDocEmpCod != value)
                {
                    _workFlowEmailDocEmpCod = value;
                    OnPropertyChanged("WorkFlowEmailDocEmpCod");
                }
            }
        }
        private string _workFlowEmailDocEmpCod;
    
        [DataMember]
        public string WorkFlowEmailDocEspec
        {
            get { return _workFlowEmailDocEspec; }
            set
            {
                if (_workFlowEmailDocEspec != value)
                {
                    _workFlowEmailDocEspec = value;
                    OnPropertyChanged("WorkFlowEmailDocEspec");
                }
            }
        }
        private string _workFlowEmailDocEspec;
    
        [DataMember]
        public string WorkFlowEmailDocSerie
        {
            get { return _workFlowEmailDocSerie; }
            set
            {
                if (_workFlowEmailDocSerie != value)
                {
                    _workFlowEmailDocSerie = value;
                    OnPropertyChanged("WorkFlowEmailDocSerie");
                }
            }
        }
        private string _workFlowEmailDocSerie;
    
        [DataMember]
        public string WorkFlowEmailDocNum
        {
            get { return _workFlowEmailDocNum; }
            set
            {
                if (_workFlowEmailDocNum != value)
                {
                    _workFlowEmailDocNum = value;
                    OnPropertyChanged("WorkFlowEmailDocNum");
                }
            }
        }
        private string _workFlowEmailDocNum;
    
        [DataMember]
        public string WorkFlowEmailObs
        {
            get { return _workFlowEmailObs; }
            set
            {
                if (_workFlowEmailObs != value)
                {
                    _workFlowEmailObs = value;
                    OnPropertyChanged("WorkFlowEmailObs");
                }
            }
        }
        private string _workFlowEmailObs;
    
        [DataMember]
        public string WorkFlowEmailArquivoHtml
        {
            get { return _workFlowEmailArquivoHtml; }
            set
            {
                if (_workFlowEmailArquivoHtml != value)
                {
                    _workFlowEmailArquivoHtml = value;
                    OnPropertyChanged("WorkFlowEmailArquivoHtml");
                }
            }
        }
        private string _workFlowEmailArquivoHtml;
    
        [DataMember]
        public string WorkFlowEmailArquivosAnexos
        {
            get { return _workFlowEmailArquivosAnexos; }
            set
            {
                if (_workFlowEmailArquivosAnexos != value)
                {
                    _workFlowEmailArquivosAnexos = value;
                    OnPropertyChanged("WorkFlowEmailArquivosAnexos");
                }
            }
        }
        private string _workFlowEmailArquivosAnexos;
    
        [DataMember]
        public string WorkFlowEmailMsgErros
        {
            get { return _workFlowEmailMsgErros; }
            set
            {
                if (_workFlowEmailMsgErros != value)
                {
                    _workFlowEmailMsgErros = value;
                    OnPropertyChanged("WorkFlowEmailMsgErros");
                }
            }
        }
        private string _workFlowEmailMsgErros;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion

    }
}
